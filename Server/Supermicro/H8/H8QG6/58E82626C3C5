
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20200925
Copyright (c) 2000 - 2020 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00005524  0x01  "A M I "  "POWERNOW"  0x00000001  "AMD "   0x00000001
 02)  MCFG  0x0000003C  0x01  "032516"  "OEMMCFG "  0x20160325  "MSFT"   0x00000097
 03)  EINJ  0x00000130  0x01  "AMIER "  "AMI_EINJ"  0x20160325  "MSFT"   0x00000097
 04)  APIC  0x00000270  0x01  "032516"  "APIC1044"  0x20160325  "MSFT"   0x00000097
 05)  SLIT  0x0000006C  0x01  "AMD   "  "AGESA   "  0x00000001  "AMD "   0x00000001
 06)  OEMB  0x000000CB  0x01  "032516"  "OEMB1044"  0x20160325  "MSFT"   0x00000097
 07)  ERST  0x00000210  0x01  "AMIER "  "AMI_ERST"  0x20160325  "MSFT"   0x00000097
 08)  DSDT  0x0000669C  0x01  "0AB11 "  "0AB11009"  0x00000009  "INTL"   0x20051117
 09)  SRAT  0x000005C0  0x02  "AMD   "  "AGESA   "  0x00000001  "AMD "   0x00000001
 10)  HEST  0x000000A8  0x01  "AMIER "  "ABC_HEST"  0x20160325  "MSFT"   0x00000097
 11)  BERT  0x00000030  0x01  "AMIER "  "AMI_BERT"  0x20160325  "MSFT"   0x00000097
 12)  FACP  0x000000F4  0x03  "032516"  "FACP1044"  0x20160325  "MSFT"   0x00000097
 13)  HPET  0x00000038  0x01  "032516"  "OEMHPET "  0x20160325  "MSFT"   0x00000097
 14)  FACS  0x00000040  0x01

Found 14 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000270
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E3
[00Ah 0010   6]                       Oem ID : "032516"
[010h 0016   8]                 Oem Table ID : "APIC1044"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 01
[02Fh 0047   1]                Local Apic ID : 20
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 02
[037h 0055   1]                Local Apic ID : 21
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 03
[03Fh 0063   1]                Local Apic ID : 22
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 04
[047h 0071   1]                Local Apic ID : 23
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 05
[04Fh 0079   1]                Local Apic ID : 24
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 06
[057h 0087   1]                Local Apic ID : 25
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 07
[05Fh 0095   1]                Local Apic ID : 26
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 08
[067h 0103   1]                Local Apic ID : 27
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 09
[06Fh 0111   1]                Local Apic ID : 28
[070h 0112   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 0A
[077h 0119   1]                Local Apic ID : 29
[078h 0120   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0B
[07Fh 0127   1]                Local Apic ID : 2A
[080h 0128   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0C
[087h 0135   1]                Local Apic ID : 2B
[088h 0136   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0D
[08Fh 0143   1]                Local Apic ID : 2C
[090h 0144   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0E
[097h 0151   1]                Local Apic ID : 2D
[098h 0152   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0F
[09Fh 0159   1]                Local Apic ID : 2E
[0A0h 0160   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 10
[0A7h 0167   1]                Local Apic ID : 2F
[0A8h 0168   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 00 [Processor Local APIC]
[0ADh 0173   1]                       Length : 08
[0AEh 0174   1]                 Processor ID : 11
[0AFh 0175   1]                Local Apic ID : 40
[0B0h 0176   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0B4h 0180   1]                Subtable Type : 00 [Processor Local APIC]
[0B5h 0181   1]                       Length : 08
[0B6h 0182   1]                 Processor ID : 12
[0B7h 0183   1]                Local Apic ID : 41
[0B8h 0184   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0BCh 0188   1]                Subtable Type : 00 [Processor Local APIC]
[0BDh 0189   1]                       Length : 08
[0BEh 0190   1]                 Processor ID : 13
[0BFh 0191   1]                Local Apic ID : 42
[0C0h 0192   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0C4h 0196   1]                Subtable Type : 00 [Processor Local APIC]
[0C5h 0197   1]                       Length : 08
[0C6h 0198   1]                 Processor ID : 14
[0C7h 0199   1]                Local Apic ID : 43
[0C8h 0200   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0CCh 0204   1]                Subtable Type : 00 [Processor Local APIC]
[0CDh 0205   1]                       Length : 08
[0CEh 0206   1]                 Processor ID : 15
[0CFh 0207   1]                Local Apic ID : 44
[0D0h 0208   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0D4h 0212   1]                Subtable Type : 00 [Processor Local APIC]
[0D5h 0213   1]                       Length : 08
[0D6h 0214   1]                 Processor ID : 16
[0D7h 0215   1]                Local Apic ID : 45
[0D8h 0216   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0DCh 0220   1]                Subtable Type : 00 [Processor Local APIC]
[0DDh 0221   1]                       Length : 08
[0DEh 0222   1]                 Processor ID : 17
[0DFh 0223   1]                Local Apic ID : 46
[0E0h 0224   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0E4h 0228   1]                Subtable Type : 00 [Processor Local APIC]
[0E5h 0229   1]                       Length : 08
[0E6h 0230   1]                 Processor ID : 18
[0E7h 0231   1]                Local Apic ID : 47
[0E8h 0232   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0ECh 0236   1]                Subtable Type : 00 [Processor Local APIC]
[0EDh 0237   1]                       Length : 08
[0EEh 0238   1]                 Processor ID : 19
[0EFh 0239   1]                Local Apic ID : 48
[0F0h 0240   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0F4h 0244   1]                Subtable Type : 00 [Processor Local APIC]
[0F5h 0245   1]                       Length : 08
[0F6h 0246   1]                 Processor ID : 1A
[0F7h 0247   1]                Local Apic ID : 49
[0F8h 0248   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0FCh 0252   1]                Subtable Type : 00 [Processor Local APIC]
[0FDh 0253   1]                       Length : 08
[0FEh 0254   1]                 Processor ID : 1B
[0FFh 0255   1]                Local Apic ID : 4A
[100h 0256   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[104h 0260   1]                Subtable Type : 00 [Processor Local APIC]
[105h 0261   1]                       Length : 08
[106h 0262   1]                 Processor ID : 1C
[107h 0263   1]                Local Apic ID : 4B
[108h 0264   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[10Ch 0268   1]                Subtable Type : 00 [Processor Local APIC]
[10Dh 0269   1]                       Length : 08
[10Eh 0270   1]                 Processor ID : 1D
[10Fh 0271   1]                Local Apic ID : 4C
[110h 0272   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[114h 0276   1]                Subtable Type : 00 [Processor Local APIC]
[115h 0277   1]                       Length : 08
[116h 0278   1]                 Processor ID : 1E
[117h 0279   1]                Local Apic ID : 4D
[118h 0280   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[11Ch 0284   1]                Subtable Type : 00 [Processor Local APIC]
[11Dh 0285   1]                       Length : 08
[11Eh 0286   1]                 Processor ID : 1F
[11Fh 0287   1]                Local Apic ID : 4E
[120h 0288   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[124h 0292   1]                Subtable Type : 00 [Processor Local APIC]
[125h 0293   1]                       Length : 08
[126h 0294   1]                 Processor ID : 20
[127h 0295   1]                Local Apic ID : 4F
[128h 0296   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[12Ch 0300   1]                Subtable Type : 00 [Processor Local APIC]
[12Dh 0301   1]                       Length : 08
[12Eh 0302   1]                 Processor ID : 21
[12Fh 0303   1]                Local Apic ID : 60
[130h 0304   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[134h 0308   1]                Subtable Type : 00 [Processor Local APIC]
[135h 0309   1]                       Length : 08
[136h 0310   1]                 Processor ID : 22
[137h 0311   1]                Local Apic ID : 61
[138h 0312   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[13Ch 0316   1]                Subtable Type : 00 [Processor Local APIC]
[13Dh 0317   1]                       Length : 08
[13Eh 0318   1]                 Processor ID : 23
[13Fh 0319   1]                Local Apic ID : 62
[140h 0320   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[144h 0324   1]                Subtable Type : 00 [Processor Local APIC]
[145h 0325   1]                       Length : 08
[146h 0326   1]                 Processor ID : 24
[147h 0327   1]                Local Apic ID : 63
[148h 0328   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[14Ch 0332   1]                Subtable Type : 00 [Processor Local APIC]
[14Dh 0333   1]                       Length : 08
[14Eh 0334   1]                 Processor ID : 25
[14Fh 0335   1]                Local Apic ID : 64
[150h 0336   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[154h 0340   1]                Subtable Type : 00 [Processor Local APIC]
[155h 0341   1]                       Length : 08
[156h 0342   1]                 Processor ID : 26
[157h 0343   1]                Local Apic ID : 65
[158h 0344   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[15Ch 0348   1]                Subtable Type : 00 [Processor Local APIC]
[15Dh 0349   1]                       Length : 08
[15Eh 0350   1]                 Processor ID : 27
[15Fh 0351   1]                Local Apic ID : 66
[160h 0352   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[164h 0356   1]                Subtable Type : 00 [Processor Local APIC]
[165h 0357   1]                       Length : 08
[166h 0358   1]                 Processor ID : 28
[167h 0359   1]                Local Apic ID : 67
[168h 0360   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[16Ch 0364   1]                Subtable Type : 00 [Processor Local APIC]
[16Dh 0365   1]                       Length : 08
[16Eh 0366   1]                 Processor ID : 29
[16Fh 0367   1]                Local Apic ID : 68
[170h 0368   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[174h 0372   1]                Subtable Type : 00 [Processor Local APIC]
[175h 0373   1]                       Length : 08
[176h 0374   1]                 Processor ID : 2A
[177h 0375   1]                Local Apic ID : 69
[178h 0376   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[17Ch 0380   1]                Subtable Type : 00 [Processor Local APIC]
[17Dh 0381   1]                       Length : 08
[17Eh 0382   1]                 Processor ID : 2B
[17Fh 0383   1]                Local Apic ID : 6A
[180h 0384   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[184h 0388   1]                Subtable Type : 00 [Processor Local APIC]
[185h 0389   1]                       Length : 08
[186h 0390   1]                 Processor ID : 2C
[187h 0391   1]                Local Apic ID : 6B
[188h 0392   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[18Ch 0396   1]                Subtable Type : 00 [Processor Local APIC]
[18Dh 0397   1]                       Length : 08
[18Eh 0398   1]                 Processor ID : 2D
[18Fh 0399   1]                Local Apic ID : 6C
[190h 0400   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[194h 0404   1]                Subtable Type : 00 [Processor Local APIC]
[195h 0405   1]                       Length : 08
[196h 0406   1]                 Processor ID : 2E
[197h 0407   1]                Local Apic ID : 6D
[198h 0408   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[19Ch 0412   1]                Subtable Type : 00 [Processor Local APIC]
[19Dh 0413   1]                       Length : 08
[19Eh 0414   1]                 Processor ID : 2F
[19Fh 0415   1]                Local Apic ID : 6E
[1A0h 0416   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1A4h 0420   1]                Subtable Type : 00 [Processor Local APIC]
[1A5h 0421   1]                       Length : 08
[1A6h 0422   1]                 Processor ID : 30
[1A7h 0423   1]                Local Apic ID : 6F
[1A8h 0424   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1ACh 0428   1]                Subtable Type : 00 [Processor Local APIC]
[1ADh 0429   1]                       Length : 08
[1AEh 0430   1]                 Processor ID : 31
[1AFh 0431   1]                Local Apic ID : 80
[1B0h 0432   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1B4h 0436   1]                Subtable Type : 00 [Processor Local APIC]
[1B5h 0437   1]                       Length : 08
[1B6h 0438   1]                 Processor ID : 32
[1B7h 0439   1]                Local Apic ID : 81
[1B8h 0440   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1BCh 0444   1]                Subtable Type : 00 [Processor Local APIC]
[1BDh 0445   1]                       Length : 08
[1BEh 0446   1]                 Processor ID : 33
[1BFh 0447   1]                Local Apic ID : 82
[1C0h 0448   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1C4h 0452   1]                Subtable Type : 00 [Processor Local APIC]
[1C5h 0453   1]                       Length : 08
[1C6h 0454   1]                 Processor ID : 34
[1C7h 0455   1]                Local Apic ID : 83
[1C8h 0456   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1CCh 0460   1]                Subtable Type : 00 [Processor Local APIC]
[1CDh 0461   1]                       Length : 08
[1CEh 0462   1]                 Processor ID : 35
[1CFh 0463   1]                Local Apic ID : 84
[1D0h 0464   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1D4h 0468   1]                Subtable Type : 00 [Processor Local APIC]
[1D5h 0469   1]                       Length : 08
[1D6h 0470   1]                 Processor ID : 36
[1D7h 0471   1]                Local Apic ID : 85
[1D8h 0472   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1DCh 0476   1]                Subtable Type : 00 [Processor Local APIC]
[1DDh 0477   1]                       Length : 08
[1DEh 0478   1]                 Processor ID : 37
[1DFh 0479   1]                Local Apic ID : 86
[1E0h 0480   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1E4h 0484   1]                Subtable Type : 00 [Processor Local APIC]
[1E5h 0485   1]                       Length : 08
[1E6h 0486   1]                 Processor ID : 38
[1E7h 0487   1]                Local Apic ID : 87
[1E8h 0488   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1ECh 0492   1]                Subtable Type : 00 [Processor Local APIC]
[1EDh 0493   1]                       Length : 08
[1EEh 0494   1]                 Processor ID : 39
[1EFh 0495   1]                Local Apic ID : 88
[1F0h 0496   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1F4h 0500   1]                Subtable Type : 00 [Processor Local APIC]
[1F5h 0501   1]                       Length : 08
[1F6h 0502   1]                 Processor ID : 3A
[1F7h 0503   1]                Local Apic ID : 89
[1F8h 0504   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[1FCh 0508   1]                Subtable Type : 00 [Processor Local APIC]
[1FDh 0509   1]                       Length : 08
[1FEh 0510   1]                 Processor ID : 3B
[1FFh 0511   1]                Local Apic ID : 8A
[200h 0512   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[204h 0516   1]                Subtable Type : 00 [Processor Local APIC]
[205h 0517   1]                       Length : 08
[206h 0518   1]                 Processor ID : 3C
[207h 0519   1]                Local Apic ID : 8B
[208h 0520   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[20Ch 0524   1]                Subtable Type : 00 [Processor Local APIC]
[20Dh 0525   1]                       Length : 08
[20Eh 0526   1]                 Processor ID : 3D
[20Fh 0527   1]                Local Apic ID : 8C
[210h 0528   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[214h 0532   1]                Subtable Type : 00 [Processor Local APIC]
[215h 0533   1]                       Length : 08
[216h 0534   1]                 Processor ID : 3E
[217h 0535   1]                Local Apic ID : 8D
[218h 0536   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[21Ch 0540   1]                Subtable Type : 00 [Processor Local APIC]
[21Dh 0541   1]                       Length : 08
[21Eh 0542   1]                 Processor ID : 3F
[21Fh 0543   1]                Local Apic ID : 8E
[220h 0544   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[224h 0548   1]                Subtable Type : 00 [Processor Local APIC]
[225h 0549   1]                       Length : 08
[226h 0550   1]                 Processor ID : 40
[227h 0551   1]                Local Apic ID : 8F
[228h 0552   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[22Ch 0556   1]                Subtable Type : 01 [I/O APIC]
[22Dh 0557   1]                       Length : 0C
[22Eh 0558   1]                  I/O Apic ID : 00
[22Fh 0559   1]                     Reserved : 00
[230h 0560   4]                      Address : FEC00000
[234h 0564   4]                    Interrupt : 00000000

[238h 0568   1]                Subtable Type : 01 [I/O APIC]
[239h 0569   1]                       Length : 0C
[23Ah 0570   1]                  I/O Apic ID : 01
[23Bh 0571   1]                     Reserved : 00
[23Ch 0572   4]                      Address : FEC20000
[240h 0576   4]                    Interrupt : 00000018

[244h 0580   1]                Subtable Type : 01 [I/O APIC]
[245h 0581   1]                       Length : 0C
[246h 0582   1]                  I/O Apic ID : 02
[247h 0583   1]                     Reserved : 00
[248h 0584   4]                      Address : DA000000
[24Ch 0588   4]                    Interrupt : 00000038

[250h 0592   1]                Subtable Type : 02 [Interrupt Source Override]
[251h 0593   1]                       Length : 0A
[252h 0594   1]                          Bus : 00
[253h 0595   1]                       Source : 00
[254h 0596   4]                    Interrupt : 00000002
[258h 0600   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[25Ah 0602   1]                Subtable Type : 02 [Interrupt Source Override]
[25Bh 0603   1]                       Length : 0A
[25Ch 0604   1]                          Bus : 00
[25Dh 0605   1]                       Source : 09
[25Eh 0606   4]                    Interrupt : 00000009
[262h 0610   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[264h 0612   1]                Subtable Type : 04 [Local APIC NMI]
[265h 0613   1]                       Length : 06
[266h 0614   1]                 Processor ID : FF
[267h 0615   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0
[269h 0617   1]         Interrupt Input LINT : 01

[26Ah 0618   1]                Subtable Type : 04 [Local APIC NMI]
[26Bh 0619   1]                       Length : 06
[26Ch 0620   1]                 Processor ID : 01
[26Dh 0621   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[26Fh 0623   1]         Interrupt Input LINT : 01

Raw Table Data: Length 624 (0x270)

    0000: 41 50 49 43 70 02 00 00 01 E3 30 33 32 35 31 36  // APICp.....032516
    0010: 41 50 49 43 31 30 34 34 25 03 16 20 4D 53 46 54  // APIC1044%.. MSFT
    0020: 97 00 00 00 00 00 E0 FE 01 00 00 00 00 08 01 20  // ............... 
    0030: 01 00 00 00 00 08 02 21 01 00 00 00 00 08 03 22  // .......!......."
    0040: 01 00 00 00 00 08 04 23 01 00 00 00 00 08 05 24  // .......#.......$
    0050: 01 00 00 00 00 08 06 25 01 00 00 00 00 08 07 26  // .......%.......&
    0060: 01 00 00 00 00 08 08 27 01 00 00 00 00 08 09 28  // .......'.......(
    0070: 01 00 00 00 00 08 0A 29 01 00 00 00 00 08 0B 2A  // .......).......*
    0080: 01 00 00 00 00 08 0C 2B 01 00 00 00 00 08 0D 2C  // .......+.......,
    0090: 01 00 00 00 00 08 0E 2D 01 00 00 00 00 08 0F 2E  // .......-........
    00A0: 01 00 00 00 00 08 10 2F 01 00 00 00 00 08 11 40  // ......./.......@
    00B0: 01 00 00 00 00 08 12 41 01 00 00 00 00 08 13 42  // .......A.......B
    00C0: 01 00 00 00 00 08 14 43 01 00 00 00 00 08 15 44  // .......C.......D
    00D0: 01 00 00 00 00 08 16 45 01 00 00 00 00 08 17 46  // .......E.......F
    00E0: 01 00 00 00 00 08 18 47 01 00 00 00 00 08 19 48  // .......G.......H
    00F0: 01 00 00 00 00 08 1A 49 01 00 00 00 00 08 1B 4A  // .......I.......J
    0100: 01 00 00 00 00 08 1C 4B 01 00 00 00 00 08 1D 4C  // .......K.......L
    0110: 01 00 00 00 00 08 1E 4D 01 00 00 00 00 08 1F 4E  // .......M.......N
    0120: 01 00 00 00 00 08 20 4F 01 00 00 00 00 08 21 60  // ...... O......!`
    0130: 01 00 00 00 00 08 22 61 01 00 00 00 00 08 23 62  // ......"a......#b
    0140: 01 00 00 00 00 08 24 63 01 00 00 00 00 08 25 64  // ......$c......%d
    0150: 01 00 00 00 00 08 26 65 01 00 00 00 00 08 27 66  // ......&e......'f
    0160: 01 00 00 00 00 08 28 67 01 00 00 00 00 08 29 68  // ......(g......)h
    0170: 01 00 00 00 00 08 2A 69 01 00 00 00 00 08 2B 6A  // ......*i......+j
    0180: 01 00 00 00 00 08 2C 6B 01 00 00 00 00 08 2D 6C  // ......,k......-l
    0190: 01 00 00 00 00 08 2E 6D 01 00 00 00 00 08 2F 6E  // .......m....../n
    01A0: 01 00 00 00 00 08 30 6F 01 00 00 00 00 08 31 80  // ......0o......1.
    01B0: 01 00 00 00 00 08 32 81 01 00 00 00 00 08 33 82  // ......2.......3.
    01C0: 01 00 00 00 00 08 34 83 01 00 00 00 00 08 35 84  // ......4.......5.
    01D0: 01 00 00 00 00 08 36 85 01 00 00 00 00 08 37 86  // ......6.......7.
    01E0: 01 00 00 00 00 08 38 87 01 00 00 00 00 08 39 88  // ......8.......9.
    01F0: 01 00 00 00 00 08 3A 89 01 00 00 00 00 08 3B 8A  // ......:.......;.
    0200: 01 00 00 00 00 08 3C 8B 01 00 00 00 00 08 3D 8C  // ......<.......=.
    0210: 01 00 00 00 00 08 3E 8D 01 00 00 00 00 08 3F 8E  // ......>.......?.
    0220: 01 00 00 00 00 08 40 8F 01 00 00 00 01 0C 00 00  // ......@.........
    0230: 00 00 C0 FE 00 00 00 00 01 0C 01 00 00 00 C2 FE  // ................
    0240: 18 00 00 00 01 0C 02 00 00 00 00 DA 38 00 00 00  // ............8...
    0250: 02 0A 00 00 02 00 00 00 00 00 02 0A 00 09 09 00  // ................
    0260: 00 00 0F 00 04 06 FF 00 00 01 04 06 01 05 00 01  // ................


BERT
----
[000h 0000   4]                    Signature : "BERT"    [Boot Error Record Table]
[004h 0004   4]                 Table Length : 00000030
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : FB
[00Ah 0010   6]                       Oem ID : "AMIER"
[010h 0016   8]                 Oem Table ID : "AMI_BERT"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]     Boot Error Region Length : 00000054
[028h 0040   8]    Boot Error Region Address : 00000000D7E80490

Raw Table Data: Length 48 (0x30)

    0000: 42 45 52 54 30 00 00 00 01 FB 41 4D 49 45 52 00  // BERT0.....AMIER.
    0010: 41 4D 49 5F 42 45 52 54 25 03 16 20 4D 53 46 54  // AMI_BERT%.. MSFT
    0020: 97 00 00 00 54 00 00 00 90 04 E8 D7 00 00 00 00  // ....T...........


DSDT
----
DefinitionBlock ("", "DSDT", 1, "0AB11", "0AB11009", 0x00000009)
{
    Name (OSTY, Ones)
    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ICMS,   8, 
        DCMS,   8
    }

    IndexField (ICMS, DCMS, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
        Offset (0x04), 
        Offset (0x08), 
        BS_A,   32
    }

    OperationRegion (CFGS, SystemMemory, BS_A, 0x80)
    Field (CFGS, AnyAcc, NoLock, Preserve)
    {
        Offset (0x04), 
        PCIE,   32, 
        Offset (0x31), 
        TPMR,   1, 
        STHP,   1, 
        SHPG,   1, 
        OSCF,   1
    }

    OperationRegion (CMPT, SystemIO, 0x0C50, 0x03)
    Field (CMPT, ByteAcc, NoLock, Preserve)
    {
        CMID,   8, 
            ,   6, 
        GPCT,   2, 
        GP0I,   1, 
        GP1I,   1, 
        GP2I,   1, 
        GP3I,   1, 
        GP4I,   1, 
        GP5I,   1, 
        GP6I,   1, 
        GP7I,   1
    }

    OperationRegion (PCFG, SystemMemory, PCIE, 0x02000000)
    Field (PCFG, AnyAcc, NoLock, Preserve)
    {
        Offset (0x38078), 
        Offset (0x3807A), 
        PMS7,   1, 
        Offset (0x50078), 
        Offset (0x5007A), 
        PMSA,   1, 
        Offset (0x8800A), 
        STCL,   16, 
        Offset (0xA0004), 
        SMIE,   1, 
        SMME,   1, 
        Offset (0xA0008), 
        RVID,   8, 
        Offset (0xA0014), 
        SMB1,   32, 
        Offset (0xA0050), 
            ,   10, 
        GP51,   1, 
        Offset (0xA0056), 
            ,   11, 
        GP64,   1, 
        Offset (0xA0082), 
            ,   2, 
        G31O,   1, 
        Offset (0xA0090), 
        SM00,   16, 
        Offset (0xA00BA), 
            ,   4, 
        ESMP,   1, 
        Offset (0xA00BB), 
            ,   1, 
        HSMP,   1, 
        Offset (0xA00E1), 
            ,   6, 
        ACIR,   1, 
        Offset (0xA4004), 
        PCMD,   2
    }

    OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
    Field (PMIO, ByteAcc, NoLock, Preserve)
    {
        INPM,   8, 
        DAPM,   8
    }

    IndexField (INPM, DAPM, ByteAcc, NoLock, Preserve)
    {
            ,   1, 
        TM1E,   1, 
        TM2E,   1, 
        Offset (0x01), 
            ,   1, 
        TM1S,   1, 
        TM2S,   1, 
        Offset (0x04), 
            ,   7, 
        SLPS,   1, 
        Offset (0x07), 
            ,   7, 
        CLPS,   1, 
        Offset (0x0D), 
        EV0S,   1, 
        EV1S,   1, 
        Offset (0x10), 
            ,   6, 
        PWDE,   1, 
        Offset (0x1C), 
            ,   3, 
        MKME,   1, 
        PI3E,   1, 
        PI2E,   1, 
        PI1E,   1, 
        PI0E,   1, 
            ,   3, 
        MKMS,   1, 
        PI3S,   1, 
        PI2S,   1, 
        PI1S,   1, 
        PI0S,   1, 
        Offset (0x20), 
        P1EB,   16, 
        Offset (0x36), 
            ,   6, 
        GV6P,   1, 
        GV7P,   1, 
        EV0C,   1, 
        EV1C,   1, 
            ,   1, 
        GM0P,   1, 
        GM1P,   1, 
        GM2P,   1, 
        GM3P,   1, 
        GM8P,   1, 
            ,   1, 
        GM4P,   1, 
        GM5P,   1, 
            ,   1, 
        GM6P,   1, 
        GM7P,   1, 
        Offset (0x3B), 
        GPX0,   1, 
        GPX4,   1, 
        GPX5,   1, 
        GPX1,   1, 
        GPX6,   1, 
        GPX7,   1, 
        GPX2,   1, 
        GPX3,   1, 
        Offset (0x55), 
        SPRE,   1, 
            ,   1, 
            ,   1, 
        EPNM,   1, 
        DPPF,   1, 
        FNGS,   1, 
        Offset (0x61), 
            ,   7, 
        R617,   1, 
        Offset (0x65), 
            ,   4, 
        RSTU,   1, 
        Offset (0x68), 
            ,   3, 
        TPDE,   1, 
            ,   1, 
        Offset (0x7C), 
            ,   2, 
        BLNK,   2, 
        Offset (0x84), 
        WPNE,   1, 
        WPAG,   1, 
        Offset (0x92), 
            ,   7, 
        GV7S,   1, 
        Offset (0x96), 
        GP8I,   1, 
        GP9I,   1, 
        Offset (0x9A), 
            ,   7, 
        HECO,   1, 
        Offset (0xA8), 
        PI4E,   1, 
        PI5E,   1, 
        PI6E,   1, 
        PI7E,   1, 
        Offset (0xA9), 
        PI4S,   1, 
        PI5S,   1, 
        PI6S,   1, 
        PI7S,   1
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
            ,   14, 
        PEWS,   1, 
        WSTA,   1, 
            ,   14, 
        PEWD,   1
    }

    Method (SPTS, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        If ((Arg0 == One))
        {
            BLNK = 0x02
        }

        If ((Arg0 == 0x02))
        {
            BLNK = Zero
        }

        If ((Arg0 == 0x03))
        {
            BLNK = One
        }

        CLPS = One
        SLPS = One
        If ((RVID <= 0x13))
        {
            PWDE = Zero
        }
    }

    Method (SWAK, 1, NotSerialized)
    {
        HECO = One
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        BLNK = 0x03
        PMS7 = One
        PMSA = One
    }

    Method (TRMD, 1, NotSerialized)
    {
        SPRE = Arg0
        TPDE = Arg0
    }

    Name (DP80, 0x80)
    Name (DP90, 0x90)
    Name (SPIO, 0x2E)
    Name (SEIO, 0x164E)
    Name (IO1B, 0x0F40)
    Name (IO1L, 0x80)
    Name (IO2B, 0x0295)
    Name (IO2L, 0x02)
    Name (APIC, One)
    Name (MR64, Zero)
    Name (PMBS, 0x0800)
    Name (PMLN, 0xA0)
    Name (GPBS, Zero)
    Name (GPLN, Zero)
    Name (SMB0, 0x0B00)
    Name (SMBB, 0x0B20)
    Name (SMBM, 0x10)
    Name (SMBL, 0x20)
    Name (PCIB, 0xE0000000)
    Name (PCIL, 0x10000000)
    Name (PEPM, One)
    Name (PEER, One)
    Name (PECS, One)
    Name (SMIT, 0xB0)
    Name (CMRQ, 0xE0)
    Name (CMER, 0xE1)
    Name (CMOR, 0xE3)
    Name (PEHP, Zero)
    Name (SHPC, Zero)
    OperationRegion (BIOS, SystemMemory, 0xD7E94064, 0xFF)
    Field (BIOS, ByteAcc, NoLock, Preserve)
    {
        SS1,    1, 
        SS2,    1, 
        SS3,    1, 
        SS4,    1, 
        Offset (0x01), 
        IOST,   16, 
        TOPM,   32, 
        ROMS,   32, 
        MG1B,   32, 
        MG1L,   32, 
        MG2B,   32, 
        MG2L,   32, 
        Offset (0x1C), 
        DMAX,   8, 
        HPTA,   32, 
        CPB0,   32, 
        CPB1,   32, 
        CPB2,   32, 
        CPB3,   32, 
        ASSB,   8, 
        AOTB,   8, 
        AAXB,   32, 
        SMIF,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        MPEN,   8, 
        TPMF,   8, 
        MG3B,   32, 
        MG3L,   32, 
        MH1B,   32, 
        MH1L,   32, 
        OSTP,   8, 
        M4BL,   32, 
        M4BH,   32, 
        M4LL,   32, 
        M4LH,   32, 
        VGAR,   8, 
        SEB0,   8, 
        SUB0,   8, 
        SEB1,   8, 
        SUB1,   8, 
        SEB2,   8, 
        SUB2,   8, 
        SEB3,   8, 
        SUB3,   8, 
        IOB0,   16, 
        IOL0,   16, 
        IOB1,   16, 
        IOL1,   16, 
        IOB2,   16, 
        IOL2,   16, 
        IOB3,   16, 
        IOL3,   16, 
        GP4S,   32, 
        GP4L,   32, 
        GP5S,   32, 
        GP5L,   32, 
        GP6S,   32, 
        GP6L,   32, 
        GP7S,   32, 
        GP7L,   32, 
        GP8S,   32, 
        GP8L,   32, 
        GP9S,   32, 
        GP9L,   32
    }

    Method (RRIO, 4, NotSerialized)
    {
        Debug = "RRIO"
    }

    Method (RDMA, 3, NotSerialized)
    {
        Debug = "rDMA"
    }

    Name (PICM, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        If (Arg0)
        {
            DBG8 = 0xAA
        }
        Else
        {
            DBG8 = 0xAC
        }

        PICM = Arg0
    }

    Name (OSVR, Ones)
    Method (OSFL, 0, NotSerialized)
    {
        If ((OSVR != Ones))
        {
            Return (OSVR) /* \OSVR */
        }

        Name (TTT0, Zero)
        TTT0 = OSYS ()
        If ((TTT0 == One))
        {
            OSVR = 0x03
        }
        ElseIf ((TTT0 == 0x10))
        {
            OSVR = One
        }
        ElseIf ((TTT0 == 0x11))
        {
            OSVR = 0x02
        }
        ElseIf ((TTT0 == 0x12))
        {
            OSVR = 0x04
        }
        ElseIf ((TTT0 == 0x13))
        {
            OSVR = Zero
        }
        ElseIf ((TTT0 == 0x14))
        {
            OSVR = Zero
        }
        ElseIf ((TTT0 == 0x15))
        {
            OSVR = Zero
        }
        ElseIf ((TTT0 == 0x16))
        {
            OSVR = Zero
        }

        Return (OSVR) /* \OSVR */
    }

    Method (MCTH, 2, NotSerialized)
    {
        If ((SizeOf (Arg0) < SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = (SizeOf (Arg0) + One)
        Name (BUF0, Buffer (Local0){})
        Name (BUF1, Buffer (Local0){})
        BUF0 = Arg0
        BUF1 = Arg1
        While (Local0)
        {
            Local0--
            If ((DerefOf (BUF0 [Local0]) != DerefOf (BUF1 [Local0]
                )))
            {
                Return (Zero)
            }
        }

        Return (One)
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        Local0 = (SS1 << One)
        Local0 |= (SS2 << 0x02)
        Local0 |= (SS3 << 0x03)
        Local0 |= (SS4 << 0x04)
        If (((One << Arg1) & Local0))
        {
            PRWP [One] = Arg1
        }
        Else
        {
            Local0 >>= One
            If (((OSFL () == One) || (OSFL () == 0x02)))
            {
                FindSetLeftBit (Local0, PRWP [One])
            }
            Else
            {
                FindSetRightBit (Local0, PRWP [One])
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Name (WAKP, Package (0x02)
    {
        Zero, 
        Zero
    })
    OperationRegion (DEB0, SystemIO, DP80, One)
    Field (DEB0, ByteAcc, NoLock, Preserve)
    {
        DBG8,   8
    }

    OperationRegion (DEB1, SystemIO, DP90, 0x02)
    Field (DEB1, WordAcc, NoLock, Preserve)
    {
        DBG9,   16
    }

    Method (OSYS, 0, NotSerialized)
    {
        Local0 = 0x10
        If (CondRefOf (_OSI, Local1))
        {
            If (_OSI ("Windows 2000"))
            {
                Local0 = 0x12
            }

            If (_OSI ("Windows 2001"))
            {
                Local0 = 0x13
            }

            If (_OSI ("Windows 2001 SP1"))
            {
                Local0 = 0x13
            }

            If (_OSI ("Windows 2001 SP2"))
            {
                Local0 = 0x13
            }

            If (_OSI ("Windows 2001.1"))
            {
                Local0 = 0x14
            }

            If (_OSI ("Windows 2001.1 SP1"))
            {
                Local0 = 0x14
            }

            If (_OSI ("Windows 2006"))
            {
                Local0 = 0x15
            }

            If (_OSI ("Windows 2009"))
            {
                Local0 = 0x16
            }
        }
        ElseIf (MCTH (_OS, "Microsoft Windows NT"))
        {
            Local0 = 0x12
        }
        ElseIf (MCTH (_OS, "Microsoft WindowsME: Millennium Edition"))
        {
            Local0 = 0x11
        }

        Return (Local0)
    }

    Scope (_PR)
    {
        Processor (P001, 0x01, 0x00000810, 0x06){}
        Processor (P002, 0x02, 0x00000000, 0x00){}
        Processor (P003, 0x03, 0x00000000, 0x00){}
        Processor (P004, 0x04, 0x00000000, 0x00){}
        Processor (P005, 0x05, 0x00000000, 0x00){}
        Processor (P006, 0x06, 0x00000000, 0x00){}
        Processor (P007, 0x07, 0x00000000, 0x00){}
        Processor (P008, 0x08, 0x00000000, 0x00){}
        Processor (P009, 0x09, 0x00000000, 0x00){}
        Processor (P00A, 0x0A, 0x00000000, 0x00){}
        Processor (P00B, 0x0B, 0x00000000, 0x00){}
        Processor (P00C, 0x0C, 0x00000000, 0x00){}
        Processor (P00D, 0x0D, 0x00000000, 0x00){}
        Processor (P00E, 0x0E, 0x00000000, 0x00){}
        Processor (P00F, 0x0F, 0x00000000, 0x00){}
        Processor (P010, 0x10, 0x00000000, 0x00){}
        Processor (P011, 0x11, 0x00000000, 0x00){}
        Processor (P012, 0x12, 0x00000000, 0x00){}
        Processor (P013, 0x13, 0x00000000, 0x00){}
        Processor (P014, 0x14, 0x00000000, 0x00){}
        Processor (P015, 0x15, 0x00000000, 0x00){}
        Processor (P016, 0x16, 0x00000000, 0x00){}
        Processor (P017, 0x17, 0x00000000, 0x00){}
        Processor (P018, 0x18, 0x00000000, 0x00){}
        Processor (P019, 0x19, 0x00000000, 0x00){}
        Processor (P01A, 0x1A, 0x00000000, 0x00){}
        Processor (P01B, 0x1B, 0x00000000, 0x00){}
        Processor (P01C, 0x1C, 0x00000000, 0x00){}
        Processor (P01D, 0x1D, 0x00000000, 0x00){}
        Processor (P01E, 0x1E, 0x00000000, 0x00){}
        Processor (P01F, 0x1F, 0x00000000, 0x00){}
        Processor (P020, 0x20, 0x00000000, 0x00){}
        Processor (P021, 0x21, 0x00000000, 0x00){}
        Processor (P022, 0x22, 0x00000000, 0x00){}
        Processor (P023, 0x23, 0x00000000, 0x00){}
        Processor (P024, 0x24, 0x00000000, 0x00){}
        Processor (P025, 0x25, 0x00000000, 0x00){}
        Processor (P026, 0x26, 0x00000000, 0x00){}
        Processor (P027, 0x27, 0x00000000, 0x00){}
        Processor (P028, 0x28, 0x00000000, 0x00){}
        Processor (P029, 0x29, 0x00000000, 0x00){}
        Processor (P02A, 0x2A, 0x00000000, 0x00){}
        Processor (P02B, 0x2B, 0x00000000, 0x00){}
        Processor (P02C, 0x2C, 0x00000000, 0x00){}
        Processor (P02D, 0x2D, 0x00000000, 0x00){}
        Processor (P02E, 0x2E, 0x00000000, 0x00){}
        Processor (P02F, 0x2F, 0x00000000, 0x00){}
        Processor (P030, 0x30, 0x00000000, 0x00){}
        Processor (P031, 0x31, 0x00000000, 0x00){}
        Processor (P032, 0x32, 0x00000000, 0x00){}
        Processor (P033, 0x33, 0x00000000, 0x00){}
        Processor (P034, 0x34, 0x00000000, 0x00){}
        Processor (P035, 0x35, 0x00000000, 0x00){}
        Processor (P036, 0x36, 0x00000000, 0x00){}
        Processor (P037, 0x37, 0x00000000, 0x00){}
        Processor (P038, 0x38, 0x00000000, 0x00){}
        Processor (P039, 0x39, 0x00000000, 0x00){}
        Processor (P03A, 0x3A, 0x00000000, 0x00){}
        Processor (P03B, 0x3B, 0x00000000, 0x00){}
        Processor (P03C, 0x3C, 0x00000000, 0x00){}
        Processor (P03D, 0x3D, 0x00000000, 0x00){}
        Processor (P03E, 0x3E, 0x00000000, 0x00){}
        Processor (P03F, 0x3F, 0x00000000, 0x00){}
        Processor (P040, 0x40, 0x00000000, 0x00){}
        Alias (P001, CPU1)
        Alias (P002, CPU2)
        Alias (P003, CPU3)
        Alias (P004, CPU4)
        Alias (P005, CPU5)
        Alias (P006, CPU6)
        Alias (P007, CPU7)
        Alias (P008, CPU8)
        Alias (P009, CPU9)
    }

    Scope (_SB)
    {
        Name (PR00, Package (0x13)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                0x03, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                LNKG, 
                Zero
            }
        })
        Name (AR00, Package (0x13)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x37
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x34
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x36
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                0x03, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x16
            }
        })
        Name (PR12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR12, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x18
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x19
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x1A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x1B
            }
        })
        Name (PR14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR14, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x2C
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x2D
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2E
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2F
            }
        })
        Name (PR1B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR1B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x20
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x21
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x22
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x23
            }
        })
        Name (PR1C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKH, 
                Zero
            }
        })
        Name (AR1C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x24
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x25
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x26
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x27
            }
        })
        Name (PR1D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR1D, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x28
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x29
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x2A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x2B
            }
        })
        Name (PR40, Package (0x03)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                LNKG, 
                Zero
            }
        })
        Name (AR40, Package (0x03)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x57
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x54
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x56
            }
        })
        Name (PR42, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR42, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x38
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x39
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x3A
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x3B
            }
        })
        Name (PR4B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR4B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x40
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x41
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x42
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x43
            }
        })
        Name (PR0C, Package (0x01)
        {
            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKE, 
                Zero
            }
        })
        Name (AR0C, Package (0x01)
        {
            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x14
            }
        })
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {4,7,10,11,12,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, 0x00180001)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00) /* \_SB_.AR00 */
                }

                Return (PR00) /* \_SB_.PR00 */
            }

            Method (NPTS, 1, NotSerialized)
            {
            }

            Method (NWAK, 1, NotSerialized)
            {
            }

            Device (RD8A)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (NB2, PCI_Config, Zero, 0x0100)
                Field (NB2, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x60), 
                    MI,     32, 
                    MD,     32, 
                    Offset (0x94), 
                    HI,     32, 
                    HD,     32, 
                    Offset (0xF8), 
                    API,    32, 
                    APD,    32
                }

                Device (NMEM)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x14)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y00)
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y01)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.RD8A.NMEM._Y00._BAS, BAS1)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.RD8A.NMEM._Y00._LEN, LEN1)  // _LEN: Length
                        MI = 0x3C
                        Local0 = MD /* \_SB_.PCI0.RD8A.MD__ */
                        If ((Local0 & 0x40))
                        {
                            MI = 0x3A
                            BAS1 = (MD & 0xFFFFFF00)
                            LEN1 = ((MD & 0xFF) << 0x17)
                        }

                        CreateDWordField (CRS, \_SB.PCI0.RD8A.NMEM._Y01._BAS, BAS2)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.RD8A.NMEM._Y01._LEN, LEN2)  // _LEN: Length
                        API = Zero
                        Local1 = APD /* \_SB_.PCI0.RD8A.APD_ */
                        If ((Local1 & One))
                        {
                            LEN2 = 0x0100
                            API = One
                            BAS2 = (APD & 0xFFFFFF00)
                        }

                        Return (CRS) /* \_SB_.PCI0.RD8A.NMEM.CRS_ */
                    }
                }
            }

            Device (IOMA)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                OperationRegion (NBF2, PCI_Config, Zero, 0x0100)
                Field (NBF2, AnyAcc, NoLock, Preserve)
                {
                    DID,    32, 
                    Offset (0x44), 
                    MBAS,   32
                }

                Device (UMEM)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x15)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y02)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.IOMA.UMEM._Y02._BAS, BAS3)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.IOMA.UMEM._Y02._LEN, LEN3)  // _LEN: Length
                        If ((DID != Ones))
                        {
                            LEN3 = 0x4000
                            BAS3 = (MBAS & 0xFFFFFF00)
                        }

                        Return (CRS) /* \_SB_.PCI0.IOMA.UMEM.CRS_ */
                    }
                }
            }

            Device (PC02)
            {
                Name (_ADR, 0x00020000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR12) /* \_SB_.AR12 */
                    }

                    Return (PR12) /* \_SB_.PR12 */
                }
            }

            Device (PC04)
            {
                Name (_ADR, 0x00040000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR14) /* \_SB_.AR14 */
                    }

                    Return (PR14) /* \_SB_.PR14 */
                }
            }

            Device (PC0B)
            {
                Name (_ADR, 0x000B0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR1B) /* \_SB_.AR1B */
                    }

                    Return (PR1B) /* \_SB_.PR1B */
                }
            }

            Device (PC0C)
            {
                Name (_ADR, 0x000C0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR1C) /* \_SB_.AR1C */
                    }

                    Return (PR1C) /* \_SB_.PR1C */
                }
            }

            Device (PC0D)
            {
                Name (_ADR, 0x000D0000)  // _ADR: Address
                Device (KWL1)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PMCS, PCI_Config, 0x44, 0x02)
                    Field (PMCS, ByteAcc, NoLock, Preserve)
                    {
                        POST,   2
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        Stall (0x1E)
                        POST = Zero
                        Stall (0x1E)
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        POST = 0x03
                    }
                }

                Device (KWL2)
                {
                    Name (_ADR, One)  // _ADR: Address
                    OperationRegion (PMCS, PCI_Config, 0x44, 0x02)
                    Field (PMCS, ByteAcc, NoLock, Preserve)
                    {
                        POST,   2
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        Stall (0x1E)
                        POST = Zero
                        Stall (0x1E)
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        POST = 0x03
                    }
                }

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR1D) /* \_SB_.AR1D */
                    }

                    Return (PR1D) /* \_SB_.PR1D */
                }
            }

            Device (SMBS)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
                OperationRegion (SMBS, PCI_Config, Zero, 0x0100)
                Field (SMBS, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x08), 
                    REV,    8
                }

                OperationRegion (WIDE, PCI_Config, 0xAD, One)
                Field (WIDE, AnyAcc, NoLock, Preserve)
                {
                    DUM1,   4, 
                    SOPT,   1
                }
            }

            Device (IDEC)
            {
                Name (_ADR, 0x00140001)  // _ADR: Address
                Name (UDMT, Package (0x08)
                {
                    0x78, 
                    0x5A, 
                    0x3C, 
                    0x2D, 
                    0x1E, 
                    0x14, 
                    0x0F, 
                    Zero
                })
                Name (PIOT, Package (0x06)
                {
                    0x0258, 
                    0x0186, 
                    0x010E, 
                    0xB4, 
                    0x78, 
                    Zero
                })
                Name (PITR, Package (0x06)
                {
                    0x99, 
                    0x47, 
                    0x34, 
                    0x22, 
                    0x20, 
                    0x99
                })
                Name (MDMT, Package (0x04)
                {
                    0x01E0, 
                    0x96, 
                    0x78, 
                    Zero
                })
                Name (MDTR, Package (0x04)
                {
                    0x77, 
                    0x21, 
                    0x20, 
                    0xFF
                })
                OperationRegion (IDE, PCI_Config, 0x40, 0x20)
                Field (IDE, AnyAcc, NoLock, Preserve)
                {
                    PPIT,   16, 
                    SPIT,   16, 
                    PMDT,   16, 
                    SMDT,   16, 
                    PPIC,   8, 
                    SPIC,   8, 
                    PPIM,   8, 
                    SPIM,   8, 
                    Offset (0x14), 
                    PUDC,   2, 
                    SUDC,   2, 
                    Offset (0x16), 
                    PUDM,   8, 
                    SUDM,   8
                }

                Method (GETT, 1, NotSerialized)
                {
                    Local0 = (Arg0 & 0x0F)
                    Local1 = (Arg0 >> 0x04)
                    Return ((0x1E * ((Local0 + One) + (Local1 + One)
                        )))
                }

                Method (GTM, 1, NotSerialized)
                {
                    CreateByteField (Arg0, Zero, PIT1)
                    CreateByteField (Arg0, One, PIT0)
                    CreateByteField (Arg0, 0x02, MDT1)
                    CreateByteField (Arg0, 0x03, MDT0)
                    CreateByteField (Arg0, 0x04, PICX)
                    CreateByteField (Arg0, 0x05, UDCX)
                    CreateByteField (Arg0, 0x06, UDMX)
                    Name (BUF, Buffer (0x14)
                    {
                        /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                        /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                        /* 0010 */  0x00, 0x00, 0x00, 0x00                           // ....
                    })
                    CreateDWordField (BUF, Zero, PIO0)
                    CreateDWordField (BUF, 0x04, DMA0)
                    CreateDWordField (BUF, 0x08, PIO1)
                    CreateDWordField (BUF, 0x0C, DMA1)
                    CreateDWordField (BUF, 0x10, FLAG)
                    If ((PICX & One))
                    {
                        Return (BUF) /* \_SB_.PCI0.IDEC.GTM_.BUF_ */
                    }

                    PIO0 = GETT (PIT0)
                    PIO1 = GETT (PIT1)
                    If ((UDCX & One))
                    {
                        FLAG |= One
                        DMA0 = DerefOf (UDMT [(UDMX & 0x0F)])
                    }
                    Else
                    {
                        DMA0 = GETT (MDT0)
                    }

                    If ((UDCX & 0x02))
                    {
                        FLAG |= 0x04
                        DMA1 = DerefOf (UDMT [(UDMX >> 0x04)])
                    }
                    Else
                    {
                        DMA1 = GETT (MDT1)
                    }

                    FLAG |= 0x1A
                    Return (BUF) /* \_SB_.PCI0.IDEC.GTM_.BUF_ */
                }

                Method (STM, 3, NotSerialized)
                {
                    CreateDWordField (Arg0, Zero, PIO0)
                    CreateDWordField (Arg0, 0x04, DMA0)
                    CreateDWordField (Arg0, 0x08, PIO1)
                    CreateDWordField (Arg0, 0x0C, DMA1)
                    CreateDWordField (Arg0, 0x10, FLAG)
                    Name (BUF, Buffer (0x07)
                    {
                         0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                    })
                    CreateByteField (BUF, Zero, PIT1)
                    CreateByteField (BUF, One, PIT0)
                    CreateByteField (BUF, 0x02, MDT1)
                    CreateByteField (BUF, 0x03, MDT0)
                    CreateByteField (BUF, 0x04, PIMX)
                    CreateByteField (BUF, 0x05, UDCX)
                    CreateByteField (BUF, 0x06, UDMX)
                    Local0 = Match (PIOT, MLE, PIO0, MTR, Zero, Zero)
                    Local0 %= 0x05
                    Local1 = Match (PIOT, MLE, PIO1, MTR, Zero, Zero)
                    Local1 %= 0x05
                    PIMX = ((Local1 << 0x04) | Local0)
                    PIT0 = DerefOf (PITR [Local0])
                    PIT1 = DerefOf (PITR [Local1])
                    If ((FLAG & One))
                    {
                        Local0 = Match (UDMT, MLE, DMA0, MTR, Zero, Zero)
                        Local0 %= 0x07
                        UDMX |= Local0
                        UDCX |= One
                    }
                    ElseIf ((DMA0 != Ones))
                    {
                        Local0 = Match (MDMT, MLE, DMA0, MTR, Zero, Zero)
                        MDT0 = DerefOf (MDTR [Local0])
                    }

                    If ((FLAG & 0x04))
                    {
                        Local0 = Match (UDMT, MLE, DMA1, MTR, Zero, Zero)
                        Local0 %= 0x07
                        UDMX |= (Local0 << 0x04)
                        UDCX |= 0x02
                    }
                    ElseIf ((DMA1 != Ones))
                    {
                        Local0 = Match (MDMT, MLE, DMA1, MTR, Zero, Zero)
                        MDT1 = DerefOf (MDTR [Local0])
                    }

                    Return (BUF) /* \_SB_.PCI0.IDEC.STM_.BUF_ */
                }

                Method (GTF, 2, NotSerialized)
                {
                    CreateByteField (Arg1, Zero, MDT1)
                    CreateByteField (Arg1, One, MDT0)
                    CreateByteField (Arg1, 0x02, PIMX)
                    CreateByteField (Arg1, 0x03, UDCX)
                    CreateByteField (Arg1, 0x04, UDMX)
                    If ((Arg0 == 0xA0))
                    {
                        Local0 = (PIMX & 0x0F)
                        Local1 = MDT0 /* \_SB_.PCI0.IDEC.GTF_.MDT0 */
                        Local2 = (UDCX & One)
                        Local3 = (UDMX & 0x0F)
                    }
                    Else
                    {
                        Local0 = (PIMX >> 0x04)
                        Local1 = MDT1 /* \_SB_.PCI0.IDEC.GTF_.MDT1 */
                        Local2 = (UDCX & 0x02)
                        Local3 = (UDMX >> 0x04)
                    }

                    Name (BUF, Buffer (0x15)
                    {
                        /* 0000 */  0x03, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xEF, 0x03,  // ........
                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0xFF, 0xEF, 0x00, 0x00,  // ........
                        /* 0010 */  0x00, 0x00, 0x00, 0x00, 0xF5                     // .....
                    })
                    CreateByteField (BUF, One, PMOD)
                    CreateByteField (BUF, 0x08, DMOD)
                    CreateByteField (BUF, 0x05, CMDA)
                    CreateByteField (BUF, 0x0C, CMDB)
                    CreateByteField (BUF, 0x13, CMDC)
                    CMDA = Arg0
                    CMDB = Arg0
                    CMDC = Arg0
                    PMOD = (Local0 | 0x08)
                    If (Local2)
                    {
                        DMOD = (Local3 | 0x40)
                    }
                    Else
                    {
                        Local4 = Match (MDMT, MLE, GETT (Local1), MTR, Zero, Zero)
                        If ((Local4 < 0x03))
                        {
                            DMOD = (0x20 | Local4)
                        }
                    }

                    Return (BUF) /* \_SB_.PCI0.IDEC.GTF_.BUF_ */
                }

                Device (PRID)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIC)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        If (((^^^SMBS.REV >= 0x3A) || ^^^SMBS.SOPT))
                        {
                            VPIT = PPIT /* \_SB_.PCI0.IDEC.PPIT */
                            VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                            VPIC = PPIC /* \_SB_.PCI0.IDEC.PPIC */
                            VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                            VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                        }
                        Else
                        {
                            VPIT = SPIT /* \_SB_.PCI0.IDEC.SPIT */
                            VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                            VPIC = SPIC /* \_SB_.PCI0.IDEC.SPIC */
                            VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                            VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                        }

                        Return (GTM (BUF))
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIM)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        BUF = STM (Arg0, Arg1, Arg2)
                        If (((^^^SMBS.REV >= 0x3A) || ^^^SMBS.SOPT))
                        {
                            PPIT = VPIT /* \_SB_.PCI0.IDEC.PRID._STM.VPIT */
                            PMDT = VMDT /* \_SB_.PCI0.IDEC.PRID._STM.VMDT */
                            PPIM = VPIM /* \_SB_.PCI0.IDEC.PRID._STM.VPIM */
                            PUDC = VUDC /* \_SB_.PCI0.IDEC.PRID._STM.VUDC */
                            PUDM = VUDM /* \_SB_.PCI0.IDEC.PRID._STM.VUDM */
                        }
                        Else
                        {
                            SPIT = VPIT /* \_SB_.PCI0.IDEC.PRID._STM.VPIT */
                            SMDT = VMDT /* \_SB_.PCI0.IDEC.PRID._STM.VMDT */
                            SPIM = VPIM /* \_SB_.PCI0.IDEC.PRID._STM.VPIM */
                            SUDC = VUDC /* \_SB_.PCI0.IDEC.PRID._STM.VUDC */
                            SUDM = VUDM /* \_SB_.PCI0.IDEC.PRID._STM.VUDM */
                        }
                    }

                    Device (P_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            If (((^^^^SMBS.REV >= 0x3A) || ^^^^SMBS.SOPT))
                            {
                                VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                                VPIM = PPIM /* \_SB_.PCI0.IDEC.PPIM */
                                VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                                VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                            }
                            Else
                            {
                                VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                                VPIM = SPIM /* \_SB_.PCI0.IDEC.SPIM */
                                VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                                VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                            }

                            Return (GTF (0xA0, BUF))
                        }
                    }

                    Device (P_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            If (((^^^^SMBS.REV >= 0x3A) || ^^^^SMBS.SOPT))
                            {
                                VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                                VPIM = PPIM /* \_SB_.PCI0.IDEC.PPIM */
                                VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                                VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                            }
                            Else
                            {
                                VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                                VPIM = SPIM /* \_SB_.PCI0.IDEC.SPIM */
                                VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                                VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                            }

                            Return (GTF (0xB0, BUF))
                        }
                    }
                }

                Device (SECD)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIC)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        If (((^^^SMBS.REV >= 0x3A) || ^^^SMBS.SOPT))
                        {
                            VPIT = SPIT /* \_SB_.PCI0.IDEC.SPIT */
                            VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                            VPIC = SPIC /* \_SB_.PCI0.IDEC.SPIC */
                            VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                            VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                        }
                        Else
                        {
                            VPIT = PPIT /* \_SB_.PCI0.IDEC.PPIT */
                            VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                            VPIC = PPIC /* \_SB_.PCI0.IDEC.PPIC */
                            VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                            VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                        }

                        Return (GTM (BUF))
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        Name (BUF, Buffer (0x07)
                        {
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
                        })
                        CreateWordField (BUF, Zero, VPIT)
                        CreateWordField (BUF, 0x02, VMDT)
                        CreateByteField (BUF, 0x04, VPIM)
                        CreateByteField (BUF, 0x05, VUDC)
                        CreateByteField (BUF, 0x06, VUDM)
                        BUF = STM (Arg0, Arg1, Arg2)
                        If (((^^^SMBS.REV >= 0x3A) || ^^^SMBS.SOPT))
                        {
                            SPIT = VPIT /* \_SB_.PCI0.IDEC.SECD._STM.VPIT */
                            SMDT = VMDT /* \_SB_.PCI0.IDEC.SECD._STM.VMDT */
                            SPIM = VPIM /* \_SB_.PCI0.IDEC.SECD._STM.VPIM */
                            SUDC = VUDC /* \_SB_.PCI0.IDEC.SECD._STM.VUDC */
                            SUDM = VUDM /* \_SB_.PCI0.IDEC.SECD._STM.VUDM */
                        }
                        Else
                        {
                            PPIT = VPIT /* \_SB_.PCI0.IDEC.SECD._STM.VPIT */
                            PMDT = VMDT /* \_SB_.PCI0.IDEC.SECD._STM.VMDT */
                            PPIM = VPIM /* \_SB_.PCI0.IDEC.SECD._STM.VPIM */
                            PUDC = VUDC /* \_SB_.PCI0.IDEC.SECD._STM.VUDC */
                            PUDM = VUDM /* \_SB_.PCI0.IDEC.SECD._STM.VUDM */
                        }
                    }

                    Device (S_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            If (((^^^^SMBS.REV >= 0x3A) || ^^^^SMBS.SOPT))
                            {
                                VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                                VPIM = SPIM /* \_SB_.PCI0.IDEC.SPIM */
                                VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                                VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                            }
                            Else
                            {
                                VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                                VPIM = PPIM /* \_SB_.PCI0.IDEC.PPIM */
                                VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                                VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                            }

                            Return (GTF (0xA0, BUF))
                        }
                    }

                    Device (S_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Name (BUF, Buffer (0x05)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
                            })
                            CreateWordField (BUF, Zero, VMDT)
                            CreateByteField (BUF, 0x02, VPIM)
                            CreateByteField (BUF, 0x03, VUDC)
                            CreateByteField (BUF, 0x04, VUDM)
                            If (((^^^^SMBS.REV >= 0x3A) || ^^^^SMBS.SOPT))
                            {
                                VMDT = SMDT /* \_SB_.PCI0.IDEC.SMDT */
                                VPIM = SPIM /* \_SB_.PCI0.IDEC.SPIM */
                                VUDC = SUDC /* \_SB_.PCI0.IDEC.SUDC */
                                VUDM = SUDM /* \_SB_.PCI0.IDEC.SUDM */
                            }
                            Else
                            {
                                VMDT = PMDT /* \_SB_.PCI0.IDEC.PMDT */
                                VPIM = PPIM /* \_SB_.PCI0.IDEC.PPIM */
                                VUDC = PUDC /* \_SB_.PCI0.IDEC.PUDC */
                                VUDM = PUDM /* \_SB_.PCI0.IDEC.PUDM */
                            }

                            Return (GTF (0xB0, BUF))
                        }
                    }
                }
            }

            Device (SBAZ)
            {
                Name (_ADR, 0x00140002)  // _ADR: Address
                OperationRegion (PCI, PCI_Config, Zero, 0x0100)
                Field (PCI, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x42), 
                    DNSP,   1, 
                    DNSO,   1, 
                    ENSR,   1
                }
            }

            Device (SBRG)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                OperationRegion (LPCS, PCI_Config, Zero, 0x0100)
                Field (LPCS, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x40), 
                        ,   7, 
                    ECEN,   1, 
                    Offset (0xA4), 
                    ECAD,   16
                }

                Name (ECIN, Zero)
                Mutex (ECMU, 0x00)
                Mutex (MLMU, 0x00)
                OperationRegion (ECBP, SystemIO, (ECAD & 0xFFFE), 0x02)
                Field (ECBP, ByteAcc, NoLock, Preserve)
                {
                    BPIO,   8
                }

                OperationRegion (ECIO, SystemIO, (ECAD & 0xFFFE), 0x02)
                Field (ECIO, ByteAcc, NoLock, Preserve)
                {
                    IND,    8, 
                    DAT,    8
                }

                IndexField (IND, DAT, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x07), 
                    LDNM,   8, 
                    Offset (0x22), 
                    POW,    8, 
                    Offset (0x30), 
                    ACT,    1, 
                    Offset (0x60), 
                    IOBH,   8, 
                    IOBL,   8, 
                    Offset (0x70), 
                    INT,    4
                }

                Method (CFG, 1, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        BPIO = 0x5A
                        BPIO = 0x5A
                        LDNM = Arg0
                    }
                }

                Method (XCFG, 0, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        BPIO = 0xA5
                    }
                }

                Method (STA, 1, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        Acquire (ECMU, 0x5000)
                        CFG (Arg0)
                        Local1 = Zero
                        If (ACT)
                        {
                            Local1 = 0x0F
                        }

                        If ((IND == 0xFF))
                        {
                            Local1 = Zero
                        }

                        XCFG ()
                        Release (ECMU)
                        Return (Local1)
                    }
                    Else
                    {
                        Local1 = Zero
                        Return (Local1)
                    }
                }

                Method (RDMB, 1, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        Acquire (ECMU, 0x1388)
                        Acquire (MLMU, 0x1388)
                        CFG (0x05)
                        Name (IOBA, Zero)
                        IOBA = IOBH /* \_SB_.PCI0.SBRG.IOBH */
                        IOBA <<= 0x08
                        IOBA |= IOBL /* \_SB_.PCI0.SBRG.IOBL */
                        OperationRegion (MLIO, SystemIO, IOBA, 0x02)
                        Field (MLIO, ByteAcc, NoLock, Preserve)
                        {
                            MLIN,   8, 
                            MLDA,   8
                        }

                        MLIN = Arg0
                        Return (MLDA) /* \_SB_.PCI0.SBRG.RDMB.MLDA */
                        Release (MLMU)
                        Release (ECMU)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (WRMB, 2, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        Acquire (ECMU, 0x1388)
                        Acquire (MLMU, 0x1388)
                        CFG (0x05)
                        Name (IOBA, Zero)
                        IOBA = IOBH /* \_SB_.PCI0.SBRG.IOBH */
                        IOBA <<= 0x08
                        IOBA |= IOBL /* \_SB_.PCI0.SBRG.IOBL */
                        OperationRegion (MLIO, SystemIO, IOBA, 0x02)
                        Field (MLIO, ByteAcc, NoLock, Preserve)
                        {
                            MLIN,   8, 
                            MLDA,   8
                        }

                        MLIN = Arg0
                        MLDA = Arg1
                        Release (MLMU)
                        Release (ECMU)
                    }
                }

                Name (KBWF, One)
                Name (MSWF, One)
                Name (IRWF, One)
                Device (PSKE)
                {
                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((ECEN == One))
                        {
                            Local1 = Zero
                            Local1 = STA (0x07)
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Return (Local1)
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x03, 0x04))
                    }

                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        If (Arg0)
                        {
                            KBWF = One
                        }
                        Else
                        {
                            KBWF = Zero
                        }
                    }
                }

                Device (PSMS)
                {
                    Name (_HID, EisaId ("PNP0F03") /* Microsoft PS/2-style Mouse */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((ECEN == One))
                        {
                            Local1 = Zero
                            Local1 = STA (0x07)
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Return (Local1)
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQNoFlags ()
                            {12}
                    })
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x03, 0x04))
                    }

                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        If (Arg0)
                        {
                            MSWF = One
                        }
                        Else
                        {
                            MSWF = Zero
                        }
                    }
                }

                Method (KWEN, 0, NotSerialized)
                {
                    WRMB (0x81, Zero)
                    WRMB (0x82, One)
                    WRMB (0x80, Zero)
                    WRMB (0xA0, 0x95)
                }

                Method (KWDS, 0, NotSerialized)
                {
                    WRMB (0x81, Zero)
                    WRMB (0x82, Zero)
                    WRMB (0x80, Zero)
                    WRMB (0xA0, 0x95)
                }

                Method (MWEN, 0, NotSerialized)
                {
                    WRMB (0x81, One)
                    WRMB (0x82, One)
                    WRMB (0x80, Zero)
                    WRMB (0xA0, 0x95)
                }

                Method (MWDS, 0, NotSerialized)
                {
                    WRMB (0x81, One)
                    WRMB (0x82, Zero)
                    WRMB (0x80, Zero)
                    WRMB (0xA0, 0x95)
                }

                Device (ECIR)
                {
                    Name (_HID, EisaId ("AMDC001"))  // _HID: Hardware ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((ECEN == One))
                        {
                            Local1 = Zero
                            If ((OSTY == 0x06))
                            {
                                Local1 = STA (0x05)
                            }
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Return (Local1)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Name (RSRC, ResourceTemplate ()
                        {
                            IO (Decode16,
                                0x0000,             // Range Minimum
                                0x0000,             // Range Maximum
                                0x08,               // Alignment
                                0x08,               // Length
                                _Y03)
                            IRQNoFlags (_Y04)
                                {}
                        })
                        CreateByteField (RSRC, \_SB.PCI0.SBRG.ECIR._CRS._Y03._MIN, IO1)  // _MIN: Minimum Base Address
                        CreateByteField (RSRC, 0x03, IO2)
                        CreateByteField (RSRC, \_SB.PCI0.SBRG.ECIR._CRS._Y03._MAX, IO3)  // _MAX: Maximum Base Address
                        CreateByteField (RSRC, 0x05, IO4)
                        CreateWordField (RSRC, \_SB.PCI0.SBRG.ECIR._CRS._Y04._INT, IRQV)  // _INT: Interrupts
                        Acquire (ECMU, 0x1388)
                        CFG (0x05)
                        If (ACT)
                        {
                            IO1 = IOBL /* \_SB_.PCI0.SBRG.IOBL */
                            IO2 = IOBH /* \_SB_.PCI0.SBRG.IOBH */
                            IO3 = IOBL /* \_SB_.PCI0.SBRG.IOBL */
                            IO4 = IOBH /* \_SB_.PCI0.SBRG.IOBH */
                            Local0 = One
                            IRQV = (Local0 << INT) /* \_SB_.PCI0.SBRG.INT_ */
                        }

                        XCFG ()
                        Release (ECMU)
                        Return (RSRC) /* \_SB_.PCI0.SBRG.ECIR._CRS.RSRC */
                    }

                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x0550,             // Range Minimum
                                0x0550,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQ (Edge, ActiveHigh, Shared, )
                                {5}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0650,             // Range Minimum
                                0x0650,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQ (Edge, ActiveHigh, Shared, )
                                {5}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0550,             // Range Minimum
                                0x0550,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQ (Edge, ActiveHigh, Shared, )
                                {3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x0650,             // Range Minimum
                                0x0650,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQ (Edge, ActiveHigh, Shared, )
                                {3}
                        }
                        EndDependentFn ()
                    })
                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateByteField (Arg0, 0x02, IO1)
                        CreateByteField (Arg0, 0x03, IO2)
                        CreateWordField (Arg0, 0x09, IRQV)
                        Acquire (ECMU, 0x1388)
                        CFG (0x05)
                        IOBL = IO1 /* \_SB_.PCI0.SBRG.ECIR._SRS.IO1_ */
                        IOBH = IO2 /* \_SB_.PCI0.SBRG.ECIR._SRS.IO2_ */
                        FindSetRightBit (IRQV, Local0)
                        INT = (Local0 - One)
                        ACT = One
                        XCFG ()
                        Release (ECMU)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x17, 0x04))
                    }

                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        If (Arg0)
                        {
                            IRWF = One
                        }
                        Else
                        {
                            IRWF = Zero
                        }
                    }

                    Method (IRCF, 2, NotSerialized)
                    {
                        Name (CONN, Zero)
                        If ((Arg0 == One))
                        {
                            CONN |= RVID /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                            CONN |= 0x00013200 /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                            Return (CONN) /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                        }

                        If ((Arg0 == 0x02))
                        {
                            CONN = (GP64 << One)
                            CONN |= GP51 /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                            Return (CONN) /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                        }

                        If ((Arg0 == 0x03))
                        {
                            If ((Arg1 == Zero))
                            {
                                G31O = One
                            }
                            Else
                            {
                                G31O = Zero
                                Sleep (0x64)
                                G31O = One
                            }
                        }

                        If ((Arg0 == 0x04))
                        {
                            If ((Arg1 == Zero))
                            {
                                ACIR = Zero
                            }
                            Else
                            {
                                ACIR = One
                            }
                        }

                        If (((Arg0 == Zero) || (Arg0 > 0x05)))
                        {
                            CONN = Ones
                        }

                        Return (CONN) /* \_SB_.PCI0.SBRG.ECIR.IRCF.CONN */
                    }
                }

                Method (PPTS, 1, NotSerialized)
                {
                    If (^PSKE._STA ())
                    {
                        If (KBWF)
                        {
                            KWEN ()
                        }
                        Else
                        {
                            KWDS ()
                        }
                    }

                    If (^PSMS._STA ())
                    {
                        If (MSWF)
                        {
                            MWEN ()
                        }
                        Else
                        {
                            MWDS ()
                        }
                    }
                }

                Method (WWAK, 1, NotSerialized)
                {
                    If (^PSKE._STA ())
                    {
                        KWDS ()
                    }

                    If (^PSMS._STA ())
                    {
                        MWDS ()
                    }
                }

                Method (EPTS, 1, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        PPTS (Arg0)
                    }
                }

                Method (EWAK, 1, NotSerialized)
                {
                    If ((ECEN == One))
                    {
                        WWAK (Arg0)
                    }
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (DMAD)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        DMA (Compatibility, BusMaster, Transfer8, )
                            {4}
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0087,             // Range Minimum
                            0x0087,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0089,             // Range Minimum
                            0x0089,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x008F,             // Range Minimum
                            0x008F,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x00,               // Alignment
                            0x20,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x00,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                }

                Device (RTC0)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (COPR)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (UAR1)
                {
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (DSTA (Zero))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        DCNT (Zero, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (DCRS (Zero, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        DSRS (Arg0, Zero)
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (CMPR) /* \_SB_.PCI0.SBRG.UAR1.CMPR */
                    }

                    Name (CMPR, ResourceTemplate ()
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {4}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (UAR2)
                {
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        Return (UHID (One))
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (DSTA (One))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        DCNT (One, Zero)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (DCRS (One, One))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        DSRS (Arg0, One)
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (CMPR) /* \_SB_.PCI0.SBRG.UAR2.CMPR */
                    }

                    Name (CMPR, ResourceTemplate ()
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {0,1,2,3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {0,1,2,3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {0,1,2,3}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {0,1,2,3}
                        }
                        EndDependentFn ()
                    })
                }

                Device (UAR3)
                {
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (DST2 (0x02))
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        DCN2 (0x0E, Zero, 0x02)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (DCR2 (0x02, Zero))
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        DSR2 (Arg0, 0x0E, 0x02)
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (CMPR) /* \_SB_.PCI0.SBRG.UAR3.CMPR */
                    }

                    Name (CMPR, ResourceTemplate ()
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {5}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03F8,             // Range Minimum
                                0x03F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02F8,             // Range Minimum
                                0x02F8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x03E8,             // Range Minimum
                                0x03E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        StartDependentFnNoPri ()
                        {
                            IO (Decode16,
                                0x02E8,             // Range Minimum
                                0x02E8,             // Range Maximum
                                0x01,               // Alignment
                                0x08,               // Length
                                )
                            IRQNoFlags ()
                                {3,4,5,6,7,9,10,11,12}
                            DMA (Compatibility, NotBusMaster, Transfer8, )
                                {}
                        }
                        EndDependentFn ()
                    })
                }

                Device (PS2K)
                {
                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP030B"))  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Local0 = (One << 0x0A)
                        If ((IOST & Local0))
                        {
                            Return (0x0F)
                        }

                        Return (Zero)
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                }

                Method (PS2K._PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x03, One))
                }

                Device (PS2M)
                {
                    Name (_HID, EisaId ("PNP0F03") /* Microsoft PS/2-style Mouse */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Local0 = (One << 0x0C)
                        If ((IOST & Local0))
                        {
                            Return (0x0F)
                        }

                        Return (Zero)
                    }

                    Name (M2R0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {12}
                    })
                    Name (M2R1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {12}
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = (One << 0x0A)
                        If ((IOST & Local0))
                        {
                            Return (M2R0) /* \_SB_.PCI0.SBRG.PS2M.M2R0 */
                        }
                        Else
                        {
                            Return (M2R1) /* \_SB_.PCI0.SBRG.PS2M.M2R1 */
                        }
                    }
                }

                Method (PS2M._PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x03, One))
                }

                Device (SIOR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Method (_UID, 0, NotSerialized)  // _UID: Unique ID
                    {
                        Return (SPIO) /* \SPIO */
                    }

                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y05)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y06)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y07)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y08)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y09)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y0A)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (((SPIO != 0x03F0) && (SPIO > 0xF0)))
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y05._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y05._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y05._LEN, GPL1)  // _LEN: Length
                            GP10 = SPIO /* \SPIO */
                            GP11 = SPIO /* \SPIO */
                            GPL1 = 0x02
                        }

                        If (IO1B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y06._MIN, GP20)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y06._MAX, GP21)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y06._LEN, GPL2)  // _LEN: Length
                            GP20 = IO1B /* \IO1B */
                            GP21 = IO1B /* \IO1B */
                            GPL2 = IO1L /* \IO1L */
                        }

                        If (IO2B)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y07._MIN, GP30)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y07._MAX, GP31)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y07._LEN, GPL3)  // _LEN: Length
                            GP30 = IO2B /* \IO2B */
                            GP31 = IO2B /* \IO2B */
                            GPL3 = IO2L /* \IO2L */
                        }

                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y08._MIN, GP40)  // _MIN: Minimum Base Address
                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y08._MAX, GP41)  // _MAX: Maximum Base Address
                        CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y08._LEN, GPL4)  // _LEN: Length
                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y09._MIN, GP50)  // _MIN: Minimum Base Address
                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y09._MAX, GP51)  // _MAX: Maximum Base Address
                        CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y09._LEN, GPL5)  // _LEN: Length
                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y0A._MIN, GP60)  // _MIN: Minimum Base Address
                        CreateWordField (CRS, \_SB.PCI0.SBRG.SIOR._Y0A._MAX, GP61)  // _MAX: Maximum Base Address
                        CreateByteField (CRS, \_SB.PCI0.SBRG.SIOR._Y0A._LEN, GPL6)  // _LEN: Length
                        ENFG (One)
                        If (ACTR)
                        {
                            Local0 = (IOAH << 0x08)
                            Local0 |= IOAL
                            Local1 = (FindSetRightBit (Local0) - One)
                            Local1 = (One << Local1)
                            GP50 = (Local0 | 0x0800)
                            GP51 = (Local0 | 0x0800)
                            GPL5 = Local1
                            GP60 = (Local0 | 0x0C00)
                            GP61 = (Local0 | 0x0C00)
                            GPL6 = Local1
                            If ((OPT0 & 0x02)){}
                            Else
                            {
                                GP40 = (Local0 | 0x0400)
                                GP41 = (Local0 | 0x0400)
                                GPL4 = Local1
                            }
                        }

                        EXFG ()
                        Return (CRS) /* \_SB_.PCI0.SBRG.SIOR.CRS_ */
                    }
                }

                Name (DCAT, Package (0x15)
                {
                    0x02, 
                    0x03, 
                    One, 
                    Zero, 
                    0xFF, 
                    0x07, 
                    0xFF, 
                    0xFF, 
                    0x07, 
                    0xFF, 
                    0xFF, 
                    0xFF, 
                    0xFF, 
                    0xFF, 
                    0xFF, 
                    0xFF, 
                    0x06, 
                    0x08, 
                    0x09, 
                    0xFF, 
                    0xFF
                })
                Method (ENFG, 1, NotSerialized)
                {
                    INDX = 0x87
                    INDX = 0x87
                    LDN = Arg0
                }

                Method (EXFG, 0, NotSerialized)
                {
                    INDX = 0xAA
                }

                Method (LPTM, 1, NotSerialized)
                {
                    ENFG (CGLD (Arg0))
                    Local0 = (OPT0 & 0x02)
                    EXFG ()
                    Return (Local0)
                }

                Method (UHID, 1, NotSerialized)
                {
                    If ((Arg0 == One))
                    {
                        ENFG (CGLD (Arg0))
                        Local0 = (OPT1 & 0x38)
                        EXFG ()
                        If (Local0)
                        {
                            Return (0x1005D041)
                        }
                    }

                    Return (0x0105D041)
                }

                Method (SIOK, 1, NotSerialized)
                {
                    ENFG (0x0A)
                    If (Arg0)
                    {
                        CRE0 |= 0x63
                        CRE4 |= 0x0C
                        CRE6 |= 0x80
                    }
                    Else
                    {
                        CRE0 &= 0x9F
                        CRE4 &= 0xF3
                        CRE6 &= 0x7F
                        Local0 = CRE3 /* \_SB_.PCI0.SBRG.CRE3 */
                    }

                    EXFG ()
                }

                Method (PS2K._PSW, 1, NotSerialized)  // _PSW: Power State Wake
                {
                    ENFG (0x0A)
                    OPT6 &= 0xEF
                    If (Arg0)
                    {
                        OPT6 |= 0x10
                    }

                    EXFG ()
                }

                Method (PS2M._PSW, 1, NotSerialized)  // _PSW: Power State Wake
                {
                    ENFG (0x0A)
                    OPT6 &= 0xDF
                    If (Arg0)
                    {
                        OPT6 |= 0x20
                    }

                    EXFG ()
                }

                Method (SIOS, 1, NotSerialized)
                {
                    ENFG (0x09)
                    OPT3 &= 0x1F
                    If ((Arg0 == 0x03))
                    {
                        OPT3 |= 0xC0
                    }
                    ElseIf ((Arg0 > 0x03)){}
                    Else
                    {
                        OPT3 |= 0x80
                    }

                    EXFG ()
                    Debug = "SIOS"
                    If ((Arg0 == One))
                    {
                        SIOK (Ones)
                    }
                }

                Method (SIOW, 1, NotSerialized)
                {
                    Debug = "SIOW"
                    SIOK (Zero)
                    ENFG (0x09)
                    OPT3 &= 0x1F
                    EXFG ()
                }

                Method (SIOH, 0, NotSerialized)
                {
                    Debug = "SIOH"
                    ENFG (0x0A)
                    If ((OPT3 & 0x10))
                    {
                        Notify (PS2K, 0x02) // Device Wake
                    }

                    If ((OPT3 & 0x20))
                    {
                        Notify (PS2M, 0x02) // Device Wake
                    }

                    SIOK (Zero)
                }

                OperationRegion (IOID, SystemIO, SPIO, 0x02)
                Field (IOID, ByteAcc, NoLock, Preserve)
                {
                    INDX,   8, 
                    DATA,   8
                }

                IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x07), 
                    LDN,    8, 
                    Offset (0x22), 
                    FDCP,   1, 
                        ,   2, 
                    LPTP,   1, 
                    URAP,   1, 
                    URBP,   1, 
                    Offset (0x30), 
                    ACTR,   8, 
                    Offset (0x60), 
                    IOAH,   8, 
                    IOAL,   8, 
                    IOH2,   8, 
                    IOL2,   8, 
                    Offset (0x70), 
                    INTR,   8, 
                    Offset (0x74), 
                    DMCH,   8, 
                    Offset (0xE0), 
                    CRE0,   8, 
                    CRE1,   8, 
                    CRE2,   8, 
                    CRE3,   8, 
                    CRE4,   8, 
                    CRE5,   8, 
                    CRE6,   8, 
                    Offset (0xF0), 
                    OPT0,   8, 
                    OPT1,   8, 
                    OPT2,   8, 
                    OPT3,   8, 
                    OPT4,   8, 
                    Offset (0xF6), 
                    OPT6,   8, 
                    Offset (0xF9), 
                    OPT9,   8
                }

                Method (CGLD, 1, NotSerialized)
                {
                    Return (DerefOf (DCAT [Arg0]))
                }

                Method (DSTA, 1, NotSerialized)
                {
                    Local0 = Zero
                    Local1 = (One << Arg0)
                    If ((IOST & Local1))
                    {
                        ENFG (CGLD (Arg0))
                        If (ACTR)
                        {
                            Local0 = 0x0F
                        }
                        Else
                        {
                            Local0 = 0x0D
                        }

                        EXFG ()
                    }

                    Return (Local0)
                }

                Method (DCNT, 2, NotSerialized)
                {
                    ENFG (CGLD (Arg0))
                    Local1 = (IOAH << 0x08)
                    Local1 |= IOAL
                    RRIO (Arg0, Arg1, Local1, 0x08)
                    If (((DMCH < 0x04) && ((Local1 = (DMCH & 0x03)) != Zero)))
                    {
                        RDMA (Arg0, Arg1, Local1++)
                    }

                    ACTR = Arg1
                    EXFG ()
                }

                Name (CRS1, ResourceTemplate ()
                {
                    IRQNoFlags ()
                        {}
                    DMA (Compatibility, NotBusMaster, Transfer8, _Y0B)
                        {}
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0x00,               // Length
                        _Y0C)
                })
                CreateWordField (CRS1, One, IRQM)
                CreateByteField (CRS1, \_SB.PCI0.SBRG._Y0B._DMA, DMAM)  // _DMA: Direct Memory Access
                CreateWordField (CRS1, \_SB.PCI0.SBRG._Y0C._MIN, IO11)  // _MIN: Minimum Base Address
                CreateWordField (CRS1, \_SB.PCI0.SBRG._Y0C._MAX, IO12)  // _MAX: Maximum Base Address
                CreateByteField (CRS1, \_SB.PCI0.SBRG._Y0C._LEN, LEN1)  // _LEN: Length
                Name (CRS2, ResourceTemplate ()
                {
                    IRQNoFlags ()
                        {6}
                    DMA (Compatibility, NotBusMaster, Transfer8, _Y0D)
                        {2}
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0x00,               // Length
                        _Y0E)
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0x00,               // Length
                        _Y0F)
                })
                CreateWordField (CRS2, One, IRQE)
                CreateByteField (CRS2, \_SB.PCI0.SBRG._Y0D._DMA, DMAE)  // _DMA: Direct Memory Access
                CreateWordField (CRS2, \_SB.PCI0.SBRG._Y0E._MIN, IO21)  // _MIN: Minimum Base Address
                CreateWordField (CRS2, \_SB.PCI0.SBRG._Y0E._MAX, IO22)  // _MAX: Maximum Base Address
                CreateByteField (CRS2, \_SB.PCI0.SBRG._Y0E._LEN, LEN2)  // _LEN: Length
                CreateWordField (CRS2, \_SB.PCI0.SBRG._Y0F._MIN, IO31)  // _MIN: Minimum Base Address
                CreateWordField (CRS2, \_SB.PCI0.SBRG._Y0F._MAX, IO32)  // _MAX: Maximum Base Address
                CreateByteField (CRS2, \_SB.PCI0.SBRG._Y0F._LEN, LEN3)  // _LEN: Length
                Method (DCRS, 2, NotSerialized)
                {
                    ENFG (CGLD (Arg0))
                    IO11 = (IOAH << 0x08)
                    IO11 |= IOAL /* \_SB_.PCI0.SBRG.IO11 */
                    IO12 = IO11 /* \_SB_.PCI0.SBRG.IO11 */
                    Local0 = (FindSetRightBit (IO11) - One)
                    LEN1 = (One << Local0)
                    If (INTR)
                    {
                        IRQM = (One << INTR) /* \_SB_.PCI0.SBRG.INTR */
                    }
                    Else
                    {
                        IRQM = Zero
                    }

                    If (((DMCH > 0x03) | ((Local1 = (DMCH & 0x03)) == Zero)))
                    {
                        DMAM = Zero
                    }
                    Else
                    {
                        DMAM = (One << Local1)
                    }

                    EXFG ()
                    Return (CRS1) /* \_SB_.PCI0.SBRG.CRS1 */
                }

                Method (DSRS, 2, NotSerialized)
                {
                    CreateWordField (Arg0, One, IRQM)
                    CreateByteField (Arg0, 0x04, DMAM)
                    CreateWordField (Arg0, 0x08, IO11)
                    ENFG (CGLD (Arg1))
                    IOAL = (IO11 & 0xFF)
                    IOAH = (IO11 >> 0x08)
                    If (IRQM)
                    {
                        FindSetRightBit (IRQM, Local0)
                        INTR = (Local0 - One)
                    }
                    Else
                    {
                        INTR = Zero
                    }

                    If (DMAM)
                    {
                        FindSetRightBit (DMAM, Local0)
                        DMCH = (Local0 - One)
                    }
                    Else
                    {
                        DMCH = 0x04
                    }

                    EXFG ()
                    DCNT (Arg1, One)
                }

                Device (SIO2)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Method (_UID, 0, NotSerialized)  // _UID: Unique ID
                    {
                        Return (SEIO) /* \SEIO */
                    }

                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y10)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (((SEIO != 0x03F0) && (SEIO > 0xF0)))
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO2._Y10._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.SIO2._Y10._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.SIO2._Y10._LEN, GPL1)  // _LEN: Length
                            GP10 = SEIO /* \SEIO */
                            GP11 = SEIO /* \SEIO */
                            GPL1 = 0x02
                        }

                        Return (CRS) /* \_SB_.PCI0.SBRG.SIO2.CRS_ */
                    }
                }

                Mutex (MUT0, 0x00)
                Method (ENF2, 1, NotSerialized)
                {
                    Acquire (MUT0, 0x0FFF)
                    LDN2 = Arg0
                }

                Method (EXF2, 0, NotSerialized)
                {
                    Release (MUT0)
                }

                OperationRegion (IO2D, SystemIO, SEIO, 0x02)
                Field (IO2D, ByteAcc, NoLock, Preserve)
                {
                    IN2D,   8, 
                    DAT2,   8
                }

                IndexField (IN2D, DAT2, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x07), 
                    LDN2,   8, 
                    Offset (0x30), 
                    ACT2,   8, 
                    Offset (0x60), 
                    SEAH,   8, 
                    SEAL,   8, 
                    SEH2,   8, 
                    SEL2,   8, 
                    Offset (0x70), 
                    INT2,   8, 
                    Offset (0x74), 
                    DMC2,   8
                }

                Method (DST2, 1, NotSerialized)
                {
                    ENF2 (Arg0)
                    Local0 = ACT2 /* \_SB_.PCI0.SBRG.ACT2 */
                    EXF2 ()
                    If ((Local0 == 0xFF))
                    {
                        Return (Zero)
                    }

                    Local0 &= One
                    Local1 = (IOST | (Local0 << Arg0))
                    If (Local0)
                    {
                        Return (0x0F)
                    }
                    ElseIf (((One << Arg0) & Local1))
                    {
                        Return (0x0D)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (DCN2, 3, NotSerialized)
                {
                    ENF2 (Arg2)
                    Local1 = (SEAH << 0x08)
                    Local1 |= SEAL
                    If (((DMC2 < 0x04) && ((Local1 = (DMC2 & 0x03)) != Zero)))
                    {
                        RDMA (Arg0, Arg1, Local1++)
                    }

                    ACT2 = Arg1
                    RRIO (Arg0, Arg1, Local1, 0x08)
                    EXF2 ()
                }

                Method (DCR2, 2, NotSerialized)
                {
                    ENF2 (Arg0)
                    IO11 = (SEAH << 0x08)
                    IO11 |= SEAL /* \_SB_.PCI0.SBRG.IO11 */
                    IO12 = IO11 /* \_SB_.PCI0.SBRG.IO11 */
                    Local0 = (FindSetRightBit (IO11) - One)
                    LEN1 = (One << Local0)
                    If (INT2)
                    {
                        IRQM = (One << INT2) /* \_SB_.PCI0.SBRG.INT2 */
                    }
                    Else
                    {
                        IRQM = Zero
                    }

                    If (((DMC2 > 0x03) | ((Local1 = (DMC2 & 0x03)) == Zero)))
                    {
                        DMAM = Zero
                    }
                    Else
                    {
                        Local1 = (DMC2 & 0x03)
                        DMAM = (One << Local1)
                    }

                    EXF2 ()
                    Return (CRS1) /* \_SB_.PCI0.SBRG.CRS1 */
                }

                Method (DSR2, 3, NotSerialized)
                {
                    CreateWordField (Arg0, One, IRQM)
                    CreateByteField (Arg0, 0x04, DMAM)
                    CreateWordField (Arg0, 0x08, IO11)
                    ENF2 (Arg2)
                    Local1 = (SEAH << 0x08)
                    Local1 |= SEAL
                    RRIO (Arg1, Zero, Local1, 0x08)
                    RRIO (Arg1, One, IO11, 0x08)
                    SEAL = (IO11 & 0xFF)
                    SEAH = (IO11 >> 0x08)
                    If (IRQM)
                    {
                        FindSetRightBit (IRQM, Local0)
                        INT2 = (Local0 - One)
                    }
                    Else
                    {
                        INT2 = Zero
                    }

                    If (DMAM)
                    {
                        FindSetRightBit (DMAM, Local0)
                        DMC2 = (Local0 - One)
                    }
                    Else
                    {
                        DMC2 = 0x04
                    }

                    EXF2 ()
                    DCN2 (Arg1, One, 0x02)
                }

                Device (HPET)
                {
                    Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y11)
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.SBRG.HPET._Y11._BAS, HPT)  // _BAS: Base Address
                        HPT = 0xFED00000
                        Return (CRS) /* \_SB_.PCI0.SBRG.HPET.CRS_ */
                    }
                }

                Device (^PCIE)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x11)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0xE0000000,         // Address Base
                            0x10000000,         // Address Length
                            _Y12)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PCI0.PCIE._Y12._BAS, BAS1)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PCI0.PCIE._Y12._LEN, LEN1)  // _LEN: Length
                        BAS1 = PCIB /* \PCIB */
                        LEN1 = PCIL /* \PCIL */
                        Return (CRS) /* \_SB_.PCI0.PCIE.CRS_ */
                    }
                }

                Device (OMSC)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y13)
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y14)
                    })
                    Name (CRS1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y15)
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y16)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        If (APIC)
                        {
                            CreateDWordField (CRS, \_SB.PCI0.SBRG.OMSC._Y13._LEN, ML01)  // _LEN: Length
                            CreateDWordField (CRS, \_SB.PCI0.SBRG.OMSC._Y13._BAS, MB01)  // _BAS: Base Address
                            CreateDWordField (CRS, \_SB.PCI0.SBRG.OMSC._Y14._LEN, ML02)  // _LEN: Length
                            CreateDWordField (CRS, \_SB.PCI0.SBRG.OMSC._Y14._BAS, MB02)  // _BAS: Base Address
                            MB01 = 0xFEC00000
                            ML01 = 0x1000
                            MB02 = 0xFEE00000
                            ML02 = 0x1000
                            CreateDWordField (CRS1, \_SB.PCI0.SBRG.OMSC._Y15._LEN, ML03)  // _LEN: Length
                            CreateDWordField (CRS1, \_SB.PCI0.SBRG.OMSC._Y15._BAS, MB03)  // _BAS: Base Address
                            CreateDWordField (CRS1, \_SB.PCI0.SBRG.OMSC._Y16._LEN, ML04)  // _LEN: Length
                            CreateDWordField (CRS1, \_SB.PCI0.SBRG.OMSC._Y16._BAS, MB04)  // _BAS: Base Address
                            MB03 = 0xFEC00000
                            ML03 = 0x1000
                            MB04 = 0xFEE00000
                            ML04 = 0x1000
                        }

                        Local0 = (0x05 << 0x0A)
                        If ((IOST & Local0))
                        {
                            Return (CRS) /* \_SB_.PCI0.SBRG.OMSC.CRS_ */
                        }
                        Else
                        {
                            Return (CRS1) /* \_SB_.PCI0.SBRG.OMSC.CRS1 */
                        }
                    }
                }

                Device (^^RMEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x000A0000,         // Address Length
                            )
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y17)
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            _Y18)
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y19)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.RMEM._Y17._BAS, BAS1)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.RMEM._Y17._LEN, LEN1)  // _LEN: Length
                        CreateDWordField (CRS, \_SB.RMEM._Y18._BAS, BAS2)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.RMEM._Y18._LEN, LEN2)  // _LEN: Length
                        CreateDWordField (CRS, \_SB.RMEM._Y19._BAS, BAS4)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.RMEM._Y19._LEN, LEN4)  // _LEN: Length
                        If (OSFL ()){}
                        Else
                        {
                            If (MG1B)
                            {
                                If ((MG1B > 0x000C0000))
                                {
                                    BAS1 = 0x000C0000
                                    LEN1 = (MG1B - BAS1) /* \_SB_.RMEM._CRS.BAS1 */
                                }
                            }
                            Else
                            {
                                BAS1 = 0x000C0000
                                LEN1 = 0x00020000
                            }

                            If (Local0 = (MG1B + MG1L) /* \MG1L */)
                            {
                                BAS2 = Local0
                                LEN2 = (0x00100000 - BAS2) /* \_SB_.RMEM._CRS.BAS2 */
                            }
                        }

                        BAS4 = MH1B /* \MH1B */
                        LEN4 = (Zero - BAS4) /* \_SB_.RMEM._CRS.BAS4 */
                        Return (CRS) /* \_SB_.RMEM.CRS_ */
                    }
                }

                Device (RMSC)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x10)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0022,             // Range Minimum
                            0x0022,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x0062,             // Range Minimum
                            0x0062,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0065,             // Range Minimum
                            0x0065,             // Range Maximum
                            0x00,               // Alignment
                            0x0B,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x00,               // Alignment
                            0x0E,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0084,             // Range Minimum
                            0x0084,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0088,             // Range Minimum
                            0x0088,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x008C,             // Range Minimum
                            0x008C,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0090,             // Range Minimum
                            0x0090,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x00A2,             // Range Minimum
                            0x00A2,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x00B1,             // Range Minimum
                            0x00B1,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00E0,             // Range Minimum
                            0x00E0,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x040B,             // Range Minimum
                            0x040B,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C52,             // Range Minimum
                            0x0C52,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD2,             // Range Minimum
                            0x0CD2,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD4,             // Range Minimum
                            0x0CD4,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD6,             // Range Minimum
                            0x0CD6,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD8,             // Range Minimum
                            0x0CD8,             // Range Maximum
                            0x00,               // Alignment
                            0x08,               // Length
                            )
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1A)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1D)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1C)
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1B)
                        IO (Decode16,
                            0x0900,             // Range Minimum
                            0x0900,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0910,             // Range Minimum
                            0x0910,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0xFE00,             // Range Minimum
                            0xFE00,             // Range Maximum
                            0x00,               // Alignment
                            0xFF,               // Length
                            )
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1E)
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x00,               // Alignment
                            0x00,               // Length
                            _Y1F)
                        Memory32Fixed (ReadOnly,
                            0xFFB80000,         // Address Base
                            0x00080000,         // Address Length
                            )
                        Memory32Fixed (ReadOnly,
                            0xFEC10000,         // Address Base
                            0x00000020,         // Address Length
                            )
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1A._MIN, GP00)  // _MIN: Minimum Base Address
                        CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1A._MAX, GP01)  // _MAX: Maximum Base Address
                        CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1A._LEN, GP0L)  // _LEN: Length
                        GP00 = PMBS /* \PMBS */
                        GP01 = PMBS /* \PMBS */
                        GP0L = PMLN /* \PMLN */
                        If (SMBB)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1B._MIN, GP10)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1B._MAX, GP11)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1B._LEN, GP1L)  // _LEN: Length
                            GP10 = SMBB /* \SMBB */
                            GP11 = SMBB /* \SMBB */
                            GP1L = SMBL /* \SMBL */
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1C._MIN, GPB0)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1C._MAX, GPB1)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1C._LEN, GPBL)  // _LEN: Length
                            GPB0 = SMB0 /* \SMB0 */
                            GPB1 = SMB0 /* \SMB0 */
                            GPBL = SMBM /* \SMBM */
                        }

                        If (GPBS)
                        {
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1D._MIN, GP20)  // _MIN: Minimum Base Address
                            CreateWordField (CRS, \_SB.PCI0.SBRG.RMSC._Y1D._MAX, GP21)  // _MAX: Maximum Base Address
                            CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1D._LEN, GP2L)  // _LEN: Length
                            GP20 = GPBS /* \GPBS */
                            GP21 = GPBS /* \GPBS */
                            GP2L = GPLN /* \GPLN */
                        }

                        Local0 = (One << 0x0A)
                        Local1 = (One << 0x0C)
                        Local0 = ((IOST & Local0) | (IOST & Local1))
                        CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1E._LEN, KBL0)  // _LEN: Length
                        CreateByteField (CRS, \_SB.PCI0.SBRG.RMSC._Y1F._LEN, KBL1)  // _LEN: Length
                        If ((Local0 == Zero))
                        {
                            KBL0 = One
                            KBL1 = One
                        }

                        Return (CRS) /* \_SB_.PCI0.SBRG.RMSC.CRS_ */
                    }
                }
            }

            Device (P0PC)
            {
                Name (_ADR, 0x00140004)  // _ADR: Address
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0C) /* \_SB_.AR0C */
                    }

                    Return (PR0C) /* \_SB_.PR0C */
                }
            }

            Device (UHC1)
            {
                Name (_ADR, 0x00120000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (UHC2)
            {
                Name (_ADR, 0x00120001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (UHC3)
            {
                Name (_ADR, 0x00120002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (USB4)
            {
                Name (_ADR, 0x00130000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (UHC5)
            {
                Name (_ADR, 0x00130001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (UHC6)
            {
                Name (_ADR, 0x00130002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (UHC7)
            {
                Name (_ADR, 0x00140005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x0B, 0x04))
                }
            }

            Device (SATA)
            {
                Name (_ADR, 0x00110000)  // _ADR: Address
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                }

                OperationRegion (SACS, PCI_Config, Zero, 0x40)
                Field (SACS, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x24), 
                    STB5,   32
                }

                Name (SPTM, Buffer (0x14)
                {
                    /* 0000 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                    /* 0008 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                    /* 0010 */  0x1F, 0x00, 0x00, 0x00                           // ....
                })
                Device (PRID)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((STCL == 0x0101))
                        {
                            Local1 = 0x0F
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Return (Local1)
                    }

                    Name (PRIS, Zero)
                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                        Field (BAR, AnyAcc, NoLock, Preserve)
                        {
                            Offset (0x120), 
                                ,   7, 
                            PMBY,   1, 
                            Offset (0x128), 
                            PMS0,   4, 
                            Offset (0x129), 
                            PMS1,   4, 
                            Offset (0x220), 
                                ,   7, 
                            PSBY,   1, 
                            Offset (0x228), 
                            PSS0,   4, 
                            Offset (0x229), 
                            PSS1,   4, 
                            Offset (0x2A0), 
                                ,   7
                        }

                        If (((OSTY <= 0x15) && (OSTY >= 0x12)))
                        {
                            If (PMS1)
                            {
                                Local0 = 0x32
                                While (((PMBY == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }

                            If (PSS1)
                            {
                                Local0 = 0x32
                                While (((PSBY == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        PRIS = Zero
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        PRIS = 0x03
                    }

                    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                    {
                        Return (PRIS) /* \_SB_.PCI0.SATA.PRID.PRIS */
                    }

                    Device (P_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x128), 
                                PMS0,   4, 
                                Offset (0x129), 
                                PMS1,   4
                            }

                            If (~(PMS1 == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x120), 
                                    ,   7, 
                                PMBY,   1
                            }

                            Local0 = 0x32
                            While (((PMBY == One) && Local0))
                            {
                                Sleep (0xFA)
                                Local0--
                            }

                            S12P = Zero
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                            S12P = 0x03
                        }

                        Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                        {
                            Return (S12P) /* \_SB_.PCI0.SATA.PRID.P_D0.S12P */
                        }
                    }

                    Device (P_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x228), 
                                PSS0,   4, 
                                Offset (0x229), 
                                PSS1,   4
                            }

                            If (~(PSS1 == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x220), 
                                    ,   7, 
                                PSBY,   1
                            }

                            Local0 = 0x32
                            While (((PSBY == One) && Local0))
                            {
                                Sleep (0xFA)
                                Local0--
                            }

                            S12P = Zero
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                            S12P = 0x03
                        }

                        Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                        {
                            Return (S12P) /* \_SB_.PCI0.SATA.PRID.P_D1.S12P */
                        }
                    }
                }

                Device (SECD)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                    }

                    Name (SECS, Zero)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((STCL == 0x0101))
                        {
                            Local1 = 0x0F
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Return (Local1)
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                        Field (BAR, AnyAcc, NoLock, Preserve)
                        {
                            Offset (0x1A0), 
                                ,   7, 
                            SMBY,   1, 
                            Offset (0x1A8), 
                            SMS0,   4, 
                            Offset (0x1A9), 
                            SMS1,   4, 
                            Offset (0x2A0), 
                                ,   7, 
                            SSBY,   1, 
                            Offset (0x2A8), 
                            SSS0,   4, 
                            Offset (0x2A9), 
                            SSS1,   4, 
                            Offset (0x2AC)
                        }

                        If (((OSTY <= 0x15) && (OSTY >= 0x12)))
                        {
                            If (SMS1)
                            {
                                Local0 = 0x32
                                While (((SMBY == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }

                            If (SSS1)
                            {
                                Local0 = 0x32
                                While (((SSBY == One) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        SECS = Zero
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        SECS = 0x03
                    }

                    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                    {
                        Return (SECS) /* \_SB_.PCI0.SATA.SECD.SECS */
                    }

                    Device (S_D0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x1A8), 
                                SMS0,   4, 
                                Offset (0x1A9), 
                                SMS1,   4
                            }

                            If (~(SMS1 == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x1000)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x1A0), 
                                    ,   7, 
                                SMBY,   1
                            }

                            Local0 = 0x32
                            While (((SMBY == One) && Local0))
                            {
                                Sleep (0xFA)
                                Local0--
                            }

                            S12P = Zero
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                            S12P = 0x03
                        }

                        Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                        {
                            Return (S12P) /* \_SB_.PCI0.SATA.SECD.S_D0.S12P */
                        }
                    }

                    Device (S_D1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x2A8), 
                                SSS0,   4, 
                                Offset (0x2A9), 
                                SSS1,   4
                            }

                            If (~(SSS1 == Zero))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Name (S12P, Zero)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            OperationRegion (BAR, SystemMemory, STB5, 0x0400)
                            Field (BAR, AnyAcc, NoLock, Preserve)
                            {
                                Offset (0x2A0), 
                                    ,   7, 
                                SSBY,   1
                            }

                            Local0 = 0x32
                            While (((SSBY == One) && Local0))
                            {
                                Sleep (0xFA)
                                Local0--
                            }

                            S12P = Zero
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                            S12P = 0x03
                        }

                        Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                        {
                            Return (S12P) /* \_SB_.PCI0.SATA.SECD.S_D1.S12P */
                        }
                    }
                }
            }
        }

        Device (PC40)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, 0x001C0001)  // _ADR: Address
            Method (^BN40, 0, NotSerialized)
            {
                Return (0x40)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN40 ())
            }

            Name (_UID, 0x40)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR40) /* \_SB_.AR40 */
                }

                Return (PR40) /* \_SB_.PR40 */
            }

            Method (BN40, 0, NotSerialized)
            {
                Return (SEB1) /* \SEB1 */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((SEB1 != Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Name (CRS, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x003F,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y20)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    ,, _Y21, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03B0,             // Range Minimum
                    0x03BB,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x000C,             // Length
                    ,, _Y22, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03C0,             // Range Minimum
                    0x03DF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0020,             // Length
                    ,, _Y23, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, _Y24, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y25, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y26, AddressRangeMemory, TypeStatic)
            })
            CreateWordField (CRS, \_SB.PC40._Y20._MIN, MINB)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PC40._Y20._MAX, MAXB)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PC40._Y20._LEN, LENB)  // _LEN: Length
            CreateWordField (CRS, \_SB.PC40._Y21._MIN, MINI)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PC40._Y21._MAX, MAXI)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PC40._Y21._LEN, LENI)  // _LEN: Length
            CreateWordField (CRS, \_SB.PC40._Y22._MIN, MIN1)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PC40._Y22._MAX, MAX1)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PC40._Y22._LEN, LEN1)  // _LEN: Length
            CreateWordField (CRS, \_SB.PC40._Y23._MIN, MIN2)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PC40._Y23._MAX, MAX2)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PC40._Y23._LEN, LEN2)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PC40._Y24._MIN, MIN4)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y24._MAX, MAX4)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y24._LEN, LEN4)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PC40._Y25._MIN, MIN5)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y25._MAX, MAX5)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y25._LEN, LEN5)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PC40._Y26._MIN, MIN6)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y26._MAX, MAX6)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PC40._Y26._LEN, LEN6)  // _LEN: Length
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = SEB1 /* \SEB1 */
                MINB = Local0
                Local0 = SUB1 /* \SUB1 */
                MAXB = Local0
                Local0 = (SUB1 - SEB1) /* \SEB1 */
                LENB = (Local0 + One)
                MINI = IOB1 /* \IOB1 */
                LENI = IOL1 /* \IOL1 */
                Local0 = IOL1 /* \IOL1 */
                MAXI = (MINI + Local0--)
                If ((VGAR == One))
                {
                    Noop
                }
                Else
                {
                    MIN4 = Zero
                    MAX4 = Zero
                    LEN4 = Zero
                    MIN1 = Zero
                    MAX1 = Zero
                    LEN1 = Zero
                    MIN2 = Zero
                    MAX2 = Zero
                    LEN2 = Zero
                }

                MIN5 = GP4S /* \GP4S */
                LEN5 = GP4L /* \GP4L */
                Local0 = GP4L /* \GP4L */
                If (Local0)
                {
                    MAX5 = (MIN5 + Local0--)
                }

                MIN6 = GP5S /* \GP5S */
                LEN6 = GP5L /* \GP5L */
                Local0 = GP5L /* \GP5L */
                MAX6 = (MIN6 + Local0--)
                Return (CRS) /* \_SB_.PC40.CRS_ */
            }

            If (OSCF)
            {
                Name (SUPP, Zero)
                Name (CTRL, Zero)
                Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
                {
                    If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                    {
                        CreateDWordField (Arg3, Zero, CDW1)
                        CreateDWordField (Arg3, 0x04, CDW2)
                        CreateDWordField (Arg3, 0x08, CDW3)
                        SUPP = CDW2 /* \_SB_.PC40._OSC.CDW2 */
                        CTRL = CDW3 /* \_SB_.PC40._OSC.CDW3 */
                        If (((SUPP & 0x16) != 0x16))
                        {
                            CTRL &= 0x1E
                        }

                        CTRL &= 0x1D
                        If (~(CDW1 & One))
                        {
                            If ((CTRL & One)){}
                            If ((CTRL & 0x04)){}
                            If ((CTRL & 0x10)){}
                        }

                        If ((Arg1 != One))
                        {
                            CDW1 |= 0x08
                        }

                        If ((CDW3 != CTRL))
                        {
                            CDW1 |= 0x10
                        }

                        CDW3 = CTRL /* \_SB_.PC40.CTRL */
                        Return (Arg3)
                    }
                    Else
                    {
                        CDW1 |= 0x04
                        Return (Arg3)
                    }
                }
            }

            Device (RD8B)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (NB2, PCI_Config, Zero, 0x0100)
                Field (NB2, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x60), 
                    MI,     32, 
                    MD,     32, 
                    Offset (0x94), 
                    HI,     32, 
                    HD,     32, 
                    Offset (0xF8), 
                    API,    32, 
                    APD,    32
                }

                Device (NMEM)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x44)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y27)
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y28)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PC40.RD8B.NMEM._Y27._BAS, BAS1)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PC40.RD8B.NMEM._Y27._LEN, LEN1)  // _LEN: Length
                        MI = 0x3C
                        Local0 = MD /* \_SB_.PC40.RD8B.MD__ */
                        If ((Local0 & 0x40))
                        {
                            MI = 0x3A
                            BAS1 = (MD & 0xFFFFFF00)
                            LEN1 = ((MD & 0xFF) << 0x17)
                        }

                        CreateDWordField (CRS, \_SB.PC40.RD8B.NMEM._Y28._BAS, BAS2)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PC40.RD8B.NMEM._Y28._LEN, LEN2)  // _LEN: Length
                        API = Zero
                        Local1 = APD /* \_SB_.PC40.RD8B.APD_ */
                        If ((Local1 & One))
                        {
                            LEN2 = 0x0100
                            API = One
                            BAS2 = (APD & 0xFFFFFF00)
                        }

                        Return (CRS) /* \_SB_.PC40.RD8B.NMEM.CRS_ */
                    }
                }
            }

            Device (IOMB)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                OperationRegion (NBF2, PCI_Config, Zero, 0x0100)
                Field (NBF2, AnyAcc, NoLock, Preserve)
                {
                    DID,    32, 
                    Offset (0x44), 
                    MBAS,   32
                }

                Device (UMEM)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x45)  // _UID: Unique ID
                    Name (CRS, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y29)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (CRS, \_SB.PC40.IOMB.UMEM._Y29._BAS, BAS3)  // _BAS: Base Address
                        CreateDWordField (CRS, \_SB.PC40.IOMB.UMEM._Y29._LEN, LEN3)  // _LEN: Length
                        If ((DID != Ones))
                        {
                            LEN3 = 0x4000
                            BAS3 = (MBAS & 0xFFFFFF00)
                        }

                        Return (CRS) /* \_SB_.PC40.IOMB.UMEM.CRS_ */
                    }
                }
            }

            Device (PC12)
            {
                Name (_ADR, 0x00020000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR42) /* \_SB_.AR42 */
                    }

                    Return (PR42) /* \_SB_.PR42 */
                }
            }

            Device (PC1B)
            {
                Name (_ADR, 0x000B0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    Return (GPRW (0x18, 0x04))
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR4B) /* \_SB_.AR4B */
                    }

                    Return (PR4B) /* \_SB_.PR4B */
                }
            }
        }

        Scope (\_GPE)
        {
            Method (_L18, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
            {
                Notify (\_SB.PCI0.PC02, 0x02) // Device Wake
                Notify (\_SB.PCI0.PC04, 0x02) // Device Wake
                Notify (\_SB.PCI0.PC0B, 0x02) // Device Wake
                Notify (\_SB.PCI0.PC0C, 0x02) // Device Wake
                Notify (\_SB.PCI0.PC0D, 0x02) // Device Wake
                Notify (\_SB.PC40.PC12, 0x02) // Device Wake
                Notify (\_SB.PC40.PC1B, 0x02) // Device Wake
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }

            Method (_L03, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
            {
                \_SB.PCI0.SBRG.SIOH ()
            }

            Method (_L0B, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
            {
                Notify (\_SB.PCI0.UHC1, 0x02) // Device Wake
                Notify (\_SB.PCI0.UHC2, 0x02) // Device Wake
                Notify (\_SB.PCI0.UHC3, 0x02) // Device Wake
                Notify (\_SB.PCI0.USB4, 0x02) // Device Wake
                Notify (\_SB.PCI0.UHC5, 0x02) // Device Wake
                Notify (\_SB.PCI0.UHC6, 0x02) // Device Wake
                Notify (\_SB.PCI0.UHC7, 0x02) // Device Wake
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }
        }

        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Name (_UID, 0xAA)  // _UID: Unique ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    Scope (_SB)
    {
        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRS,   8, 
            Offset (0x09), 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8
        }

        OperationRegion (KBDD, SystemIO, 0x64, One)
        Field (KBDD, ByteAcc, NoLock, Preserve)
        {
            PD64,   8
        }

        Method (IRQC, 0, NotSerialized)
        {
            PIRA = Zero
            PIRB = Zero
            PIRC = Zero
            PIRD = Zero
            Local1 = PD64 /* \_SB_.PD64 */
            PIRE = Zero
            PIRF = Zero
            PIRG = Zero
            PIRH = Zero
        }

        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Name (IPRA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRB, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRC, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Name (IPRD, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {5,10,11}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRA)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSA) /* \_SB_.PRSA */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRA = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRA = Local0
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRB)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSB) /* \_SB_.PRSB */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRB = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRB = Local0
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRC)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSC) /* \_SB_.PRSC */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRC = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRC = Local0
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRD)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSD) /* \_SB_.PRSD */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRD = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRD = Local0
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRE)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSE) /* \_SB_.PRSE */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (PIRE, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRF)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSF) /* \_SB_.PRSF */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRG)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSG) /* \_SB_.PRSG */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (PIRH)
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRSH) /* \_SB_.PRSH */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = Zero
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }
    }

    Scope (_SB)
    {
        Name (XCPD, Zero)
        Name (XNPT, One)
        Name (XCAP, 0x02)
        Name (XDCP, 0x04)
        Name (XDCT, 0x08)
        Name (XDST, 0x0A)
        Name (XLCP, 0x0C)
        Name (XLCT, 0x10)
        Name (XLST, 0x12)
        Name (XSCP, 0x14)
        Name (XSCT, 0x18)
        Name (XSST, 0x1A)
        Name (XRCT, 0x1C)
        Mutex (MUTE, 0x00)
        Method (RBPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, One)
            Field (PCFG, ByteAcc, NoLock, Preserve)
            {
                XCFG,   8
            }

            Release (MUTE)
            Return (XCFG) /* \_SB_.RBPE.XCFG */
        }

        Method (RWPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Arg0 &= 0xFFFFFFFE
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, 0x02)
            Field (PCFG, WordAcc, NoLock, Preserve)
            {
                XCFG,   16
            }

            Release (MUTE)
            Return (XCFG) /* \_SB_.RWPE.XCFG */
        }

        Method (RDPE, 1, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Arg0 &= 0xFFFFFFFC
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, 0x04)
            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            Release (MUTE)
            Return (XCFG) /* \_SB_.RDPE.XCFG */
        }

        Method (WBPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0x0FFF)
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, One)
            Field (PCFG, ByteAcc, NoLock, Preserve)
            {
                XCFG,   8
            }

            XCFG = Arg1
            Release (MUTE)
        }

        Method (WWPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Arg0 &= 0xFFFFFFFE
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, 0x02)
            Field (PCFG, WordAcc, NoLock, Preserve)
            {
                XCFG,   16
            }

            XCFG = Arg1
            Release (MUTE)
        }

        Method (WDPE, 2, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Arg0 &= 0xFFFFFFFC
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, 0x04)
            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            XCFG = Arg1
            Release (MUTE)
        }

        Method (RWDP, 3, NotSerialized)
        {
            Acquire (MUTE, 0x03E8)
            Arg0 &= 0xFFFFFFFC
            Local0 = (Arg0 + PCIB) /* \PCIB */
            OperationRegion (PCFG, SystemMemory, Local0, 0x04)
            Field (PCFG, DWordAcc, NoLock, Preserve)
            {
                XCFG,   32
            }

            Local1 = (XCFG & Arg2)
            XCFG = (Local1 | Arg1)
            Release (MUTE)
        }

        Method (RPME, 1, NotSerialized)
        {
            Local0 = (Arg0 + 0x84)
            Local1 = RDPE (Local0)
            If ((Local1 == Ones))
            {
                Return (Zero)
            }
            Else
            {
                If ((Local1 && 0x00010000))
                {
                    WDPE (Local0, (Local1 & 0x00010000))
                    Return (One)
                }

                Return (Zero)
            }
        }
    }

    If (OSCF)
    {
        Scope (_SB.PCI0)
        {
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }
        }
    }

    Method (NPTS, 1, NotSerialized)
    {
    }

    Method (NWAK, 1, NotSerialized)
    {
    }

    Method (NB2S, 1, NotSerialized)
    {
    }

    Method (NB2W, 1, NotSerialized)
    {
    }

    Scope (_SB.PCI0.SBRG)
    {
        OperationRegion (BMIO, SystemIO, 0x0CA2, One)
        Field (BMIO, ByteAcc, NoLock, Preserve)
        {
            BMCD,   8
        }

        OperationRegion (MIPT, SystemIO, SMIT, One)
        Field (MIPT, ByteAcc, NoLock, Preserve)
        {
            PSMI,   8
        }

        Device (IPMI)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0CA2,             // Range Minimum
                    0x0CA2,             // Range Maximum
                    0x00,               // Alignment
                    0x02,               // Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((BMCD == 0xFF))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Method (BMCW, 1, NotSerialized)
        {
            PSMI = 0x30
        }
    }

    Scope (_SB)
    {
        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            If ((Arg0 == ToUUID ("ed855e0c-6c90-47bf-a62a-26de0fc5ad5c") /* Unknown UUID */))
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                SUPP = CDW2 /* \_SB_._OSC.CDW2 */
                CTRL = CDW3 /* \_SB_._OSC.CDW3 */
                If ((SUPP & One))
                {
                    Return (Arg3)
                }

                SUPP |= 0x04
                Return (Arg3)
            }
            Else
            {
                (SUPP & Zero)
                Return (Arg3)
            }
        }
    }

    Scope (_SB)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            OSTY = OSFL ()
            If ((OSFL () == Zero))
            {
                OSTY = 0x05
            }

            If ((OSFL () == 0x05))
            {
                OSTY = 0x06
            }
        }

        Scope (PCI0)
        {
            Name (CRS, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y2B)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x03AF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x03B0,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03E0,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0918,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03B0,             // Range Minimum
                    0x03BB,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x000C,             // Length
                    ,, _Y2A, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03C0,             // Range Minimum
                    0x03DF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0020,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y2C, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xF0000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x10000000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, _Y2D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y2E, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y2F, AddressRangeMemory, TypeStatic)
            })
            CreateWordField (CRS, \_SB.PCI0._Y2A._MIN, MIN1)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2A._MAX, MAX1)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2A._LEN, LEN1)  // _LEN: Length
            CreateWordField (CRS, \_SB.PCI0._Y2B._MIN, B0MI)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2B._MAX, B0MX)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2B._LEN, B0LE)  // _LEN: Length
            CreateWordField (CRS, \_SB.PCI0._Y2C._MIN, B0IN)  // _MIN: Minimum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2C._MAX, B0IX)  // _MAX: Maximum Base Address
            CreateWordField (CRS, \_SB.PCI0._Y2C._LEN, B0IL)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PCI0._Y2D._MIN, MIN5)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2D._MAX, MAX5)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2D._LEN, LEN5)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PCI0._Y2E._MIN, MIN6)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2E._MAX, MAX6)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2E._LEN, LEN6)  // _LEN: Length
            CreateDWordField (CRS, \_SB.PCI0._Y2F._MIN, MIN7)  // _MIN: Minimum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2F._MAX, MAX7)  // _MAX: Maximum Base Address
            CreateDWordField (CRS, \_SB.PCI0._Y2F._LEN, LEN7)  // _LEN: Length
            Name (CR64, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y31)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x03AF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x03B0,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03E0,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0918,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03B0,             // Range Minimum
                    0x03BB,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x000C,             // Length
                    ,, _Y30, TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x03C0,             // Range Minimum
                    0x03DF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0020,             // Length
                    ,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0000,             // Length
                    ,, _Y32, TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xF0000000,         // Range Minimum
                    0xFFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x10000000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, _Y33, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y34, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    ,, _Y35, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y36, AddressRangeMemory, TypeStatic)
            })
            CreateWordField (CR64, \_SB.PCI0._Y30._MIN, _MN1)  // _MIN: Minimum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y30._MAX, _MX1)  // _MAX: Maximum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y30._LEN, _LN1)  // _LEN: Length
            CreateWordField (CR64, \_SB.PCI0._Y31._MIN, B6MI)  // _MIN: Minimum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y31._MAX, B6MX)  // _MAX: Maximum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y31._LEN, B6LE)  // _LEN: Length
            CreateWordField (CR64, \_SB.PCI0._Y32._MIN, B6IN)  // _MIN: Minimum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y32._MAX, B6IX)  // _MAX: Maximum Base Address
            CreateWordField (CR64, \_SB.PCI0._Y32._LEN, B6IL)  // _LEN: Length
            CreateDWordField (CR64, \_SB.PCI0._Y33._MIN, _MN5)  // _MIN: Minimum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y33._MAX, _MX5)  // _MAX: Maximum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y33._LEN, _LN5)  // _LEN: Length
            CreateDWordField (CR64, \_SB.PCI0._Y34._MIN, _MN6)  // _MIN: Minimum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y34._MAX, _MX6)  // _MAX: Maximum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y34._LEN, _LN6)  // _LEN: Length
            CreateDWordField (CR64, \_SB.PCI0._Y35._MIN, _MN7)  // _MIN: Minimum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y35._MAX, _MX7)  // _MAX: Maximum Base Address
            CreateDWordField (CR64, \_SB.PCI0._Y35._LEN, _LN7)  // _LEN: Length
            CreateDWordField (CR64, \_SB.PCI0._Y36._MIN, MN8L)  // _MIN: Minimum Base Address
            CreateDWordField (CR64, (0xF8 + 0x04), MN8H)
            CreateDWordField (CR64, \_SB.PCI0._Y36._MAX, MX8L)  // _MAX: Maximum Base Address
            CreateDWordField (CR64, (0x0100 + 0x04), MX8H)
            CreateDWordField (CR64, \_SB.PCI0._Y36._LEN, LN8L)  // _LEN: Length
            CreateDWordField (CR64, (0x0110 + 0x04), LN8H)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = MG1L /* \MG1L */
                If (Local0)
                {
                    MIN5 = MG1B /* \MG1B */
                    LEN5 = MG1L /* \MG1L */
                    MAX5 = (MIN5 + Local0--)
                }

                MIN6 = MG2B /* \MG2B */
                LEN6 = MG2L /* \MG2L */
                Local0 = MG2L /* \MG2L */
                MAX6 = (MIN6 + Local0--)
                MIN7 = MG3B /* \MG3B */
                LEN7 = MG3L /* \MG3L */
                Local0 = MG3L /* \MG3L */
                MAX7 = (MIN7 + Local0--)
                If ((VGAR == Zero))
                {
                    Noop
                }
                Else
                {
                    MIN1 = Zero
                    MAX1 = Zero
                    LEN1 = Zero
                }

                Local0 = SEB0 /* \SEB0 */
                B0MI = Local0
                Local0 = SUB0 /* \SUB0 */
                B0MX = Local0
                Local0 = (SUB0 - SEB0) /* \SEB0 */
                B0LE = (Local0 + One)
                B0IN = IOB0 /* \IOB0 */
                B0IL = IOL0 /* \IOL0 */
                Local0 = IOL0 /* \IOL0 */
                B0IX = (B0IN + Local0--)
                _MN5 = MIN5 /* \_SB_.PCI0.MIN5 */
                _LN5 = LEN5 /* \_SB_.PCI0.LEN5 */
                _MX5 = MAX5 /* \_SB_.PCI0.MAX5 */
                _MN6 = MIN6 /* \_SB_.PCI0.MIN6 */
                _LN6 = LEN6 /* \_SB_.PCI0.LEN6 */
                _MX6 = MAX6 /* \_SB_.PCI0.MAX6 */
                _MN7 = MIN7 /* \_SB_.PCI0.MIN7 */
                _LN7 = LEN7 /* \_SB_.PCI0.LEN7 */
                _MX7 = MAX7 /* \_SB_.PCI0.MAX7 */
                MN8L = M4BL /* \M4BL */
                MN8H = M4BH /* \M4BH */
                Local0 = M4LL /* \M4LL */
                MX8L = Local0--
                If ((M4LL == Zero))
                {
                    Local0 = M4LH /* \M4LH */
                    MX8H = Local0--
                }
                Else
                {
                    MX8H = M4LH /* \M4LH */
                }

                If ((M4LL < M4BL))
                {
                    Local0 = M4LH /* \M4LH */
                    LN8H = (Local0-- - M4BH) /* \M4BH */
                    Local0 = M4LL /* \M4LL */
                    LN8L = (Local0++ + (Ones - M4BL))
                }
                Else
                {
                    LN8L = (M4LL - M4BL) /* \M4BL */
                    LN8H = (M4LH - M4BH) /* \M4BH */
                }

                If ((VGAR == Zero))
                {
                    Noop
                }
                Else
                {
                    _MN1 = Zero
                    _MX1 = Zero
                    _LN1 = Zero
                }

                Local0 = SEB0 /* \SEB0 */
                B6MI = Local0
                Local0 = SUB0 /* \SUB0 */
                B6MX = Local0
                Local0 = (SUB0 - SEB0) /* \SEB0 */
                B6LE = (Local0 + One)
                B6IN = IOB0 /* \IOB0 */
                B6IL = IOL0 /* \IOL0 */
                Local0 = IOL0 /* \IOL0 */
                B6IX = (B6IN + Local0--)
                If (MR64)
                {
                    If ((OSYS () >= 0x15))
                    {
                        Return (CR64) /* \_SB_.PCI0.CR64 */
                    }
                    Else
                    {
                        Return (CRS) /* \_SB_.PCI0.CRS_ */
                    }
                }
                Else
                {
                    Return (CRS) /* \_SB_.PCI0.CRS_ */
                }
            }
        }
    }

    Name (WOTB, Zero)
    Name (WSSB, Zero)
    Name (WAXB, Zero)
    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        DBG8 = Arg0
        PTS (Arg0)
        WAKP [Zero] = Zero
        WAKP [One] = Zero
        If (((Arg0 == 0x04) && (OSFL () == 0x02)))
        {
            Sleep (0x0BB8)
        }

        WSSB = ASSB /* \ASSB */
        WOTB = AOTB /* \AOTB */
        WAXB = AAXB /* \AAXB */
        ASSB = Arg0
        AOTB = OSFL ()
        OSTP = OSYS ()
        AAXB = Zero
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        DBG8 = (Arg0 << 0x04)
        WAK (Arg0)
        If (ASSB)
        {
            ASSB = WSSB /* \WSSB */
            AOTB = WOTB /* \WOTB */
            AAXB = WAXB /* \WAXB */
        }

        If (DerefOf (WAKP [Zero]))
        {
            WAKP [One] = Zero
        }
        Else
        {
            WAKP [One] = Arg0
        }

        Return (WAKP) /* \WAKP */
    }

    Scope (_SB.PCI0)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            OSTY = 0x10
            If (CondRefOf (_OSI, Local1))
            {
                If (_OSI ("Windows 2000"))
                {
                    OSTY = 0x12
                }
                ElseIf (_OSI ("Windows 2001"))
                {
                    OSTY = 0x13
                }
                ElseIf (_OSI ("Windows 2001 SP1"))
                {
                    OSTY = 0x13
                }
                ElseIf (_OSI ("Windows 2001 SP2"))
                {
                    OSTY = 0x13
                }
                ElseIf (_OSI ("Windows 2001.1"))
                {
                    OSTY = 0x14
                }
                ElseIf (_OSI ("Windows 2001.1 SP1"))
                {
                    OSTY = 0x14
                }
                ElseIf (_OSI ("Windows 2006"))
                {
                    OSTY = 0x15
                }
            }
            ElseIf (MCTH (_OS, "Microsoft Windows NT"))
            {
                Local0 = 0x12
            }
            Else
            {
                If (MCTH (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTY = 0x11
                }

                If (MCTH (_OS, "Linux"))
                {
                    OSTY = One
                }
            }

            If ((OSTY > 0x13))
            {
                PWDE = One
                DPPF = Zero
            }
        }
    }

    Scope (_SB.PCI0)
    {
        OperationRegion (TVID, SystemMemory, 0xFED40F00, 0x02)
        Field (TVID, WordAcc, NoLock, Preserve)
        {
            VIDT,   16
        }
    }

    Device (_SB.PCI0.SBRG.TPM)
    {
        Name (_HID, EisaId ("PNP0C31"))  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0C31"))  // _CID: Compatible ID
        Name (_UID, One)  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                )
        })
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If (TPMF)
            {
                If ((VIDT != 0x8086))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }
            Else
            {
                Return (Zero)
            }
        }
    }

    Device (_SB.PCI0.ITPM)
    {
        Name (_HID, "INTC0102")  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0C31"))  // _CID: Compatible ID
        Name (_UID, One)  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                )
        })
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            If (TPMF)
            {
                If ((VIDT == 0x8086))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Return (Zero)
        }
    }

    Scope (_SB.PCI0.SBRG.TPM)
    {
        Name (TAAX, Zero)
        OperationRegion (MIPT, SystemIO, SMIT, One)
        Field (MIPT, ByteAcc, NoLock, Preserve)
        {
            PSMI,   8
        }

        Name (PPI1, Package (0x02)
        {
            Zero, 
            Zero
        })
        Name (PPI2, Package (0x03)
        {
            Zero, 
            Zero, 
            Zero
        })
        Name (MBUF, Buffer (0x04){})
        CreateByteField (MBUF, Zero, BUF0)
        CreateByteField (MBUF, One, BUF1)
        CreateByteField (MBUF, 0x02, BUF2)
        CreateByteField (MBUF, 0x03, BUF3)
        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {
                Name (TTT0, Zero)
                TTT0 = ToInteger (Arg2)
                If ((TTT0 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x7F                                             // .
                    })
                }
                ElseIf ((TTT0 == One))
                {
                    Return ("1.0")
                }
                ElseIf ((TTT0 == 0x02))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0xF0
                    BUF2 = ToInteger (DerefOf (Arg3 [Zero]))
                    BUF3 = One
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    AAXB = TAAX /* \_SB_.PCI0.SBRG.TPM_.TAAX */
                    Return (Zero)
                }
                ElseIf ((TTT0 == 0x03))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0x0F
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local3 = BUF2 /* \_SB_.PCI0.SBRG.TPM_.BUF2 */
                    PPI1 [Zero] = Zero
                    PPI1 [One] = Local3
                    AAXB = TAAX /* \_SB_.PCI0.SBRG.TPM_.TAAX */
                    Return (PPI1) /* \_SB_.PCI0.SBRG.TPM_.PPI1 */
                }
                ElseIf ((TTT0 == 0x04))
                {
                    Return (0x02)
                }
                ElseIf ((TTT0 == 0x05))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0xF0
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local3 = (BUF2 >> 0x04)
                    BUF0 = CMER /* \CMER */
                    BUF1 = 0xFF
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local6 = BUF2 /* \_SB_.PCI0.SBRG.TPM_.BUF2 */
                    Local4 = (CMER + One)
                    BUF0 = Local4
                    BUF1 = 0xFF
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local7 = BUF2 /* \_SB_.PCI0.SBRG.TPM_.BUF2 */
                    Local2 = (Local7 * 0x0100)
                    Local2 += Local6
                    PPI2 [Zero] = Zero
                    PPI2 [One] = Local3
                    If ((Local2 == 0xFFF0))
                    {
                        PPI2 [0x02] = 0xFFFFFFF0
                    }
                    ElseIf ((Local2 == 0xFFF1))
                    {
                        PPI2 [0x02] = 0xFFFFFFF1
                    }
                    Else
                    {
                        PPI2 [0x02] = Local2
                    }

                    AAXB = TAAX /* \_SB_.PCI0.SBRG.TPM_.TAAX */
                    Return (PPI2) /* \_SB_.PCI0.SBRG.TPM_.PPI2 */
                }
                ElseIf ((TTT0 == 0x06))
                {
                    Return (Zero)
                }
                Else
                {
                }
            }
            ElseIf ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {
                Name (TTT1, Zero)
                TTT1 = ToInteger (Arg2)
                If ((TTT1 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                ElseIf ((TTT1 == One))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMOR /* \CMOR */
                    BUF1 = 0xFE
                    BUF2 = ToInteger (DerefOf (Arg3 [Zero]))
                    BUF3 = One
                    AAXB = MBUF /* \_SB_.PCI0.SBRG.TPM_.MBUF */
                    PSMI = 0xFB
                    Sleep (0x0BB8)
                    AAXB = TAAX /* \_SB_.PCI0.SBRG.TPM_.TAAX */
                    Return (Zero)
                }
                Else
                {
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (_SB.PCI0.ITPM)
    {
        Name (TAAX, Zero)
        OperationRegion (MIPT, SystemIO, SMIT, One)
        Field (MIPT, ByteAcc, NoLock, Preserve)
        {
            PSMI,   8
        }

        Name (PPI1, Package (0x02)
        {
            Zero, 
            Zero
        })
        Name (PPI2, Package (0x03)
        {
            Zero, 
            Zero, 
            Zero
        })
        Name (MBUF, Buffer (0x04){})
        CreateByteField (MBUF, Zero, BUF0)
        CreateByteField (MBUF, One, BUF1)
        CreateByteField (MBUF, 0x02, BUF2)
        CreateByteField (MBUF, 0x03, BUF3)
        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {
                Name (TTT0, Zero)
                TTT0 = ToInteger (Arg2)
                If ((TTT0 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x7F                                             // .
                    })
                }
                ElseIf ((TTT0 == One))
                {
                    Return ("1.0")
                }
                ElseIf ((TTT0 == 0x02))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0xF0
                    BUF2 = ToInteger (DerefOf (Arg3 [Zero]))
                    BUF3 = One
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    AAXB = TAAX /* \_SB_.PCI0.ITPM.TAAX */
                    Return (Zero)
                }
                ElseIf ((TTT0 == 0x03))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0x0F
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local3 = BUF2 /* \_SB_.PCI0.ITPM.BUF2 */
                    PPI1 [Zero] = Zero
                    PPI1 [One] = Local3
                    AAXB = TAAX /* \_SB_.PCI0.ITPM.TAAX */
                    Return (PPI1) /* \_SB_.PCI0.ITPM.PPI1 */
                }
                ElseIf ((TTT0 == 0x04))
                {
                    Return (0x02)
                }
                ElseIf ((TTT0 == 0x05))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMRQ /* \CMRQ */
                    BUF1 = 0xF0
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local3 = (BUF2 >> 0x04)
                    BUF0 = CMER /* \CMER */
                    BUF1 = 0xFF
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local6 = BUF2 /* \_SB_.PCI0.ITPM.BUF2 */
                    Local4 = (CMER + One)
                    BUF0 = Local4
                    BUF1 = 0xFF
                    BUF2 = Zero
                    BUF3 = Zero
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x03E8)
                    MBUF = AAXB /* \AAXB */
                    Local7 = BUF2 /* \_SB_.PCI0.ITPM.BUF2 */
                    Local2 = (Local7 * 0x0100)
                    Local2 += Local6
                    PPI2 [Zero] = Zero
                    PPI2 [One] = Local3
                    If ((Local2 == 0xFFF0))
                    {
                        PPI2 [0x02] = 0xFFFFFFF0
                    }
                    ElseIf ((Local2 == 0xFFF1))
                    {
                        PPI2 [0x02] = 0xFFFFFFF1
                    }
                    Else
                    {
                        PPI2 [0x02] = Local2
                    }

                    AAXB = TAAX /* \_SB_.PCI0.ITPM.TAAX */
                    Return (PPI2) /* \_SB_.PCI0.ITPM.PPI2 */
                }
                ElseIf ((TTT0 == 0x06))
                {
                    Return (Zero)
                }
                Else
                {
                }
            }
            ElseIf ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
            {
                Name (TTT1, Zero)
                TTT1 = ToInteger (Arg2)
                If ((TTT1 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
                ElseIf ((TTT1 == One))
                {
                    TAAX = AAXB /* \AAXB */
                    BUF0 = CMOR /* \CMOR */
                    BUF1 = 0xFE
                    BUF2 = ToInteger (DerefOf (Arg3 [Zero]))
                    BUF3 = One
                    AAXB = MBUF /* \_SB_.PCI0.ITPM.MBUF */
                    PSMI = 0xFB
                    Sleep (0x0BB8)
                    AAXB = TAAX /* \_SB_.PCI0.ITPM.TAAX */
                    Return (Zero)
                }
                Else
                {
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    If (SS1)
    {
        Name (_S1, Package (0x04)  // _S1_: S1 System State
        {
            One, 
            Zero, 
            Zero, 
            Zero
        })
    }

    If (SS4)
    {
        Name (_S4, Package (0x04)  // _S4_: S4 System State
        {
            0x04, 
            Zero, 
            Zero, 
            Zero
        })
    }

    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })
    Method (PTS, 1, NotSerialized)
    {
        If (Arg0)
        {
            \_SB.PCI0.SBRG.SIOS (Arg0)
            NPTS (Arg0)
            NB2S (Arg0)
            SPTS (Arg0)
            \_SB.PCI0.SBRG.EPTS (Arg0)
        }
    }

    Method (WAK, 1, NotSerialized)
    {
        \_SB.PCI0.SBRG.SIOW (Arg0)
        NWAK (Arg0)
        NB2W (Arg0)
        SWAK (Arg0)
        \_SB.PCI0.SBRG.EWAK (Arg0)
        \_SB.PCI0.SBRG.BMCW (Arg0)
    }
}



EINJ
----
[000h 0000   4]                    Signature : "EINJ"    [Error Injection table]
[004h 0004   4]                 Table Length : 00000130
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 75
[00Ah 0010   6]                       Oem ID : "AMIER"
[010h 0016   8]                 Oem Table ID : "AMI_EINJ"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]      Injection Header Length : 0000000C
[028h 0040   1]                        Flags : 00
[029h 0041   3]                     Reserved : 000000
[02Ch 0044   4]        Injection Entry Count : 00000008

[030h 0048   1]                       Action : 00 [Begin Operation]
[031h 0049   1]                  Instruction : 03 [Write Register Value]
[032h 0050   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[033h 0051   1]                     Reserved : 00

[034h 0052  12]              Register Region : [Generic Address Structure]
[034h 0052   1]                     Space ID : 00 [SystemMemory]
[035h 0053   1]                    Bit Width : 08
[036h 0054   1]                   Bit Offset : 00
[037h 0055   1]         Encoded Access Width : 01 [Byte Access:8]
[038h 0056   8]                      Address : 00000000D7EA8110

[040h 0064   8]                        Value : 0000000000000000
[048h 0072   8]                         Mask : 00000000000000FF

[050h 0080   1]                       Action : 01 [Get Trigger Table]
[051h 0081   1]                  Instruction : 00 [Read Register]
[052h 0082   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[053h 0083   1]                     Reserved : 00

[054h 0084  12]              Register Region : [Generic Address Structure]
[054h 0084   1]                     Space ID : 00 [SystemMemory]
[055h 0085   1]                    Bit Width : 40
[056h 0086   1]                   Bit Offset : 00
[057h 0087   1]         Encoded Access Width : 04 [QWord Access:64]
[058h 0088   8]                      Address : 00000000D7EA8112

[060h 0096   8]                        Value : 0000000000000000
[068h 0104   8]                         Mask : FFFFFFFFFFFFFFFF

[070h 0112   1]                       Action : 02 [Set Error Type]
[071h 0113   1]                  Instruction : 02 [Write Register]
[072h 0114   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[073h 0115   1]                     Reserved : 00

[074h 0116  12]              Register Region : [Generic Address Structure]
[074h 0116   1]                     Space ID : 00 [SystemMemory]
[075h 0117   1]                    Bit Width : 20
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 03 [DWord Access:32]
[078h 0120   8]                      Address : 00000000D7EA811A

[080h 0128   8]                        Value : 0000000000000000
[088h 0136   8]                         Mask : 00000000FFFFFFFF

[090h 0144   1]                       Action : 03 [Get Error Type]
[091h 0145   1]                  Instruction : 00 [Read Register]
[092h 0146   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[093h 0147   1]                     Reserved : 00

[094h 0148  12]              Register Region : [Generic Address Structure]
[094h 0148   1]                     Space ID : 00 [SystemMemory]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 00000000D7EA8120

[0A0h 0160   8]                        Value : 0000000000000000
[0A8h 0168   8]                         Mask : 00000000FFFFFFFF

[0B0h 0176   1]                       Action : 04 [End Operation]
[0B1h 0177   1]                  Instruction : 03 [Write Register Value]
[0B2h 0178   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0B3h 0179   1]                     Reserved : 00

[0B4h 0180  12]              Register Region : [Generic Address Structure]
[0B4h 0180   1]                     Space ID : 00 [SystemMemory]
[0B5h 0181   1]                    Bit Width : 10
[0B6h 0182   1]                   Bit Offset : 00
[0B7h 0183   1]         Encoded Access Width : 02 [Word Access:16]
[0B8h 0184   8]                      Address : 0000000000000000

[0C0h 0192   8]                        Value : 0000000000000000
[0C8h 0200   8]                         Mask : 000000000000FFFF

[0D0h 0208   1]                       Action : 05 [Execute Operation]
[0D1h 0209   1]                  Instruction : 03 [Write Register Value]
[0D2h 0210   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0D3h 0211   1]                     Reserved : 00

[0D4h 0212  12]              Register Region : [Generic Address Structure]
[0D4h 0212   1]                     Space ID : 01 [SystemIO]
[0D5h 0213   1]                    Bit Width : 08
[0D6h 0214   1]                   Bit Offset : 00
[0D7h 0215   1]         Encoded Access Width : 01 [Byte Access:8]
[0D8h 0216   8]                      Address : 00000000000000B0

[0E0h 0224   8]                        Value : 0000000000000075
[0E8h 0232   8]                         Mask : 00000000000000FF

[0F0h 0240   1]                       Action : 06 [Check Busy Status]
[0F1h 0241   1]                  Instruction : 01 [Read Register Value]
[0F2h 0242   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0F3h 0243   1]                     Reserved : 00

[0F4h 0244  12]              Register Region : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 08
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 01 [Byte Access:8]
[0F8h 0248   8]                      Address : 00000000D7EA811E

[100h 0256   8]                        Value : 0000000000000001
[108h 0264   8]                         Mask : 0000000000000001

[110h 0272   1]                       Action : 07 [Get Command Status]
[111h 0273   1]                  Instruction : 00 [Read Register]
[112h 0274   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[113h 0275   1]                     Reserved : 00

[114h 0276  12]              Register Region : [Generic Address Structure]
[114h 0276   1]                     Space ID : 00 [SystemMemory]
[115h 0277   1]                    Bit Width : 10
[116h 0278   1]                   Bit Offset : 00
[117h 0279   1]         Encoded Access Width : 02 [Word Access:16]
[118h 0280   8]                      Address : 00000000D7EA811E

[120h 0288   8]                        Value : 0000000000000000
[128h 0296   8]                         Mask : 000000000000FFFE

Raw Table Data: Length 304 (0x130)

    0000: 45 49 4E 4A 30 01 00 00 01 75 41 4D 49 45 52 00  // EINJ0....uAMIER.
    0010: 41 4D 49 5F 45 49 4E 4A 25 03 16 20 4D 53 46 54  // AMI_EINJ%.. MSFT
    0020: 97 00 00 00 0C 00 00 00 00 00 00 00 08 00 00 00  // ................
    0030: 00 03 00 00 00 08 00 01 10 81 EA D7 00 00 00 00  // ................
    0040: 00 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0050: 01 00 00 00 00 40 00 04 12 81 EA D7 00 00 00 00  // .....@..........
    0060: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    0070: 02 02 00 00 00 20 00 03 1A 81 EA D7 00 00 00 00  // ..... ..........
    0080: 00 00 00 00 00 00 00 00 FF FF FF FF 00 00 00 00  // ................
    0090: 03 00 00 00 00 20 00 03 20 81 EA D7 00 00 00 00  // ..... .. .......
    00A0: 00 00 00 00 00 00 00 00 FF FF FF FF 00 00 00 00  // ................
    00B0: 04 03 00 00 00 10 00 02 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 00 00 00 00 FF FF 00 00 00 00 00 00  // ................
    00D0: 05 03 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    00E0: 75 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // u...............
    00F0: 06 01 00 00 00 08 00 01 1E 81 EA D7 00 00 00 00  // ................
    0100: 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    0110: 07 00 00 00 00 10 00 02 1E 81 EA D7 00 00 00 00  // ................
    0120: 00 00 00 00 00 00 00 00 FE FF 00 00 00 00 00 00  // ................


ERST
----
[000h 0000   4]                    Signature : "ERST"    [Error Record Serialization Table]
[004h 0004   4]                 Table Length : 00000210
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 46
[00Ah 0010   6]                       Oem ID : "AMIER"
[010h 0016   8]                 Oem Table ID : "AMI_ERST"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]  Serialization Header Length : 0000000C
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   4]      Instruction Entry Count : 0000000F

[030h 0048   1]                       Action : 00 [Begin Write Operation]
[031h 0049   1]                  Instruction : 03 [Write Register Value]
[032h 0050   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[033h 0051   1]                     Reserved : 00

[034h 0052  12]              Register Region : [Generic Address Structure]
[034h 0052   1]                     Space ID : 00 [SystemMemory]
[035h 0053   1]                    Bit Width : 08
[036h 0054   1]                   Bit Offset : 00
[037h 0055   1]         Encoded Access Width : 01 [Byte Access:8]
[038h 0056   8]                      Address : 00000000D7EA8130

[040h 0064   8]                        Value : 0000000000000071
[048h 0072   8]                         Mask : 00000000000000FF

[050h 0080   1]                       Action : 01 [Begin Read Operation]
[051h 0081   1]                  Instruction : 03 [Write Register Value]
[052h 0082   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[053h 0083   1]                     Reserved : 00

[054h 0084  12]              Register Region : [Generic Address Structure]
[054h 0084   1]                     Space ID : 00 [SystemMemory]
[055h 0085   1]                    Bit Width : 08
[056h 0086   1]                   Bit Offset : 00
[057h 0087   1]         Encoded Access Width : 01 [Byte Access:8]
[058h 0088   8]                      Address : 00000000D7EA8130

[060h 0096   8]                        Value : 0000000000000072
[068h 0104   8]                         Mask : 00000000000000FF

[070h 0112   1]                       Action : 02 [Begin Clear Operation]
[071h 0113   1]                  Instruction : 03 [Write Register Value]
[072h 0114   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[073h 0115   1]                     Reserved : 00

[074h 0116  12]              Register Region : [Generic Address Structure]
[074h 0116   1]                     Space ID : 00 [SystemMemory]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000D7EA8130

[080h 0128   8]                        Value : 0000000000000073
[088h 0136   8]                         Mask : 00000000000000FF

[090h 0144   1]                       Action : 03 [End Operation]
[091h 0145   1]                  Instruction : 03 [Write Register Value]
[092h 0146   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[093h 0147   1]                     Reserved : 00

[094h 0148  12]              Register Region : [Generic Address Structure]
[094h 0148   1]                     Space ID : 00 [SystemMemory]
[095h 0149   1]                    Bit Width : 08
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 01 [Byte Access:8]
[098h 0152   8]                      Address : 00000000D7EA8131

[0A0h 0160   8]                        Value : 0000000000000074
[0A8h 0168   8]                         Mask : 00000000000000FF

[0B0h 0176   1]                       Action : 04 [Set Record Offset]
[0B1h 0177   1]                  Instruction : 02 [Write Register]
[0B2h 0178   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0B3h 0179   1]                     Reserved : 00

[0B4h 0180  12]              Register Region : [Generic Address Structure]
[0B4h 0180   1]                     Space ID : 00 [SystemMemory]
[0B5h 0181   1]                    Bit Width : 20
[0B6h 0182   1]                   Bit Offset : 00
[0B7h 0183   1]         Encoded Access Width : 03 [DWord Access:32]
[0B8h 0184   8]                      Address : 00000000D7EA8132

[0C0h 0192   8]                        Value : 0000000000000000
[0C8h 0200   8]                         Mask : 00000000FFFFFFFF

[0D0h 0208   1]                       Action : 05 [Execute Operation]
[0D1h 0209   1]                  Instruction : 03 [Write Register Value]
[0D2h 0210   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0D3h 0211   1]                     Reserved : 00

[0D4h 0212  12]              Register Region : [Generic Address Structure]
[0D4h 0212   1]                     Space ID : 01 [SystemIO]
[0D5h 0213   1]                    Bit Width : 08
[0D6h 0214   1]                   Bit Offset : 00
[0D7h 0215   1]         Encoded Access Width : 01 [Byte Access:8]
[0D8h 0216   8]                      Address : 00000000000000B0

[0E0h 0224   8]                        Value : 0000000000000070
[0E8h 0232   8]                         Mask : 00000000000000FF

[0F0h 0240   1]                       Action : 06 [Check Busy Status]
[0F1h 0241   1]                  Instruction : 01 [Read Register Value]
[0F2h 0242   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0F3h 0243   1]                     Reserved : 00

[0F4h 0244  12]              Register Region : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 08
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 01 [Byte Access:8]
[0F8h 0248   8]                      Address : 00000000D7EA8136

[100h 0256   8]                        Value : 0000000000000001
[108h 0264   8]                         Mask : 00000000000000FF

[110h 0272   1]                       Action : 07 [Get Command Status]
[111h 0273   1]                  Instruction : 00 [Read Register]
[112h 0274   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[113h 0275   1]                     Reserved : 00

[114h 0276  12]              Register Region : [Generic Address Structure]
[114h 0276   1]                     Space ID : 00 [SystemMemory]
[115h 0277   1]                    Bit Width : 08
[116h 0278   1]                   Bit Offset : 00
[117h 0279   1]         Encoded Access Width : 01 [Byte Access:8]
[118h 0280   8]                      Address : 00000000D7EA8138

[120h 0288   8]                        Value : 0000000000000000
[128h 0296   8]                         Mask : 00000000000000FF

[130h 0304   1]                       Action : 08 [Get Record Identifier]
[131h 0305   1]                  Instruction : 00 [Read Register]
[132h 0306   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[133h 0307   1]                     Reserved : 00

[134h 0308  12]              Register Region : [Generic Address Structure]
[134h 0308   1]                     Space ID : 00 [SystemMemory]
[135h 0309   1]                    Bit Width : 40
[136h 0310   1]                   Bit Offset : 00
[137h 0311   1]         Encoded Access Width : 04 [QWord Access:64]
[138h 0312   8]                      Address : 00000000D7EA8140

[140h 0320   8]                        Value : 0000000000000000
[148h 0328   8]                         Mask : FFFFFFFFFFFFFFFF

[150h 0336   1]                       Action : 09 [Set Record Identifier]
[151h 0337   1]                  Instruction : 02 [Write Register]
[152h 0338   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[153h 0339   1]                     Reserved : 00

[154h 0340  12]              Register Region : [Generic Address Structure]
[154h 0340   1]                     Space ID : 00 [SystemMemory]
[155h 0341   1]                    Bit Width : 40
[156h 0342   1]                   Bit Offset : 00
[157h 0343   1]         Encoded Access Width : 04 [QWord Access:64]
[158h 0344   8]                      Address : 00000000D7EA8148

[160h 0352   8]                        Value : 0000000000000000
[168h 0360   8]                         Mask : FFFFFFFFFFFFFFFF

[170h 0368   1]                       Action : 0A [Get Record Count]
[171h 0369   1]                  Instruction : 00 [Read Register]
[172h 0370   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[173h 0371   1]                     Reserved : 00

[174h 0372  12]              Register Region : [Generic Address Structure]
[174h 0372   1]                     Space ID : 00 [SystemMemory]
[175h 0373   1]                    Bit Width : 10
[176h 0374   1]                   Bit Offset : 00
[177h 0375   1]         Encoded Access Width : 02 [Word Access:16]
[178h 0376   8]                      Address : 00000000D7EA813A

[180h 0384   8]                        Value : 0000000000000000
[188h 0392   8]                         Mask : 000000000000FFFF

[190h 0400   1]                       Action : 0B [Begin Dummy Write]
[191h 0401   1]                  Instruction : 03 [Write Register Value]
[192h 0402   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[193h 0403   1]                     Reserved : 00

[194h 0404  12]              Register Region : [Generic Address Structure]
[194h 0404   1]                     Space ID : 00 [SystemMemory]
[195h 0405   1]                    Bit Width : 08
[196h 0406   1]                   Bit Offset : 00
[197h 0407   1]         Encoded Access Width : 01 [Byte Access:8]
[198h 0408   8]                      Address : 00000000D7EA8130

[1A0h 0416   8]                        Value : 0000000000000076
[1A8h 0424   8]                         Mask : 00000000000000FF

[1B0h 0432   1]                       Action : 0D [Get Error Address Range]
[1B1h 0433   1]                  Instruction : 00 [Read Register]
[1B2h 0434   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[1B3h 0435   1]                     Reserved : 00

[1B4h 0436  12]              Register Region : [Generic Address Structure]
[1B4h 0436   1]                     Space ID : 00 [SystemMemory]
[1B5h 0437   1]                    Bit Width : 40
[1B6h 0438   1]                   Bit Offset : 00
[1B7h 0439   1]         Encoded Access Width : 04 [QWord Access:64]
[1B8h 0440   8]                      Address : 00000000D7EA8150

[1C0h 0448   8]                        Value : 0000000000000000
[1C8h 0456   8]                         Mask : FFFFFFFFFFFFFFFF

[1D0h 0464   1]                       Action : 0E [Get Error Address Length]
[1D1h 0465   1]                  Instruction : 00 [Read Register]
[1D2h 0466   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[1D3h 0467   1]                     Reserved : 00

[1D4h 0468  12]              Register Region : [Generic Address Structure]
[1D4h 0468   1]                     Space ID : 00 [SystemMemory]
[1D5h 0469   1]                    Bit Width : 20
[1D6h 0470   1]                   Bit Offset : 00
[1D7h 0471   1]         Encoded Access Width : 03 [DWord Access:32]
[1D8h 0472   8]                      Address : 00000000D7EA8158

[1E0h 0480   8]                        Value : 0000000000000000
[1E8h 0488   8]                         Mask : 00000000FFFFFFFF

[1F0h 0496   1]                       Action : 0F [Get Error Attributes]
[1F1h 0497   1]                  Instruction : 00 [Read Register]
[1F2h 0498   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[1F3h 0499   1]                     Reserved : 00

[1F4h 0500  12]              Register Region : [Generic Address Structure]
[1F4h 0500   1]                     Space ID : 00 [SystemMemory]
[1F5h 0501   1]                    Bit Width : 20
[1F6h 0502   1]                   Bit Offset : 00
[1F7h 0503   1]         Encoded Access Width : 03 [DWord Access:32]
[1F8h 0504   8]                      Address : 00000000D7EA8160

[200h 0512   8]                        Value : 0000000000000000
[208h 0520   8]                         Mask : 00000000FFFFFFFF

Raw Table Data: Length 528 (0x210)

    0000: 45 52 53 54 10 02 00 00 01 46 41 4D 49 45 52 00  // ERST.....FAMIER.
    0010: 41 4D 49 5F 45 52 53 54 25 03 16 20 4D 53 46 54  // AMI_ERST%.. MSFT
    0020: 97 00 00 00 0C 00 00 00 00 00 00 00 0F 00 00 00  // ................
    0030: 00 03 00 00 00 08 00 01 30 81 EA D7 00 00 00 00  // ........0.......
    0040: 71 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // q...............
    0050: 01 03 00 00 00 08 00 01 30 81 EA D7 00 00 00 00  // ........0.......
    0060: 72 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // r...............
    0070: 02 03 00 00 00 08 00 01 30 81 EA D7 00 00 00 00  // ........0.......
    0080: 73 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // s...............
    0090: 03 03 00 00 00 08 00 01 31 81 EA D7 00 00 00 00  // ........1.......
    00A0: 74 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // t...............
    00B0: 04 02 00 00 00 20 00 03 32 81 EA D7 00 00 00 00  // ..... ..2.......
    00C0: 00 00 00 00 00 00 00 00 FF FF FF FF 00 00 00 00  // ................
    00D0: 05 03 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    00E0: 70 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // p...............
    00F0: 06 01 00 00 00 08 00 01 36 81 EA D7 00 00 00 00  // ........6.......
    0100: 01 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0110: 07 00 00 00 00 08 00 01 38 81 EA D7 00 00 00 00  // ........8.......
    0120: 00 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0130: 08 00 00 00 00 40 00 04 40 81 EA D7 00 00 00 00  // .....@..@.......
    0140: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    0150: 09 02 00 00 00 40 00 04 48 81 EA D7 00 00 00 00  // .....@..H.......
    0160: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    0170: 0A 00 00 00 00 10 00 02 3A 81 EA D7 00 00 00 00  // ........:.......
    0180: 00 00 00 00 00 00 00 00 FF FF 00 00 00 00 00 00  // ................
    0190: 0B 03 00 00 00 08 00 01 30 81 EA D7 00 00 00 00  // ........0.......
    01A0: 76 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // v...............
    01B0: 0D 00 00 00 00 40 00 04 50 81 EA D7 00 00 00 00  // .....@..P.......
    01C0: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    01D0: 0E 00 00 00 00 20 00 03 58 81 EA D7 00 00 00 00  // ..... ..X.......
    01E0: 00 00 00 00 00 00 00 00 FF FF FF FF 00 00 00 00  // ................
    01F0: 0F 00 00 00 00 20 00 03 60 81 EA D7 00 00 00 00  // ..... ..`.......
    0200: 00 00 00 00 00 00 00 00 FF FF FF FF 00 00 00 00  // ................


FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 000000F4
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 5F
[00Ah 0010   6]                       Oem ID : "032516"
[010h 0016   8]                 Oem Table ID : "FACP1044"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]                 FACS Address : D7E94000
[028h 0040   4]                 DSDT Address : D7E707C0
[02Ch 0044   1]                        Model : 01
[02Dh 0045   1]                   PM Profile : 01 [Desktop]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : E1
[035h 0053   1]           ACPI Disable Value : 1E
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : E2
[038h 0056   4]     PM1A Event Block Address : 00000800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 0000FE00
[04Ch 0076   4]       PM Timer Block Address : 00000808
[050h 0080   4]           GPE0 Block Address : 00000820
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : E3
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0400
[066h 0102   2]           Cache Flush Stride : 0010
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0003
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 0
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 000001A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 0
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 0
                     Use Platform Timer (V4) : 0
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 00 [Undefined/Legacy]
[078h 0120   8]                      Address : 0000000000000CF9

[080h 0128   1]         Value to cause reset : 06
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 00000000D7E94000
[08Ch 0140   8]                 DSDT Address : 00000000D7E707C0
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 00 [Undefined/Legacy]
[098h 0152   8]                      Address : 0000000000000800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 20
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0B0h 0176   8]                      Address : 0000000000000804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 00 [SystemMemory]
[0C5h 0197   1]                    Bit Width : 00
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0C8h 0200   8]                      Address : 0000000000000000

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0D4h 0212   8]                      Address : 0000000000000808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 20
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0E0h 0224   8]                      Address : 0000000000000820

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 20
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


Raw Table Data: Length 244 (0xF4)

    0000: 46 41 43 50 F4 00 00 00 03 5F 30 33 32 35 31 36  // FACP....._032516
    0010: 46 41 43 50 31 30 34 34 25 03 16 20 4D 53 46 54  // FACP1044%.. MSFT
    0020: 97 00 00 00 00 40 E9 D7 C0 07 E7 D7 01 01 09 00  // .....@..........
    0030: B0 00 00 00 E1 1E 00 E2 00 08 00 00 00 00 00 00  // ................
    0040: 04 08 00 00 00 00 00 00 00 FE 00 00 08 08 00 00  // ................
    0050: 20 08 00 00 00 00 00 00 04 02 01 04 08 00 00 E3  //  ...............
    0060: 65 00 E9 03 00 04 10 00 01 03 0D 00 32 03 00 00  // e...........2...
    0070: A5 01 00 00 01 08 00 00 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 00 00 40 E9 D7 00 00 00 00 C0 07 E7 D7  // .....@..........
    0090: 00 00 00 00 01 20 00 00 00 08 00 00 00 00 00 00  // ..... ..........
    00A0: 01 20 00 00 00 00 00 00 00 00 00 00 01 10 00 00  // . ..............
    00B0: 04 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00D0: 01 20 00 00 08 08 00 00 00 00 00 00 01 20 00 00  // . ........... ..
    00E0: 20 08 00 00 00 00 00 00 01 20 00 00 00 00 00 00  //  ........ ......
    00F0: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 00000000
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 01
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 00 00 00 00 00 00 00 00  // FACS@...........
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


HEST
----
[000h 0000   4]                    Signature : "HEST"    [Hardware Error Source Table]
[004h 0004   4]                 Table Length : 000000A8
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 3C
[00Ah 0010   6]                       Oem ID : "AMIER"
[010h 0016   8]                 Oem Table ID : "ABC_HEST"
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]           Error Source Count : 00000002

[028h 0040   2]                Subtable Type : 0009 [Generic Hardware Error Source]
[02Ah 0042   2]                    Source Id : 0000
[02Ch 0044   2]            Related Source Id : FFFF
[02Eh 0046   1]                     Reserved : 03
[02Fh 0047   1]                      Enabled : 01
[030h 0048   4]       Records To Preallocate : 00000001
[034h 0052   4]      Max Sections Per Record : 00000001
[038h 0056   4]          Max Raw Data Length : 0000009D

[03Ch 0060  12]         Error Status Address : [Generic Address Structure]
[03Ch 0060   1]                     Space ID : 00 [SystemMemory]
[03Dh 0061   1]                    Bit Width : 20
[03Eh 0062   1]                   Bit Offset : 00
[03Fh 0063   1]         Encoded Access Width : 01 [Byte Access:8]
[040h 0064   8]                      Address : 00000000D7EA8160

[048h 0072  28]                       Notify : [Hardware Error Notification Structure]
[048h 0072   1]                  Notify Type : 04 [NMI]
[049h 0073   1]                Notify Length : 1C
[04Ah 0074   2]   Configuration Write Enable : 0000
[04Ch 0076   4]                 PollInterval : 00000000
[050h 0080   4]                       Vector : 00000002
[054h 0084   4]      Polling Threshold Value : 00000000
[058h 0088   4]     Polling Threshold Window : 00000000
[05Ch 0092   4]        Error Threshold Value : 00000000
[060h 0096   4]       Error Threshold Window : 00000000

[064h 0100   4]    Error Status Block Length : 0000009D

[068h 0104   2]                Subtable Type : 0009 [Generic Hardware Error Source]
[06Ah 0106   2]                    Source Id : 0001
[06Ch 0108   2]            Related Source Id : FFFF
[06Eh 0110   1]                     Reserved : 03
[06Fh 0111   1]                      Enabled : 01
[070h 0112   4]       Records To Preallocate : 00000001
[074h 0116   4]      Max Sections Per Record : 00000001
[078h 0120   4]          Max Raw Data Length : 0000009D

[07Ch 0124  12]         Error Status Address : [Generic Address Structure]
[07Ch 0124   1]                     Space ID : 00 [SystemMemory]
[07Dh 0125   1]                    Bit Width : 20
[07Eh 0126   1]                   Bit Offset : 00
[07Fh 0127   1]         Encoded Access Width : 01 [Byte Access:8]
[080h 0128   8]                      Address : 00000000D7EA8370

[088h 0136  28]                       Notify : [Hardware Error Notification Structure]
[088h 0136   1]                  Notify Type : 00 [Polled]
[089h 0137   1]                Notify Length : 1C
[08Ah 0138   2]   Configuration Write Enable : 603E
[08Ch 0140   4]                 PollInterval : 000000EA
[090h 0144   4]                       Vector : 00000002
[094h 0148   4]      Polling Threshold Value : 00000000
[098h 0152   4]     Polling Threshold Window : 00000000
[09Ch 0156   4]        Error Threshold Value : 00000000
[0A0h 0160   4]       Error Threshold Window : 00000000

[0A4h 0164   4]    Error Status Block Length : 0000009D

Raw Table Data: Length 168 (0xA8)

    0000: 48 45 53 54 A8 00 00 00 01 3C 41 4D 49 45 52 00  // HEST.....<AMIER.
    0010: 41 42 43 5F 48 45 53 54 25 03 16 20 4D 53 46 54  // ABC_HEST%.. MSFT
    0020: 97 00 00 00 02 00 00 00 09 00 00 00 FF FF 03 01  // ................
    0030: 01 00 00 00 01 00 00 00 9D 00 00 00 00 20 00 01  // ............. ..
    0040: 60 81 EA D7 00 00 00 00 04 1C 00 00 00 00 00 00  // `...............
    0050: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0060: 00 00 00 00 9D 00 00 00 09 00 01 00 FF FF 03 01  // ................
    0070: 01 00 00 00 01 00 00 00 9D 00 00 00 00 20 00 01  // ............. ..
    0080: 70 83 EA D7 00 00 00 00 00 1C 3E 60 EA 00 00 00  // p.........>`....
    0090: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 9D 00 00 00                          // ........


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 95
[00Ah 0010   6]                       Oem ID : "032516"
[010h 0016   8]                 Oem Table ID : "OEMHPET "
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   4]            Hardware Block ID : 00008300

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 08
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 02
[035h 0053   2]          Minimum Clock Ticks : 0014
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 95 30 33 32 35 31 36  // HPET8.....032516
    0010: 4F 45 4D 48 50 45 54 20 25 03 16 20 4D 53 46 54  // OEMHPET %.. MSFT
    0020: 97 00 00 00 00 83 00 00 00 08 00 00 00 00 D0 FE  // ................
    0030: 00 00 00 00 02 14 00 00                          // ........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 49
[00Ah 0010   6]                       Oem ID : "032516"
[010h 0016   8]                 Oem Table ID : "OEMMCFG "
[018h 0024   4]                 Oem Revision : 20160325
[01Ch 0028   4]              Asl Compiler ID : "MSFT"
[020h 0032   4]        Asl Compiler Revision : 00000097

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000E0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : FF
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 49 30 33 32 35 31 36  // MCFG<....I032516
    0010: 4F 45 4D 4D 43 46 47 20 25 03 16 20 4D 53 46 54  // OEMMCFG %.. MSFT
    0020: 97 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0  // ................
    0030: 00 00 00 00 00 00 00 FF 00 00 00 00              // ............


OEMB
----


SLIT
----
[000h 0000   4]                    Signature : "SLIT"    [System Locality Information Table]
[004h 0004   4]                 Table Length : 0000006C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 08
[00Ah 0010   6]                       Oem ID : "AMD   "
[010h 0016   8]                 Oem Table ID : "AGESA   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   8]                   Localities : 0000000000000008
[02Ch 0044   8]                 Locality   0 : 0A 10 10 16 10 16 10 16
[034h 0052   8]                 Locality   1 : 10 0A 16 10 16 10 16 10
[03Ch 0060   8]                 Locality   2 : 10 16 0A 10 10 16 10 16
[044h 0068   8]                 Locality   3 : 16 10 10 0A 16 10 16 10
[04Ch 0076   8]                 Locality   4 : 10 16 10 16 0A 10 10 16
[054h 0084   8]                 Locality   5 : 16 10 16 10 10 0A 16 10
[05Ch 0092   8]                 Locality   6 : 10 16 10 16 10 16 0A 10
[064h 0100   8]                 Locality   7 : 16 10 16 10 16 10 10 0A

Raw Table Data: Length 108 (0x6C)

    0000: 53 4C 49 54 6C 00 00 00 01 08 41 4D 44 20 20 20  // SLITl.....AMD   
    0010: 41 47 45 53 41 20 20 20 01 00 00 00 41 4D 44 20  // AGESA   ....AMD 
    0020: 01 00 00 00 08 00 00 00 00 00 00 00 0A 10 10 16  // ................
    0030: 10 16 10 16 10 0A 16 10 16 10 16 10 10 16 0A 10  // ................
    0040: 10 16 10 16 16 10 10 0A 16 10 16 10 10 16 10 16  // ................
    0050: 0A 10 10 16 16 10 16 10 10 0A 16 10 10 16 10 16  // ................
    0060: 10 16 0A 10 16 10 16 10 16 10 10 0A              // ............


SRAT
----
[000h 0000   4]                    Signature : "SRAT"    [System Resource Affinity Table]
[004h 0004   4]                 Table Length : 000005C0
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : A6
[00Ah 0010   6]                       Oem ID : "AMD   "
[010h 0016   8]                 Oem Table ID : "AGESA   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD "
[020h 0032   4]        Asl Compiler Revision : 00000001

[024h 0036   4]               Table Revision : 00000001
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 01 [Memory Affinity]
[031h 0049   1]                       Length : 28

[032h 0050   4]             Proximity Domain : 00000000
[036h 0054   2]                    Reserved1 : 0000
[038h 0056   8]                 Base Address : 0000000000000000
[040h 0064   8]               Address Length : 00000000000A0000
[048h 0072   4]                    Reserved2 : 00000000
[04Ch 0076   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[050h 0080   8]                    Reserved3 : 0000000000000000

[058h 0088   1]                Subtable Type : 01 [Memory Affinity]
[059h 0089   1]                       Length : 28

[05Ah 0090   4]             Proximity Domain : 00000000
[05Eh 0094   2]                    Reserved1 : 0000
[060h 0096   8]                 Base Address : 0000000000100000
[068h 0104   8]               Address Length : 00000000D7F00000
[070h 0112   4]                    Reserved2 : 00000000
[074h 0116   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[078h 0120   8]                    Reserved3 : 0000000000000000

[080h 0128   1]                Subtable Type : 01 [Memory Affinity]
[081h 0129   1]                       Length : 28

[082h 0130   4]             Proximity Domain : 00000000
[086h 0134   2]                    Reserved1 : 0000
[088h 0136   8]                 Base Address : 0000000100000000
[090h 0144   8]               Address Length : 0000000328000000
[098h 0152   4]                    Reserved2 : 00000000
[09Ch 0156   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[0A0h 0160   8]                    Reserved3 : 0000000000000000

[0A8h 0168   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0A9h 0169   1]                       Length : 10

[0AAh 0170   1]      Proximity Domain Low(8) : 00
[0ABh 0171   1]                      Apic ID : 20
[0ACh 0172   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[0B0h 0176   1]              Local Sapic EID : 00
[0B1h 0177   3]    Proximity Domain High(24) : 000000
[0B4h 0180   4]                 Clock Domain : 00000000

[0B8h 0184   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0B9h 0185   1]                       Length : 10

[0BAh 0186   1]      Proximity Domain Low(8) : 00
[0BBh 0187   1]                      Apic ID : 21
[0BCh 0188   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[0C0h 0192   1]              Local Sapic EID : 00
[0C1h 0193   3]    Proximity Domain High(24) : 000000
[0C4h 0196   4]                 Clock Domain : 00000000

[0C8h 0200   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0C9h 0201   1]                       Length : 10

[0CAh 0202   1]      Proximity Domain Low(8) : 00
[0CBh 0203   1]                      Apic ID : 22
[0CCh 0204   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[0D0h 0208   1]              Local Sapic EID : 00
[0D1h 0209   3]    Proximity Domain High(24) : 000000
[0D4h 0212   4]                 Clock Domain : 00000000

[0D8h 0216   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0D9h 0217   1]                       Length : 10

[0DAh 0218   1]      Proximity Domain Low(8) : 00
[0DBh 0219   1]                      Apic ID : 23
[0DCh 0220   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[0E0h 0224   1]              Local Sapic EID : 00
[0E1h 0225   3]    Proximity Domain High(24) : 000000
[0E4h 0228   4]                 Clock Domain : 00000000

[0E8h 0232   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0E9h 0233   1]                       Length : 10

[0EAh 0234   1]      Proximity Domain Low(8) : 00
[0EBh 0235   1]                      Apic ID : 24
[0ECh 0236   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[0F0h 0240   1]              Local Sapic EID : 00
[0F1h 0241   3]    Proximity Domain High(24) : 000000
[0F4h 0244   4]                 Clock Domain : 00000000

[0F8h 0248   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0F9h 0249   1]                       Length : 10

[0FAh 0250   1]      Proximity Domain Low(8) : 00
[0FBh 0251   1]                      Apic ID : 25
[0FCh 0252   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[100h 0256   1]              Local Sapic EID : 00
[101h 0257   3]    Proximity Domain High(24) : 000000
[104h 0260   4]                 Clock Domain : 00000000

[108h 0264   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[109h 0265   1]                       Length : 10

[10Ah 0266   1]      Proximity Domain Low(8) : 00
[10Bh 0267   1]                      Apic ID : 26
[10Ch 0268   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[110h 0272   1]              Local Sapic EID : 00
[111h 0273   3]    Proximity Domain High(24) : 000000
[114h 0276   4]                 Clock Domain : 00000000

[118h 0280   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[119h 0281   1]                       Length : 10

[11Ah 0282   1]      Proximity Domain Low(8) : 00
[11Bh 0283   1]                      Apic ID : 27
[11Ch 0284   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[120h 0288   1]              Local Sapic EID : 00
[121h 0289   3]    Proximity Domain High(24) : 000000
[124h 0292   4]                 Clock Domain : 00000000

[128h 0296   1]                Subtable Type : 01 [Memory Affinity]
[129h 0297   1]                       Length : 28

[12Ah 0298   4]             Proximity Domain : 00000001
[12Eh 0302   2]                    Reserved1 : 0000
[130h 0304   8]                 Base Address : 0000000428000000
[138h 0312   8]               Address Length : 0000000400000000
[140h 0320   4]                    Reserved2 : 00000000
[144h 0324   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[148h 0328   8]                    Reserved3 : 0000000000000000

[150h 0336   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[151h 0337   1]                       Length : 10

[152h 0338   1]      Proximity Domain Low(8) : 01
[153h 0339   1]                      Apic ID : 28
[154h 0340   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[158h 0344   1]              Local Sapic EID : 00
[159h 0345   3]    Proximity Domain High(24) : 000000
[15Ch 0348   4]                 Clock Domain : 00000000

[160h 0352   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[161h 0353   1]                       Length : 10

[162h 0354   1]      Proximity Domain Low(8) : 01
[163h 0355   1]                      Apic ID : 29
[164h 0356   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[168h 0360   1]              Local Sapic EID : 00
[169h 0361   3]    Proximity Domain High(24) : 000000
[16Ch 0364   4]                 Clock Domain : 00000000

[170h 0368   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[171h 0369   1]                       Length : 10

[172h 0370   1]      Proximity Domain Low(8) : 01
[173h 0371   1]                      Apic ID : 2A
[174h 0372   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[178h 0376   1]              Local Sapic EID : 00
[179h 0377   3]    Proximity Domain High(24) : 000000
[17Ch 0380   4]                 Clock Domain : 00000000

[180h 0384   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[181h 0385   1]                       Length : 10

[182h 0386   1]      Proximity Domain Low(8) : 01
[183h 0387   1]                      Apic ID : 2B
[184h 0388   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[188h 0392   1]              Local Sapic EID : 00
[189h 0393   3]    Proximity Domain High(24) : 000000
[18Ch 0396   4]                 Clock Domain : 00000000

[190h 0400   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[191h 0401   1]                       Length : 10

[192h 0402   1]      Proximity Domain Low(8) : 01
[193h 0403   1]                      Apic ID : 2C
[194h 0404   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[198h 0408   1]              Local Sapic EID : 00
[199h 0409   3]    Proximity Domain High(24) : 000000
[19Ch 0412   4]                 Clock Domain : 00000000

[1A0h 0416   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1A1h 0417   1]                       Length : 10

[1A2h 0418   1]      Proximity Domain Low(8) : 01
[1A3h 0419   1]                      Apic ID : 2D
[1A4h 0420   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[1A8h 0424   1]              Local Sapic EID : 00
[1A9h 0425   3]    Proximity Domain High(24) : 000000
[1ACh 0428   4]                 Clock Domain : 00000000

[1B0h 0432   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1B1h 0433   1]                       Length : 10

[1B2h 0434   1]      Proximity Domain Low(8) : 01
[1B3h 0435   1]                      Apic ID : 2E
[1B4h 0436   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[1B8h 0440   1]              Local Sapic EID : 00
[1B9h 0441   3]    Proximity Domain High(24) : 000000
[1BCh 0444   4]                 Clock Domain : 00000000

[1C0h 0448   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1C1h 0449   1]                       Length : 10

[1C2h 0450   1]      Proximity Domain Low(8) : 01
[1C3h 0451   1]                      Apic ID : 2F
[1C4h 0452   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[1C8h 0456   1]              Local Sapic EID : 00
[1C9h 0457   3]    Proximity Domain High(24) : 000000
[1CCh 0460   4]                 Clock Domain : 00000000

[1D0h 0464   1]                Subtable Type : 01 [Memory Affinity]
[1D1h 0465   1]                       Length : 28

[1D2h 0466   4]             Proximity Domain : 00000002
[1D6h 0470   2]                    Reserved1 : 0000
[1D8h 0472   8]                 Base Address : 0000000828000000
[1E0h 0480   8]               Address Length : 0000000400000000
[1E8h 0488   4]                    Reserved2 : 00000000
[1ECh 0492   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[1F0h 0496   8]                    Reserved3 : 0000000000000000

[1F8h 0504   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1F9h 0505   1]                       Length : 10

[1FAh 0506   1]      Proximity Domain Low(8) : 02
[1FBh 0507   1]                      Apic ID : 40
[1FCh 0508   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[200h 0512   1]              Local Sapic EID : 00
[201h 0513   3]    Proximity Domain High(24) : 000000
[204h 0516   4]                 Clock Domain : 00000000

[208h 0520   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[209h 0521   1]                       Length : 10

[20Ah 0522   1]      Proximity Domain Low(8) : 02
[20Bh 0523   1]                      Apic ID : 41
[20Ch 0524   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[210h 0528   1]              Local Sapic EID : 00
[211h 0529   3]    Proximity Domain High(24) : 000000
[214h 0532   4]                 Clock Domain : 00000000

[218h 0536   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[219h 0537   1]                       Length : 10

[21Ah 0538   1]      Proximity Domain Low(8) : 02
[21Bh 0539   1]                      Apic ID : 42
[21Ch 0540   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[220h 0544   1]              Local Sapic EID : 00
[221h 0545   3]    Proximity Domain High(24) : 000000
[224h 0548   4]                 Clock Domain : 00000000

[228h 0552   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[229h 0553   1]                       Length : 10

[22Ah 0554   1]      Proximity Domain Low(8) : 02
[22Bh 0555   1]                      Apic ID : 43
[22Ch 0556   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[230h 0560   1]              Local Sapic EID : 00
[231h 0561   3]    Proximity Domain High(24) : 000000
[234h 0564   4]                 Clock Domain : 00000000

[238h 0568   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[239h 0569   1]                       Length : 10

[23Ah 0570   1]      Proximity Domain Low(8) : 02
[23Bh 0571   1]                      Apic ID : 44
[23Ch 0572   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[240h 0576   1]              Local Sapic EID : 00
[241h 0577   3]    Proximity Domain High(24) : 000000
[244h 0580   4]                 Clock Domain : 00000000

[248h 0584   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[249h 0585   1]                       Length : 10

[24Ah 0586   1]      Proximity Domain Low(8) : 02
[24Bh 0587   1]                      Apic ID : 45
[24Ch 0588   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[250h 0592   1]              Local Sapic EID : 00
[251h 0593   3]    Proximity Domain High(24) : 000000
[254h 0596   4]                 Clock Domain : 00000000

[258h 0600   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[259h 0601   1]                       Length : 10

[25Ah 0602   1]      Proximity Domain Low(8) : 02
[25Bh 0603   1]                      Apic ID : 46
[25Ch 0604   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[260h 0608   1]              Local Sapic EID : 00
[261h 0609   3]    Proximity Domain High(24) : 000000
[264h 0612   4]                 Clock Domain : 00000000

[268h 0616   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[269h 0617   1]                       Length : 10

[26Ah 0618   1]      Proximity Domain Low(8) : 02
[26Bh 0619   1]                      Apic ID : 47
[26Ch 0620   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[270h 0624   1]              Local Sapic EID : 00
[271h 0625   3]    Proximity Domain High(24) : 000000
[274h 0628   4]                 Clock Domain : 00000000

[278h 0632   1]                Subtable Type : 01 [Memory Affinity]
[279h 0633   1]                       Length : 28

[27Ah 0634   4]             Proximity Domain : 00000003
[27Eh 0638   2]                    Reserved1 : 0000
[280h 0640   8]                 Base Address : 0000000C28000000
[288h 0648   8]               Address Length : 0000000400000000
[290h 0656   4]                    Reserved2 : 00000000
[294h 0660   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[298h 0664   8]                    Reserved3 : 0000000000000000

[2A0h 0672   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2A1h 0673   1]                       Length : 10

[2A2h 0674   1]      Proximity Domain Low(8) : 03
[2A3h 0675   1]                      Apic ID : 48
[2A4h 0676   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2A8h 0680   1]              Local Sapic EID : 00
[2A9h 0681   3]    Proximity Domain High(24) : 000000
[2ACh 0684   4]                 Clock Domain : 00000000

[2B0h 0688   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2B1h 0689   1]                       Length : 10

[2B2h 0690   1]      Proximity Domain Low(8) : 03
[2B3h 0691   1]                      Apic ID : 49
[2B4h 0692   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2B8h 0696   1]              Local Sapic EID : 00
[2B9h 0697   3]    Proximity Domain High(24) : 000000
[2BCh 0700   4]                 Clock Domain : 00000000

[2C0h 0704   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2C1h 0705   1]                       Length : 10

[2C2h 0706   1]      Proximity Domain Low(8) : 03
[2C3h 0707   1]                      Apic ID : 4A
[2C4h 0708   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2C8h 0712   1]              Local Sapic EID : 00
[2C9h 0713   3]    Proximity Domain High(24) : 000000
[2CCh 0716   4]                 Clock Domain : 00000000

[2D0h 0720   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2D1h 0721   1]                       Length : 10

[2D2h 0722   1]      Proximity Domain Low(8) : 03
[2D3h 0723   1]                      Apic ID : 4B
[2D4h 0724   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2D8h 0728   1]              Local Sapic EID : 00
[2D9h 0729   3]    Proximity Domain High(24) : 000000
[2DCh 0732   4]                 Clock Domain : 00000000

[2E0h 0736   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2E1h 0737   1]                       Length : 10

[2E2h 0738   1]      Proximity Domain Low(8) : 03
[2E3h 0739   1]                      Apic ID : 4C
[2E4h 0740   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2E8h 0744   1]              Local Sapic EID : 00
[2E9h 0745   3]    Proximity Domain High(24) : 000000
[2ECh 0748   4]                 Clock Domain : 00000000

[2F0h 0752   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2F1h 0753   1]                       Length : 10

[2F2h 0754   1]      Proximity Domain Low(8) : 03
[2F3h 0755   1]                      Apic ID : 4D
[2F4h 0756   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[2F8h 0760   1]              Local Sapic EID : 00
[2F9h 0761   3]    Proximity Domain High(24) : 000000
[2FCh 0764   4]                 Clock Domain : 00000000

[300h 0768   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[301h 0769   1]                       Length : 10

[302h 0770   1]      Proximity Domain Low(8) : 03
[303h 0771   1]                      Apic ID : 4E
[304h 0772   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[308h 0776   1]              Local Sapic EID : 00
[309h 0777   3]    Proximity Domain High(24) : 000000
[30Ch 0780   4]                 Clock Domain : 00000000

[310h 0784   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[311h 0785   1]                       Length : 10

[312h 0786   1]      Proximity Domain Low(8) : 03
[313h 0787   1]                      Apic ID : 4F
[314h 0788   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[318h 0792   1]              Local Sapic EID : 00
[319h 0793   3]    Proximity Domain High(24) : 000000
[31Ch 0796   4]                 Clock Domain : 00000000

[320h 0800   1]                Subtable Type : 01 [Memory Affinity]
[321h 0801   1]                       Length : 28

[322h 0802   4]             Proximity Domain : 00000004
[326h 0806   2]                    Reserved1 : 0000
[328h 0808   8]                 Base Address : 0000001028000000
[330h 0816   8]               Address Length : 0000000400000000
[338h 0824   4]                    Reserved2 : 00000000
[33Ch 0828   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[340h 0832   8]                    Reserved3 : 0000000000000000

[348h 0840   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[349h 0841   1]                       Length : 10

[34Ah 0842   1]      Proximity Domain Low(8) : 04
[34Bh 0843   1]                      Apic ID : 60
[34Ch 0844   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[350h 0848   1]              Local Sapic EID : 00
[351h 0849   3]    Proximity Domain High(24) : 000000
[354h 0852   4]                 Clock Domain : 00000000

[358h 0856   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[359h 0857   1]                       Length : 10

[35Ah 0858   1]      Proximity Domain Low(8) : 04
[35Bh 0859   1]                      Apic ID : 61
[35Ch 0860   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[360h 0864   1]              Local Sapic EID : 00
[361h 0865   3]    Proximity Domain High(24) : 000000
[364h 0868   4]                 Clock Domain : 00000000

[368h 0872   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[369h 0873   1]                       Length : 10

[36Ah 0874   1]      Proximity Domain Low(8) : 04
[36Bh 0875   1]                      Apic ID : 62
[36Ch 0876   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[370h 0880   1]              Local Sapic EID : 00
[371h 0881   3]    Proximity Domain High(24) : 000000
[374h 0884   4]                 Clock Domain : 00000000

[378h 0888   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[379h 0889   1]                       Length : 10

[37Ah 0890   1]      Proximity Domain Low(8) : 04
[37Bh 0891   1]                      Apic ID : 63
[37Ch 0892   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[380h 0896   1]              Local Sapic EID : 00
[381h 0897   3]    Proximity Domain High(24) : 000000
[384h 0900   4]                 Clock Domain : 00000000

[388h 0904   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[389h 0905   1]                       Length : 10

[38Ah 0906   1]      Proximity Domain Low(8) : 04
[38Bh 0907   1]                      Apic ID : 64
[38Ch 0908   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[390h 0912   1]              Local Sapic EID : 00
[391h 0913   3]    Proximity Domain High(24) : 000000
[394h 0916   4]                 Clock Domain : 00000000

[398h 0920   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[399h 0921   1]                       Length : 10

[39Ah 0922   1]      Proximity Domain Low(8) : 04
[39Bh 0923   1]                      Apic ID : 65
[39Ch 0924   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[3A0h 0928   1]              Local Sapic EID : 00
[3A1h 0929   3]    Proximity Domain High(24) : 000000
[3A4h 0932   4]                 Clock Domain : 00000000

[3A8h 0936   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3A9h 0937   1]                       Length : 10

[3AAh 0938   1]      Proximity Domain Low(8) : 04
[3ABh 0939   1]                      Apic ID : 66
[3ACh 0940   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[3B0h 0944   1]              Local Sapic EID : 00
[3B1h 0945   3]    Proximity Domain High(24) : 000000
[3B4h 0948   4]                 Clock Domain : 00000000

[3B8h 0952   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3B9h 0953   1]                       Length : 10

[3BAh 0954   1]      Proximity Domain Low(8) : 04
[3BBh 0955   1]                      Apic ID : 67
[3BCh 0956   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[3C0h 0960   1]              Local Sapic EID : 00
[3C1h 0961   3]    Proximity Domain High(24) : 000000
[3C4h 0964   4]                 Clock Domain : 00000000

[3C8h 0968   1]                Subtable Type : 01 [Memory Affinity]
[3C9h 0969   1]                       Length : 28

[3CAh 0970   4]             Proximity Domain : 00000005
[3CEh 0974   2]                    Reserved1 : 0000
[3D0h 0976   8]                 Base Address : 0000001428000000
[3D8h 0984   8]               Address Length : 0000000400000000
[3E0h 0992   4]                    Reserved2 : 00000000
[3E4h 0996   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[3E8h 1000   8]                    Reserved3 : 0000000000000000

[3F0h 1008   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3F1h 1009   1]                       Length : 10

[3F2h 1010   1]      Proximity Domain Low(8) : 05
[3F3h 1011   1]                      Apic ID : 68
[3F4h 1012   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[3F8h 1016   1]              Local Sapic EID : 00
[3F9h 1017   3]    Proximity Domain High(24) : 000000
[3FCh 1020   4]                 Clock Domain : 00000000

[400h 1024   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[401h 1025   1]                       Length : 10

[402h 1026   1]      Proximity Domain Low(8) : 05
[403h 1027   1]                      Apic ID : 69
[404h 1028   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[408h 1032   1]              Local Sapic EID : 00
[409h 1033   3]    Proximity Domain High(24) : 000000
[40Ch 1036   4]                 Clock Domain : 00000000

[410h 1040   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[411h 1041   1]                       Length : 10

[412h 1042   1]      Proximity Domain Low(8) : 05
[413h 1043   1]                      Apic ID : 6A
[414h 1044   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[418h 1048   1]              Local Sapic EID : 00
[419h 1049   3]    Proximity Domain High(24) : 000000
[41Ch 1052   4]                 Clock Domain : 00000000

[420h 1056   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[421h 1057   1]                       Length : 10

[422h 1058   1]      Proximity Domain Low(8) : 05
[423h 1059   1]                      Apic ID : 6B
[424h 1060   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[428h 1064   1]              Local Sapic EID : 00
[429h 1065   3]    Proximity Domain High(24) : 000000
[42Ch 1068   4]                 Clock Domain : 00000000

[430h 1072   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[431h 1073   1]                       Length : 10

[432h 1074   1]      Proximity Domain Low(8) : 05
[433h 1075   1]                      Apic ID : 6C
[434h 1076   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[438h 1080   1]              Local Sapic EID : 00
[439h 1081   3]    Proximity Domain High(24) : 000000
[43Ch 1084   4]                 Clock Domain : 00000000

[440h 1088   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[441h 1089   1]                       Length : 10

[442h 1090   1]      Proximity Domain Low(8) : 05
[443h 1091   1]                      Apic ID : 6D
[444h 1092   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[448h 1096   1]              Local Sapic EID : 00
[449h 1097   3]    Proximity Domain High(24) : 000000
[44Ch 1100   4]                 Clock Domain : 00000000

[450h 1104   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[451h 1105   1]                       Length : 10

[452h 1106   1]      Proximity Domain Low(8) : 05
[453h 1107   1]                      Apic ID : 6E
[454h 1108   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[458h 1112   1]              Local Sapic EID : 00
[459h 1113   3]    Proximity Domain High(24) : 000000
[45Ch 1116   4]                 Clock Domain : 00000000

[460h 1120   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[461h 1121   1]                       Length : 10

[462h 1122   1]      Proximity Domain Low(8) : 05
[463h 1123   1]                      Apic ID : 6F
[464h 1124   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[468h 1128   1]              Local Sapic EID : 00
[469h 1129   3]    Proximity Domain High(24) : 000000
[46Ch 1132   4]                 Clock Domain : 00000000

[470h 1136   1]                Subtable Type : 01 [Memory Affinity]
[471h 1137   1]                       Length : 28

[472h 1138   4]             Proximity Domain : 00000006
[476h 1142   2]                    Reserved1 : 0000
[478h 1144   8]                 Base Address : 0000001828000000
[480h 1152   8]               Address Length : 0000000400000000
[488h 1160   4]                    Reserved2 : 00000000
[48Ch 1164   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[490h 1168   8]                    Reserved3 : 0000000000000000

[498h 1176   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[499h 1177   1]                       Length : 10

[49Ah 1178   1]      Proximity Domain Low(8) : 06
[49Bh 1179   1]                      Apic ID : 80
[49Ch 1180   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4A0h 1184   1]              Local Sapic EID : 00
[4A1h 1185   3]    Proximity Domain High(24) : 000000
[4A4h 1188   4]                 Clock Domain : 00000000

[4A8h 1192   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4A9h 1193   1]                       Length : 10

[4AAh 1194   1]      Proximity Domain Low(8) : 06
[4ABh 1195   1]                      Apic ID : 81
[4ACh 1196   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4B0h 1200   1]              Local Sapic EID : 00
[4B1h 1201   3]    Proximity Domain High(24) : 000000
[4B4h 1204   4]                 Clock Domain : 00000000

[4B8h 1208   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4B9h 1209   1]                       Length : 10

[4BAh 1210   1]      Proximity Domain Low(8) : 06
[4BBh 1211   1]                      Apic ID : 82
[4BCh 1212   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4C0h 1216   1]              Local Sapic EID : 00
[4C1h 1217   3]    Proximity Domain High(24) : 000000
[4C4h 1220   4]                 Clock Domain : 00000000

[4C8h 1224   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4C9h 1225   1]                       Length : 10

[4CAh 1226   1]      Proximity Domain Low(8) : 06
[4CBh 1227   1]                      Apic ID : 83
[4CCh 1228   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4D0h 1232   1]              Local Sapic EID : 00
[4D1h 1233   3]    Proximity Domain High(24) : 000000
[4D4h 1236   4]                 Clock Domain : 00000000

[4D8h 1240   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4D9h 1241   1]                       Length : 10

[4DAh 1242   1]      Proximity Domain Low(8) : 06
[4DBh 1243   1]                      Apic ID : 84
[4DCh 1244   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4E0h 1248   1]              Local Sapic EID : 00
[4E1h 1249   3]    Proximity Domain High(24) : 000000
[4E4h 1252   4]                 Clock Domain : 00000000

[4E8h 1256   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4E9h 1257   1]                       Length : 10

[4EAh 1258   1]      Proximity Domain Low(8) : 06
[4EBh 1259   1]                      Apic ID : 85
[4ECh 1260   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[4F0h 1264   1]              Local Sapic EID : 00
[4F1h 1265   3]    Proximity Domain High(24) : 000000
[4F4h 1268   4]                 Clock Domain : 00000000

[4F8h 1272   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[4F9h 1273   1]                       Length : 10

[4FAh 1274   1]      Proximity Domain Low(8) : 06
[4FBh 1275   1]                      Apic ID : 86
[4FCh 1276   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[500h 1280   1]              Local Sapic EID : 00
[501h 1281   3]    Proximity Domain High(24) : 000000
[504h 1284   4]                 Clock Domain : 00000000

[508h 1288   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[509h 1289   1]                       Length : 10

[50Ah 1290   1]      Proximity Domain Low(8) : 06
[50Bh 1291   1]                      Apic ID : 87
[50Ch 1292   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[510h 1296   1]              Local Sapic EID : 00
[511h 1297   3]    Proximity Domain High(24) : 000000
[514h 1300   4]                 Clock Domain : 00000000

[518h 1304   1]                Subtable Type : 01 [Memory Affinity]
[519h 1305   1]                       Length : 28

[51Ah 1306   4]             Proximity Domain : 00000007
[51Eh 1310   2]                    Reserved1 : 0000
[520h 1312   8]                 Base Address : 0000001C28000000
[528h 1320   8]               Address Length : 0000000400000000
[530h 1328   4]                    Reserved2 : 00000000
[534h 1332   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[538h 1336   8]                    Reserved3 : 0000000000000000

[540h 1344   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[541h 1345   1]                       Length : 10

[542h 1346   1]      Proximity Domain Low(8) : 07
[543h 1347   1]                      Apic ID : 88
[544h 1348   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[548h 1352   1]              Local Sapic EID : 00
[549h 1353   3]    Proximity Domain High(24) : 000000
[54Ch 1356   4]                 Clock Domain : 00000000

[550h 1360   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[551h 1361   1]                       Length : 10

[552h 1362   1]      Proximity Domain Low(8) : 07
[553h 1363   1]                      Apic ID : 89
[554h 1364   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[558h 1368   1]              Local Sapic EID : 00
[559h 1369   3]    Proximity Domain High(24) : 000000
[55Ch 1372   4]                 Clock Domain : 00000000

[560h 1376   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[561h 1377   1]                       Length : 10

[562h 1378   1]      Proximity Domain Low(8) : 07
[563h 1379   1]                      Apic ID : 8A
[564h 1380   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[568h 1384   1]              Local Sapic EID : 00
[569h 1385   3]    Proximity Domain High(24) : 000000
[56Ch 1388   4]                 Clock Domain : 00000000

[570h 1392   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[571h 1393   1]                       Length : 10

[572h 1394   1]      Proximity Domain Low(8) : 07
[573h 1395   1]                      Apic ID : 8B
[574h 1396   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[578h 1400   1]              Local Sapic EID : 00
[579h 1401   3]    Proximity Domain High(24) : 000000
[57Ch 1404   4]                 Clock Domain : 00000000

[580h 1408   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[581h 1409   1]                       Length : 10

[582h 1410   1]      Proximity Domain Low(8) : 07
[583h 1411   1]                      Apic ID : 8C
[584h 1412   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[588h 1416   1]              Local Sapic EID : 00
[589h 1417   3]    Proximity Domain High(24) : 000000
[58Ch 1420   4]                 Clock Domain : 00000000

[590h 1424   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[591h 1425   1]                       Length : 10

[592h 1426   1]      Proximity Domain Low(8) : 07
[593h 1427   1]                      Apic ID : 8D
[594h 1428   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[598h 1432   1]              Local Sapic EID : 00
[599h 1433   3]    Proximity Domain High(24) : 000000
[59Ch 1436   4]                 Clock Domain : 00000000

[5A0h 1440   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[5A1h 1441   1]                       Length : 10

[5A2h 1442   1]      Proximity Domain Low(8) : 07
[5A3h 1443   1]                      Apic ID : 8E
[5A4h 1444   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[5A8h 1448   1]              Local Sapic EID : 00
[5A9h 1449   3]    Proximity Domain High(24) : 000000
[5ACh 1452   4]                 Clock Domain : 00000000

[5B0h 1456   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[5B1h 1457   1]                       Length : 10

[5B2h 1458   1]      Proximity Domain Low(8) : 07
[5B3h 1459   1]                      Apic ID : 8F
[5B4h 1460   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[5B8h 1464   1]              Local Sapic EID : 00
[5B9h 1465   3]    Proximity Domain High(24) : 000000
[5BCh 1468   4]                 Clock Domain : 00000000

Raw Table Data: Length 1472 (0x5C0)

    0000: 53 52 41 54 C0 05 00 00 02 A6 41 4D 44 20 20 20  // SRAT......AMD   
    0010: 41 47 45 53 41 20 20 20 01 00 00 00 41 4D 44 20  // AGESA   ....AMD 
    0020: 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 01 28 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 00 00 0A 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 01 28 00 00 00 00 00 00  // .........(......
    0060: 00 00 10 00 00 00 00 00 00 00 F0 D7 00 00 00 00  // ................
    0070: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 01 28 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // .(..............
    0090: 00 00 00 28 03 00 00 00 00 00 00 00 01 00 00 00  // ...(............
    00A0: 00 00 00 00 00 00 00 00 00 10 00 20 01 00 00 00  // ........... ....
    00B0: 00 00 00 00 00 00 00 00 00 10 00 21 01 00 00 00  // ...........!....
    00C0: 00 00 00 00 00 00 00 00 00 10 00 22 01 00 00 00  // ..........."....
    00D0: 00 00 00 00 00 00 00 00 00 10 00 23 01 00 00 00  // ...........#....
    00E0: 00 00 00 00 00 00 00 00 00 10 00 24 01 00 00 00  // ...........$....
    00F0: 00 00 00 00 00 00 00 00 00 10 00 25 01 00 00 00  // ...........%....
    0100: 00 00 00 00 00 00 00 00 00 10 00 26 01 00 00 00  // ...........&....
    0110: 00 00 00 00 00 00 00 00 00 10 00 27 01 00 00 00  // ...........'....
    0120: 00 00 00 00 00 00 00 00 01 28 01 00 00 00 00 00  // .........(......
    0130: 00 00 00 28 04 00 00 00 00 00 00 00 04 00 00 00  // ...(............
    0140: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0150: 00 10 01 28 01 00 00 00 00 00 00 00 00 00 00 00  // ...(............
    0160: 00 10 01 29 01 00 00 00 00 00 00 00 00 00 00 00  // ...)............
    0170: 00 10 01 2A 01 00 00 00 00 00 00 00 00 00 00 00  // ...*............
    0180: 00 10 01 2B 01 00 00 00 00 00 00 00 00 00 00 00  // ...+............
    0190: 00 10 01 2C 01 00 00 00 00 00 00 00 00 00 00 00  // ...,............
    01A0: 00 10 01 2D 01 00 00 00 00 00 00 00 00 00 00 00  // ...-............
    01B0: 00 10 01 2E 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    01C0: 00 10 01 2F 01 00 00 00 00 00 00 00 00 00 00 00  // .../............
    01D0: 01 28 02 00 00 00 00 00 00 00 00 28 08 00 00 00  // .(.........(....
    01E0: 00 00 00 00 04 00 00 00 00 00 00 00 01 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 10 02 40 01 00 00 00  // ...........@....
    0200: 00 00 00 00 00 00 00 00 00 10 02 41 01 00 00 00  // ...........A....
    0210: 00 00 00 00 00 00 00 00 00 10 02 42 01 00 00 00  // ...........B....
    0220: 00 00 00 00 00 00 00 00 00 10 02 43 01 00 00 00  // ...........C....
    0230: 00 00 00 00 00 00 00 00 00 10 02 44 01 00 00 00  // ...........D....
    0240: 00 00 00 00 00 00 00 00 00 10 02 45 01 00 00 00  // ...........E....
    0250: 00 00 00 00 00 00 00 00 00 10 02 46 01 00 00 00  // ...........F....
    0260: 00 00 00 00 00 00 00 00 00 10 02 47 01 00 00 00  // ...........G....
    0270: 00 00 00 00 00 00 00 00 01 28 03 00 00 00 00 00  // .........(......
    0280: 00 00 00 28 0C 00 00 00 00 00 00 00 04 00 00 00  // ...(............
    0290: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    02A0: 00 10 03 48 01 00 00 00 00 00 00 00 00 00 00 00  // ...H............
    02B0: 00 10 03 49 01 00 00 00 00 00 00 00 00 00 00 00  // ...I............
    02C0: 00 10 03 4A 01 00 00 00 00 00 00 00 00 00 00 00  // ...J............
    02D0: 00 10 03 4B 01 00 00 00 00 00 00 00 00 00 00 00  // ...K............
    02E0: 00 10 03 4C 01 00 00 00 00 00 00 00 00 00 00 00  // ...L............
    02F0: 00 10 03 4D 01 00 00 00 00 00 00 00 00 00 00 00  // ...M............
    0300: 00 10 03 4E 01 00 00 00 00 00 00 00 00 00 00 00  // ...N............
    0310: 00 10 03 4F 01 00 00 00 00 00 00 00 00 00 00 00  // ...O............
    0320: 01 28 04 00 00 00 00 00 00 00 00 28 10 00 00 00  // .(.........(....
    0330: 00 00 00 00 04 00 00 00 00 00 00 00 01 00 00 00  // ................
    0340: 00 00 00 00 00 00 00 00 00 10 04 60 01 00 00 00  // ...........`....
    0350: 00 00 00 00 00 00 00 00 00 10 04 61 01 00 00 00  // ...........a....
    0360: 00 00 00 00 00 00 00 00 00 10 04 62 01 00 00 00  // ...........b....
    0370: 00 00 00 00 00 00 00 00 00 10 04 63 01 00 00 00  // ...........c....
    0380: 00 00 00 00 00 00 00 00 00 10 04 64 01 00 00 00  // ...........d....
    0390: 00 00 00 00 00 00 00 00 00 10 04 65 01 00 00 00  // ...........e....
    03A0: 00 00 00 00 00 00 00 00 00 10 04 66 01 00 00 00  // ...........f....
    03B0: 00 00 00 00 00 00 00 00 00 10 04 67 01 00 00 00  // ...........g....
    03C0: 00 00 00 00 00 00 00 00 01 28 05 00 00 00 00 00  // .........(......
    03D0: 00 00 00 28 14 00 00 00 00 00 00 00 04 00 00 00  // ...(............
    03E0: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 10 05 68 01 00 00 00 00 00 00 00 00 00 00 00  // ...h............
    0400: 00 10 05 69 01 00 00 00 00 00 00 00 00 00 00 00  // ...i............
    0410: 00 10 05 6A 01 00 00 00 00 00 00 00 00 00 00 00  // ...j............
    0420: 00 10 05 6B 01 00 00 00 00 00 00 00 00 00 00 00  // ...k............
    0430: 00 10 05 6C 01 00 00 00 00 00 00 00 00 00 00 00  // ...l............
    0440: 00 10 05 6D 01 00 00 00 00 00 00 00 00 00 00 00  // ...m............
    0450: 00 10 05 6E 01 00 00 00 00 00 00 00 00 00 00 00  // ...n............
    0460: 00 10 05 6F 01 00 00 00 00 00 00 00 00 00 00 00  // ...o............
    0470: 01 28 06 00 00 00 00 00 00 00 00 28 18 00 00 00  // .(.........(....
    0480: 00 00 00 00 04 00 00 00 00 00 00 00 01 00 00 00  // ................
    0490: 00 00 00 00 00 00 00 00 00 10 06 80 01 00 00 00  // ................
    04A0: 00 00 00 00 00 00 00 00 00 10 06 81 01 00 00 00  // ................
    04B0: 00 00 00 00 00 00 00 00 00 10 06 82 01 00 00 00  // ................
    04C0: 00 00 00 00 00 00 00 00 00 10 06 83 01 00 00 00  // ................
    04D0: 00 00 00 00 00 00 00 00 00 10 06 84 01 00 00 00  // ................
    04E0: 00 00 00 00 00 00 00 00 00 10 06 85 01 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 00 10 06 86 01 00 00 00  // ................
    0500: 00 00 00 00 00 00 00 00 00 10 06 87 01 00 00 00  // ................
    0510: 00 00 00 00 00 00 00 00 01 28 07 00 00 00 00 00  // .........(......
    0520: 00 00 00 28 1C 00 00 00 00 00 00 00 04 00 00 00  // ...(............
    0530: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0540: 00 10 07 88 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0550: 00 10 07 89 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0560: 00 10 07 8A 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0570: 00 10 07 8B 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0580: 00 10 07 8C 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0590: 00 10 07 8D 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    05A0: 00 10 07 8E 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    05B0: 00 10 07 8F 01 00 00 00 00 00 00 00 00 00 00 00  // ................


SSDT
----
DefinitionBlock ("", "SSDT", 1, "A M I ", "POWERNOW", 0x00000001)
{
    External (_PR_.P001, DeviceObj)
    External (_PR_.P002, DeviceObj)
    External (_PR_.P003, DeviceObj)
    External (_PR_.P004, DeviceObj)
    External (_PR_.P005, DeviceObj)
    External (_PR_.P006, DeviceObj)
    External (_PR_.P007, DeviceObj)
    External (_PR_.P008, DeviceObj)
    External (_PR_.P009, DeviceObj)
    External (_PR_.P00A, DeviceObj)
    External (_PR_.P00B, DeviceObj)
    External (_PR_.P00C, DeviceObj)
    External (_PR_.P00D, DeviceObj)
    External (_PR_.P00E, DeviceObj)
    External (_PR_.P00F, DeviceObj)
    External (_PR_.P010, DeviceObj)
    External (_PR_.P011, DeviceObj)
    External (_PR_.P012, DeviceObj)
    External (_PR_.P013, DeviceObj)
    External (_PR_.P014, DeviceObj)
    External (_PR_.P015, DeviceObj)
    External (_PR_.P016, DeviceObj)
    External (_PR_.P017, DeviceObj)
    External (_PR_.P018, DeviceObj)
    External (_PR_.P019, DeviceObj)
    External (_PR_.P01A, DeviceObj)
    External (_PR_.P01B, DeviceObj)
    External (_PR_.P01C, DeviceObj)
    External (_PR_.P01D, DeviceObj)
    External (_PR_.P01E, DeviceObj)
    External (_PR_.P01F, DeviceObj)
    External (_PR_.P020, DeviceObj)
    External (_PR_.P021, DeviceObj)
    External (_PR_.P022, DeviceObj)
    External (_PR_.P023, DeviceObj)
    External (_PR_.P024, DeviceObj)
    External (_PR_.P025, DeviceObj)
    External (_PR_.P026, DeviceObj)
    External (_PR_.P027, DeviceObj)
    External (_PR_.P028, DeviceObj)
    External (_PR_.P029, DeviceObj)
    External (_PR_.P02A, DeviceObj)
    External (_PR_.P02B, DeviceObj)
    External (_PR_.P02C, DeviceObj)
    External (_PR_.P02D, DeviceObj)
    External (_PR_.P02E, DeviceObj)
    External (_PR_.P02F, DeviceObj)
    External (_PR_.P030, DeviceObj)
    External (_PR_.P031, DeviceObj)
    External (_PR_.P032, DeviceObj)
    External (_PR_.P033, DeviceObj)
    External (_PR_.P034, DeviceObj)
    External (_PR_.P035, DeviceObj)
    External (_PR_.P036, DeviceObj)
    External (_PR_.P037, DeviceObj)
    External (_PR_.P038, DeviceObj)
    External (_PR_.P039, DeviceObj)
    External (_PR_.P03A, DeviceObj)
    External (_PR_.P03B, DeviceObj)
    External (_PR_.P03C, DeviceObj)
    External (_PR_.P03D, DeviceObj)
    External (_PR_.P03E, DeviceObj)
    External (_PR_.P03F, DeviceObj)
    External (_PR_.P040, DeviceObj)

    Scope (\_PR.P001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P001.PPCV */
        }
    }

    Scope (\_PR.P002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P002.PPCV */
        }
    }

    Scope (\_PR.P003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P003.PPCV */
        }
    }

    Scope (\_PR.P004)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P004.PPCV */
        }
    }

    Scope (\_PR.P005)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P005.PPCV */
        }
    }

    Scope (\_PR.P006)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P006.PPCV */
        }
    }

    Scope (\_PR.P007)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P007.PPCV */
        }
    }

    Scope (\_PR.P008)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P008.PPCV */
        }
    }

    Scope (\_PR.P009)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P009.PPCV */
        }
    }

    Scope (\_PR.P00A)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00A.PPCV */
        }
    }

    Scope (\_PR.P00B)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00B.PPCV */
        }
    }

    Scope (\_PR.P00C)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00C.PPCV */
        }
    }

    Scope (\_PR.P00D)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00D.PPCV */
        }
    }

    Scope (\_PR.P00E)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00E.PPCV */
        }
    }

    Scope (\_PR.P00F)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P00F.PPCV */
        }
    }

    Scope (\_PR.P010)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P010.PPCV */
        }
    }

    Scope (\_PR.P011)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P011.PPCV */
        }
    }

    Scope (\_PR.P012)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P012.PPCV */
        }
    }

    Scope (\_PR.P013)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P013.PPCV */
        }
    }

    Scope (\_PR.P014)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P014.PPCV */
        }
    }

    Scope (\_PR.P015)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P015.PPCV */
        }
    }

    Scope (\_PR.P016)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P016.PPCV */
        }
    }

    Scope (\_PR.P017)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P017.PPCV */
        }
    }

    Scope (\_PR.P018)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P018.PPCV */
        }
    }

    Scope (\_PR.P019)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P019.PPCV */
        }
    }

    Scope (\_PR.P01A)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01A.PPCV */
        }
    }

    Scope (\_PR.P01B)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01B.PPCV */
        }
    }

    Scope (\_PR.P01C)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01C.PPCV */
        }
    }

    Scope (\_PR.P01D)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01D.PPCV */
        }
    }

    Scope (\_PR.P01E)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01E.PPCV */
        }
    }

    Scope (\_PR.P01F)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P01F.PPCV */
        }
    }

    Scope (\_PR.P020)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P020.PPCV */
        }
    }

    Scope (\_PR.P021)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P021.PPCV */
        }
    }

    Scope (\_PR.P022)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P022.PPCV */
        }
    }

    Scope (\_PR.P023)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P023.PPCV */
        }
    }

    Scope (\_PR.P024)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P024.PPCV */
        }
    }

    Scope (\_PR.P025)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P025.PPCV */
        }
    }

    Scope (\_PR.P026)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P026.PPCV */
        }
    }

    Scope (\_PR.P027)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P027.PPCV */
        }
    }

    Scope (\_PR.P028)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P028.PPCV */
        }
    }

    Scope (\_PR.P029)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P029.PPCV */
        }
    }

    Scope (\_PR.P02A)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02A.PPCV */
        }
    }

    Scope (\_PR.P02B)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02B.PPCV */
        }
    }

    Scope (\_PR.P02C)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02C.PPCV */
        }
    }

    Scope (\_PR.P02D)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02D.PPCV */
        }
    }

    Scope (\_PR.P02E)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02E.PPCV */
        }
    }

    Scope (\_PR.P02F)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P02F.PPCV */
        }
    }

    Scope (\_PR.P030)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P030.PPCV */
        }
    }

    Scope (\_PR.P031)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P031.PPCV */
        }
    }

    Scope (\_PR.P032)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P032.PPCV */
        }
    }

    Scope (\_PR.P033)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P033.PPCV */
        }
    }

    Scope (\_PR.P034)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P034.PPCV */
        }
    }

    Scope (\_PR.P035)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P035.PPCV */
        }
    }

    Scope (\_PR.P036)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P036.PPCV */
        }
    }

    Scope (\_PR.P037)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P037.PPCV */
        }
    }

    Scope (\_PR.P038)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P038.PPCV */
        }
    }

    Scope (\_PR.P039)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P039.PPCV */
        }
    }

    Scope (\_PR.P03A)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03A.PPCV */
        }
    }

    Scope (\_PR.P03B)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03B.PPCV */
        }
    }

    Scope (\_PR.P03C)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03C.PPCV */
        }
    }

    Scope (\_PR.P03D)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03D.PPCV */
        }
    }

    Scope (\_PR.P03E)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03E.PPCV */
        }
    }

    Scope (\_PR.P03F)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P03F.PPCV */
        }
    }

    Scope (\_PR.P040)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x02)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                0x00000004, 
                0x00000004
            }
        })
        Name (XPSS, Package (0x02)
        {
            Package (0x08)
            {
                0x000009C4, 
                0x000017BB, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x00000C22, 
                0x00000005, 
                0x00000005, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.P040.PPCV */
        }
    }
}



